<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CyMaIS Presentation</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.3.1/reveal.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.3.1/theme/black.min.css">
</head>
<body>
    <div class="reveal">
        <div class="slides">
            
            <section>
                <h2>System Maintenance Lock</h2>
                <div><h1>Role: System-Maintenance-Lock</h1>
<h2>Overview</h2>
<p>The <code>system-maintenance-lock</code> role is a critical part of maintaining the integrity and performance of a system. It ensures that specific services are not interrupted or conflicted with by other system processes. This role is particularly vital during system updates, backups, or other maintenance activities where conflicting processes could cause issues.</p>
<h2>Usage</h2>
<p>This role is used in scenarios where system stability and integrity are paramount, such as during system upgrades, backup processes, or when applying critical patches.</p>
<h2>Created with AI</h2>
<p>Created with ChatGPT. Conversation is <a href="https://chat.openai.com/share/a886b86b-8de6-4eca-9fba-e36c9f20d536">here</a> available.</p></div>
            </section>
            
            <section>
                <h2>Pc Qbittorrent</h2>
                <div><h1>PC-QBittorrent Role</h1>
<h2>Overview</h2>
<p>This README is for the <code>pc-qbittorrent</code> role within the <code>cymais</code> repository. This role is specifically crafted for installing qBittorrent, a popular open-source torrent client, on personal computers.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-qbittorrent</code> role includes the following task:</p>
<ol>
<li><strong>Install Torrent Software</strong>:</li>
<li>This task uses the <code>kewlfft.aur.aur</code> module with <code>yay</code> as the AUR helper to install <code>qbittorrent</code>, a widely-used, free, and easy-to-use torrent client.</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>system-aur-helper</strong>: Ensures that an Arch User Repository (AUR) helper is installed, which is necessary for installing packages like <code>qbittorrent</code> that are not available in the standard repositories.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-qbittorrent</code> role is tailored for users who require a reliable and user-friendly torrent client for downloading and sharing files via the BitTorrent protocol. qBittorrent is known for its balance of features, simplicity, and minimal impact on system resources.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: The role is designed with Arch Linux distributions in mind, leveraging AUR helpers for package installation.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-qbittorrent</code> directory.
3. Execute the role using Ansible, ensuring you have the required system permissions for package installation.</p>
<h2>Customization</h2>
<p>This role is primarily focused on installing qBittorrent, but it can be customized to include additional configurations or related software packages as needed.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as enhancing the role or adding additional torrent-related functionality, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the usability or features of qBittorrent within this role are highly appreciated.</p></div>
            </section>
            
            <section>
                <h2>Pc Designer Tools</h2>
                <div><h1>PC-Designer-Tools Role</h1>
<h2>Overview</h2>
<p>This README is associated with the <code>pc-designer-tools</code> role, part of the <code>cymais</code> repository. This role focuses on setting up a suite of essential design tools on personal computers, catering specifically to the needs of graphic designers, illustrators, and digital artists.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file in the <code>pc-designer-tools</code> role encompasses tasks for installing popular design software:</p>
<ol>
<li><strong>Install Designer Tools</strong>: This task uses the <code>community.general.pacman</code> module to install:</li>
<li><code>gimp</code>: A free and open-source raster graphics editor, used for image retouching and editing, free-form drawing, converting between different image formats, and more specialized tasks.</li>
<li>
<p><code>blender</code>: A free and open-source 3D creation suite supporting the entirety of the 3D pipeline—modeling, rigging, animation, simulation, rendering, compositing, and motion tracking, even video editing and game creation.</p>
</li>
<li>
<p><strong>Install drawio</strong>: A separate task that uses the <code>kewlfft.aur.aur</code> module (with <code>yay</code> as the helper) to install <code>drawio-desktop</code>, a diagram software used for creating a wide range of diagrams and flowcharts.</p>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>system-aur-helper</strong>: Ensures that an AUR (Arch User Repository) helper is available, which is necessary for installing packages like <code>drawio-desktop</code> that are not in the standard repositories.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-designer-tools</code> role is intended for users who require a robust set of tools for graphic design, 3D modeling, and diagram creation. It simplifies the process of setting up a comprehensive design environment on Arch Linux-based systems.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: As the role uses <code>pacman</code> and AUR helpers, it is tailored for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-designer-tools</code> directory.
3. Execute the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>This role can be customized by adding or removing software packages in the <code>main.yml</code> file to match the specific needs of the user.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more tools or improving the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the role for designers are greatly appreciated.</p></div>
            </section>
            
            <section>
                <h2>Pc Video Conference</h2>
                <div><h1>PC-Video-Conference Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-video-conference</code> role documentation, a part of the <code>cymais</code> repository. This role is focused on installing video conferencing software on Linux systems, specifically tailored for personal use and remote work requirements.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-video-conference</code> role includes tasks for setting up video conferencing tools:</p>
<ol>
<li><strong>Install Video Conference Software</strong>:</li>
<li>Utilizes the <code>kewlfft.aur.aur</code> module with <code>yay</code> as the helper to install <code>zoom</code>, a popular video conferencing application.</li>
</ol>
<h2>Further Information</h2>
<ul>
<li>As noted, the Microsoft Teams client is no longer natively supported on Linux. For more information and potential workarounds, you can visit the <a href="https://aur.archlinux.org/packages/teams">AUR package page for Teams</a>.</li>
</ul>
<h2>Dependencies</h2>
<p>This role relies on:
- <strong>system-aur-helper</strong>: Ensures that an Arch User Repository (AUR) helper is installed, necessary for installing software like Zoom which may not be available in standard repositories.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-video-conference</code> role is particularly useful for professionals, educators, and anyone who needs reliable video conferencing capabilities on their Linux system. With the increasing demand for remote communication, this role provides an efficient way to set up key video conferencing tools.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required to run this role.</li>
<li><strong>Arch Linux-based System</strong>: Given the use of <code>yay</code> and AUR, this role is designed for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-video-conference</code> directory.
3. Run the role using Ansible, ensuring you have appropriate system permissions for software installation.</p>
<h2>Customization</h2>
<p>You can customize this role by adding or modifying the video conferencing tools installed. For example, if there's a need for other applications like Skype or Google Meet, these can be included in the task list.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding support for additional video conferencing tools or improving existing configurations, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the role's functionality are highly welcome.</p></div>
            </section>
            
            <section>
                <h2>Docker Joomla</h2>
                <div><h1>role docker-joomla</h1>
<h2>delete all data</h2>
<p><code>bash
docker stop joomla_application_1;  docker rm -f joomla_application_1; docker volume rm -f joomla-data;
docker stop joomla_database_1;  docker rm -f joomla_database_1; docker volume rm -f joomla-database;</code></p></div>
            </section>
            
            <section>
                <h2>Heal Docker</h2>
                <div><h1>heal-docker</h1>
<p>docker-compose restart for containers which are unhealty or excited</p></div>
            </section>
            
            <section>
                <h2>Pc Latex</h2>
                <div><h1>LaTeX Role</h1>
<h2>Overview</h2>
<p>Welcome to the LaTeX role within the <code>cymais</code> repository. It focuses on setting up a comprehensive LaTeX environment on Arch Linux-based systems, catering to the needs of users who require an advanced document preparation system.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file in this role automates the installation of key LaTeX packages:</p>
<ol>
<li><strong>Install LaTeX Software</strong>: This task uses the <code>community.general.pacman</code> module to install a range of LaTeX packages, ensuring a robust setup for LaTeX users. The packages include:</li>
<li><code>texlive-pc-latexextra</code>: Offers additional LaTeX packages.</li>
<li><code>texlive-lang</code>: Provides language support.</li>
<li><code>texlive-langextra</code>: Includes extra language packs.</li>
<li><code>texlive-fontsextra</code>: Adds a comprehensive collection of fonts.</li>
<li><code>texlive-most</code>: Ensures a broad coverage of LaTeX components.</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The LaTeX role is designed to streamline the installation of LaTeX on personal computers, particularly for users engaged in producing academic, scientific, or technical documentation. It is an essential tool for anyone who requires a full-fledged LaTeX environment for their documentation needs.</p>
<h2>Additional Information</h2>
<p>For an extensive list of available LaTeX packages and customization options, you can refer to the <a href="https://wiki.archlinux.org/title/TeX_Live">TeX Live on ArchWiki</a>.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: You must have Ansible installed on your system to utilize this role.</li>
<li><strong>Arch Linux-based Systems</strong>: Since this role uses the <code>pacman</code> package manager, it is tailored for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To execute this role:
1. Ensure the <code>cymais</code> repository is cloned to your system.
2. Navigate to the <code>roles/pc-latex</code> directory within the repository.
3. Run the role using the appropriate Ansible commands.</p>
<h2>Customization</h2>
<p>You can customize this role by adjusting the list of LaTeX packages in <code>main.yml</code> to meet your specific needs.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, feel free to open an issue or a pull request in the <code>cymais</code> repository. Contributions that enhance or extend the role's capabilities are always welcome.</p></div>
            </section>
            
            <section>
                <h2>Systemd Notifier Telegram</h2>
                <div><h2>Description</h2>
<p>This Ansible role installs the necessary components for sending Telegram notifications through systemd when any service fails. It configures the <code>systemd-notifier-telegram</code> service and handles the setup of Telegram bot parameters and notification templates.</p>
<p>Features include:</p>
<ul>
<li>Installation and configuration of a Telegram notifier service.</li>
<li>Customizable templates for Telegram messages sent on service failure.</li>
</ul>
<p>This role is part of the <code>systemd-notifier</code> suite, which provides a comprehensive solution for service failure notifications in a systemd environment.</p>
<h2>Requirements</h2>
<p>This role has the following requirements:</p>
<ul>
<li>Access to a Telegram bot token for sending messages.</li>
<li>Availability of the <code>curl</code> package on the target system.</li>
</ul>
<h2>Role Variables</h2>
<p>The following variables can be customized in the role's <code>vars/main.yml</code> file:</p>
<ul>
<li><code>systemd_telegram_folder</code>: The path to the folder where Telegram-related scripts and configurations will be stored.</li>
<li><code>systemd_telegram_script</code>: The full path to the systemd-telegram.sh script.</li>
</ul>
<p>This role was created as part of a conversation with OpenAI's ChatGPT and can be found <a href="https://chat.openai.com/share/96e4ca12-0888-41c0-9cfc-29c0180f0dba">here</a>.</p>
<h2>Usage</h2>
<p>To use this role, include it as a dependency in your playbook or role that requires Telegram notifications. Ensure that the <code>systemd-notifier-telegram</code> role is correctly referenced and configured.</p>
<h2>Contact Information</h2>
<p>For any questions or feedback, please contact the author:</p>
<p>Author: Kevin Veen-Birkenbach
Email: kevin@veen.world</p></div>
            </section>
            
            <section>
                <h2>Pc Security Tools</h2>
                <div><h1>PC-Security-Tools Role</h1>
<h2>Overview</h2>
<p>This README document is for the <code>pc-security-tools</code> role, a part of the <code>cymais</code> repository. This role is designed to equip personal computers with essential tools for enhancing data security and privacy.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file within the <code>pc-security-tools</code> role encompasses tasks for installing key security software:</p>
<ol>
<li><strong>Install Security Tools</strong>:</li>
<li>Utilizes the <code>community.general.pacman</code> module to install a range of security tools, including:<ul>
<li><code>ecryptfs-utils</code>: Utilities for the enterprise cryptographic filesystem for Linux.</li>
<li><code>encfs</code>: An encrypted filesystem that runs in userspace.</li>
<li><code>keepassxc</code>: A free and open-source password manager that securely stores passwords and other sensitive data.</li>
</ul>
</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-security-tools</code> role is crucial for users who prioritize data security and privacy. It provides tools for encrypting files and directories, ensuring that sensitive data is protected. KeePassXC is particularly useful for managing passwords securely, an essential aspect of personal cybersecurity.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed on your system to run this role.</li>
<li><strong>Arch Linux-based System</strong>: Since the role uses the <code>pacman</code> package manager, it's best suited for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-security-tools</code> directory.
3. Run the role using Ansible, making sure you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>This role can be customized by adding or removing security-related software packages in the <code>main.yml</code> file, depending on your specific security needs or preferences.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more security tools or enhancing the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the security tools setup and user experience are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Pc Git</h2>
                <div><h1>PC-Git Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-git</code> role documentation, part of the <code>cymais</code> repository. This role is focused on setting up Git, a widely-used version control system, on personal computers. The role includes tasks for installing Git and configuring global user details.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-git</code> role consists of the following key tasks:</p>
<ol>
<li>
<p><strong>Set Git User Email</strong>: Uses the <code>ansible.builtin.shell</code> module to set the global Git user email to a specified value (<code>{% raw %}{{user_email}}{% endraw %}</code>).</p>
</li>
<li>
<p><strong>Set Git User Name</strong>: Similar to the above, this task sets the global Git user name (<code>{% raw %}{{user_full_name}}{% endraw %}</code>) using the <code>ansible.builtin.shell</code> module.</p>
</li>
<li>
<p><strong>Install Git</strong>: Employs the <code>community.general.pacman</code> module to install the Git package, ensuring it's present on the system.</p>
</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-git</code> role is essential for developers, IT professionals, and anyone who needs to utilize version control for their projects. It automates the installation of Git and the initial configuration of user identity, which is crucial for committing changes and collaborating on projects using Git.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed on your system to use this role.</li>
<li><strong>Arch Linux-based System</strong>: This role uses the <code>pacman</code> package manager, making it suitable for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-git</code> directory.
3. Make sure to define the <code>user_email</code> and <code>user_full_name</code> variables before running the role.
4. Execute the role using Ansible, ensuring you have the required permissions for software installation and configuration.</p>
<h2>Customization</h2>
<p>You can customize this role by modifying the variables for user email and name or by adding additional Git configuration tasks as needed.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions to this role, such as adding more Git-related configurations or tools, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance Git setup and configuration are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Pc Libreoffice</h2>
                <div><h1>PC-LibreOffice Role</h1>
<h2>Overview</h2>
<p>This README is for the <code>pc-libreoffice</code> role, part of the <code>cymais</code> repository. This role focuses on installing LibreOffice, a powerful and free office suite, along with necessary fonts and language packages.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file under the <code>pc-libreoffice</code> role includes tasks for installing LibreOffice and its components:</p>
<ol>
<li><strong>Install LibreOffice</strong>:</li>
<li>
<p>Uses the <code>community.general.pacman</code> module to install:</p>
<ul>
<li><code>ttf-liberation</code>: A font package that includes Liberation fonts, often used in LibreOffice documents.</li>
<li><code>libreoffice-still</code>: The stable version of the LibreOffice suite.</li>
</ul>
</li>
<li>
<p><strong>Install LibreOffice Language Packages</strong>:</p>
</li>
<li>Installs various language packs for LibreOffice, allowing for multi-language support. The languages to be installed are determined by the <code>{% raw %}{{libreoffice_languages}}{% endraw %}</code> variable.</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>hunspell</strong>: Ensures that Hunspell, a spell checker used by LibreOffice for many languages, is installed.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-libreoffice</code> role is ideal for users who need a comprehensive, free office suite for personal or professional use. It's particularly useful for setting up a new system or ensuring that all necessary office software is present and properly configured.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed to use this role.</li>
<li><strong>Arch Linux-based System</strong>: The role uses the <code>pacman</code> package manager, making it suitable for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-libreoffice</code> directory.
3. Define the <code>libreoffice_languages</code> variable with the desired language codes.
4. Run the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>You can customize this role by adjusting the <code>libreoffice_languages</code> variable to include the language packs you need, or by adding additional LibreOffice-related packages as required.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more functionality or enhancing the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the LibreOffice setup and user experience are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Cleanup Disc Space</h2>
                <div><h1>cleanup-disc-space</h1>
<p>Frees disc space</p>
<h2>More information</h2>
<ul>
<li>https://askubuntu.com/questions/380238/how-to-clean-tmp</li>
</ul></div>
            </section>
            
            <section>
                <h2>Nginx Redirect Www</h2>
                <div><h1>nginx-redirect-www</h1>
<h2>Overview</h2>
<p>The <code>nginx-redirect-www</code> role is designed to automate the process of setting up redirects from <code>www.domain.tld</code> to <code>domain.tld</code> for all domains and subdomains configured within the <code>{% raw %}{{nginx.directories.http.servers}}{% endraw %}</code> directory. This role dynamically identifies configuration files following the pattern <code>*domain.tld.conf</code> and creates corresponding redirection rules.</p>
<h2>Role Description</h2>
<p>This role performs several key tasks:
1. <strong>Find Configuration Files</strong>: Locates all <code>.conf</code> files in the <code>{% raw %}{{nginx.directories.http.servers}}{% endraw %}</code> directory that match the <code>*.*.conf</code> pattern, ensuring that only domain and subdomain configurations are selected.</p>
<ol>
<li>
<p><strong>Filter Domain Names</strong>: Processes each configuration file, extracting the domain names and removing both the <code>.conf</code> extension and the <code>{% raw %}{{nginx.directories.http.servers}}{% endraw %}</code> path.</p>
</li>
<li>
<p><strong>Prepare Redirect Domain Mappings</strong>: Transforms the filtered domain names into a source-target mapping format, where <code>source</code> is <code>www.domain.tld</code> and <code>target</code> is <code>domain.tld</code>.</p>
</li>
<li>
<p><strong>Include nginx-redirect-domain Role</strong>: Applies the redirection configuration using the <code>nginx-redirect-domain</code> role with the dynamically generated domain mappings.</p>
</li>
</ol>
<h2>Notes</h2>
<ul>
<li>This role is designed to work in environments where domain and subdomain configurations follow the naming pattern <code>*domain.tld.conf</code>.</li>
<li>It automatically excludes any configurations that begin with <code>www.</code>, preventing duplicate redirects.</li>
</ul>
<hr />
<p>This <code>nginx-redirect-www</code> role was crafted by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a> with insights and guidance provided by ChatGPT, an advanced AI language model from OpenAI. The development process, including the discussions with ChatGPT that shaped this role, can be <a href="https://chat.openai.com/share/a68e3574-f543-467d-aea7-0895f0e00bbb">here</a> explored in detail.</p></div>
            </section>
            
            <section>
                <h2>Docker Yourls</h2>
                <div><h1>role docker-yourls</h1>
<h2>database</h2>
<p>To login to the database type in:</p>
<p><code>bash
docker-compose exec -it database /bin/mysql -u yourls -p</code></p></div>
            </section>
            
            <section>
                <h2>Backups Provider User</h2>
                <div><h1>role backups-provider-user</h1>
<p>User for backups</p>
<h2>todo</h2>
<ul>
<li>optimize authorized_keys.j2 for multiple pull clients</li>
</ul>
<h1>see</h1>
<ul>
<li>https://docs.ansible.com/ansible/latest/user_guide/playbooks_lookups.html#id3</li>
<li>https://stackoverflow.com/questions/34722761/ansible-read-remote-file</li>
<li>http://gergap.de/restrict-ssh-to-rsync.html</li>
<li>https://unix.stackexchange.com/questions/276198/allow-the-restricted-rsync-rrsync-script-for-arbitrary-directories-with-author</li>
<li>https://askubuntu.com/questions/719439/using-rsync-with-sudo-on-the-destination-machine</li>
<li>https://www.thomas-krenn.com/de/wiki/Ausf%C3%BChrbare_SSH-Kommandos_per_authorized_keys_einschr%C3%A4nken</li>
<li>https://serverfault.com/questions/793669/what-is-the-rsync-option-logdtprze-ilsf-for/793676</li>
</ul></div>
            </section>
            
            <section>
                <h2>Health Disc Space</h2>
                <div><h1>health-disc-space</h1>
<p>Checks if enough disc space is free</p></div>
            </section>
            
            <section>
                <h2>Client Wireguard</h2>
                <div><h1>Role Native Wireguard</h1>
<p>Manages wireguard on a client.</p>
<h2>Create Client Keys</h2>
<p><code>bash
  wg_private_key="$(wg genkey)"
  wg_public_key="$(echo "$wg_private_key" | wg pubkey)"
  echo "PrivateKey: $wg_private_key"
  echo "PublicKey: $wg_public_key"
  echo "PresharedKey: $(wg genpsk)"</code></p>
<h2>Other</h2>
<ul>
<li>https://golb.hplar.ch/2019/01/expose-server-vpn.html</li>
<li>https://wiki.archlinux.org/index.php/WireGuard</li>
<li>https://wireguard.how/server/raspbian/</li>
<li>https://www.scaleuptech.com/de/blog/was-ist-und-wie-funktioniert-subnetting/</li>
<li>https://bodhilinux.boards.net/thread/450/wireguard-rtnetlink-answers-permission-denied</li>
<li>https://stackoverflow.com/questions/69140072/unable-to-ssh-into-wireguard-ip-until-i-ping-another-server-from-inside-the-serv</li>
<li>https://unix.stackexchange.com/questions/717172/why-is-ufw-blocking-acces-to-ssh-via-wireguard</li>
<li>https://forum.openwrt.org/t/cannot-ssh-to-clients-on-lan-when-accessing-router-via-wireguard-client/132709/3</li>
<li>https://serverfault.com/questions/1086297/wireguard-connection-dies-on-ubuntu-peer</li>
<li>https://unix.stackexchange.com/questions/624987/ssh-fails-to-start-when-listenaddress-is-set-to-wireguard-vpn-ip</li>
<li>https://serverfault.com/questions/210408/cannot-ssh-debug1-expecting-ssh2-msg-kex-dh-gex-reply</li>
<li>https://www.thomas-krenn.com/de/wiki/Linux_ip_Kommando</li>
<li>https://wiki.archlinux.org/title/dhcpcd</li>
<li>https://wiki.ubuntuusers.de/NetworkManager/Dispatcher/</li>
<li>https://askubuntu.com/questions/1024916/how-can-i-launch-a-systemd-service-at-startup-before-another-systemd-service-sta</li>
</ul></div>
            </section>
            
            <section>
                <h2>Nginx Serve Files</h2>
                <div><h1>Nginx Homepage Role</h1>
<p>This Ansible role configures an Nginx server to serve files. It handles domain configuration, SSL certificate retrieval with Let's Encrypt.</p>
<h2>Author Information</h2>
<p>This role was created in 2023 by <a href="https://www.veen.world/">Kevin Veen Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Wordpress</h2>
                <div><h1>role docker-wordpress</h1>
<h2>database</h2>
<h2>access database</h2>
<p>To access the database execute
<code>bash
  docker-compose exec -it database /bin/mysql -u wordpress -p</code></p>
<h2>upgrade database</h2>
<p>To upgrade the database execute
<code>bash
  docker-compose exec -it database /bin/mysql_upgrade --user=root --password=</code></p>
<h2>change database root password</h2>
<ul>
<li>https://wolfgang.gassler.org/reset-password-mariadb-mysql-docker/</li>
<li>https://www.digitalocean.com/community/tutorials/how-to-reset-your-mysql-or-mariadb-root-password</li>
</ul>
<h2>bash in application</h2>
<p>docker-compose exec -it wordpress-application-1 /bin/sh</p>
<h2>update wp-config.php</h2>
<p><code>bash
apt update &amp;&amp; apt install nano &amp;&amp; nano wp-config.php</code></p>
<h2>multiside</h2>
<ul>
<li>https://multilingualpress.de/doku/wordpress-multisite-installieren-einrichten/</li>
<li>https://pressable.com/knowledgebase/adding-or-changing-the-domain-on-a-wordpress-multisite/</li>
<li>https://wpengine.com/support/how-to-change-a-multi-site-primary-domain/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Pc Streaming Tools</h2>
                <div><h1>PC-Streaming-Tools Role</h1>
<h2>Overview</h2>
<p>This README is associated with the <code>pc-streaming-tools</code> role, part of the <code>cymais</code> repository. This role is focused on setting up essential tools for live streaming and video recording on personal computers.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-streaming-tools</code> role includes a task for installing a key streaming software:</p>
<ol>
<li><strong>Install Streaming</strong>:</li>
<li>The role uses the <code>community.general.pacman</code> module to install:<ul>
<li><code>obs-studio</code>: Open Broadcaster Software Studio, a free and open-source software for video recording and live streaming.</li>
</ul>
</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-streaming-tools</code> role is designed for content creators, gamers, educators, and anyone who needs to record video or stream live content. OBS Studio provides a versatile platform for video production and live streaming, offering features like high-performance real-time video/audio capturing and mixing.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: As the role employs the <code>pacman</code> package manager, it is tailored for systems based on Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-streaming-tools</code> directory.
3. Run the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>This role primarily focuses on installing OBS Studio, but you can customize it by adding additional streaming or video recording tools as per your requirements.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more streaming tools or enhancing the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the streaming capabilities of this role are highly welcome.</p></div>
            </section>
            
            <section>
                <h2>Pc Jrnl</h2>
                <div><h1>Jrnl Role for Ansible</h1>
<h2>Overview</h2>
<p>This role automates the installation of Jrnl, a simple and effective command-line journal application. It uses the <code>community.general.pacman</code> module for systems that support the Pacman package manager, ensuring that Jrnl is installed and up to date.</p>
<h2>Requirements</h2>
<ul>
<li>Ansible 2.9 or higher.</li>
<li>Access to Pacman package manager (commonly available on Arch Linux and derivatives).</li>
</ul>
<h2>Role Variables</h2>
<p>No additional role variables are needed for this role as it solely focuses on the installation of Jrnl.</p>
<h2>Dependencies</h2>
<p>No external dependencies.</p>
<h2>Example Playbook</h2>
<p>Including this role in your playbook is straightforward. Simply add the role to your playbook's roles section:</p>
<p><code>yaml
- hosts: all
  roles:
    - pc-jrnl</code></p>
<h2>Additional Information</h2>
<p>For more detailed information on Jrnl and its functionalities, visit <a href="https://jrnl.sh/">Jrnl's official documentation</a>.</p>
<h2>Contributing</h2>
<p>Contributions to this role are welcome. Please adhere to standard coding conventions and best practices.</p>
<h2>More Information</h2>
<p>This role was created as part of a larger playbook. For more context on this role, you can refer to the related ChatGPT conversation <a href="https://chat.openai.com/share/ae168ca0-5191-4bec-96a0-ffcfabca0024">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Pc Gnome</h2>
                <div><h1>PC-Gnome Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-gnome</code> role, a key part of the <code>cymais</code> repository. This role is dedicated to setting up and configuring the GNOME desktop environment on personal computers.</p>
<h2>Role Details</h2>
<p>The <code>pc-gnome</code> role includes several tasks for installing GNOME software, managing GNOME extensions, and customizing the GNOME desktop experience:</p>
<ol>
<li><strong>Install Gnome Software</strong>:</li>
<li>
<p>Installs essential GNOME packages such as <code>gnome-shell-extensions</code>, <code>gnome-shell-extension-desktop-icons-ng</code>, and <code>gnome-terminal</code> using the <code>community.general.pacman</code> module.</p>
</li>
<li>
<p><strong>GNOME Activate Extensions</strong>:</p>
</li>
<li>
<p>Enables user extensions in GNOME using the <code>gsettings</code> command.</p>
</li>
<li>
<p><strong>GNOME Set Favorite Apps</strong>:</p>
</li>
<li>
<p>Customizes the favorite applications on the GNOME shell using the <code>gsettings</code> command and the <code>{% raw %}{{favorite_apps}}{% endraw %}</code> variable.</p>
</li>
<li>
<p><strong>Pull CLI GNOME Extension Manager Script</strong>:</p>
</li>
<li>
<p>Clones or updates the CLI GNOME Extension Manager script from a Git repository.</p>
</li>
<li>
<p><strong>Warn if Repo is Not Reachable</strong>:</p>
</li>
<li>
<p>Displays a warning message if the repository for the CLI GNOME Extension Manager script is not reachable.</p>
</li>
<li>
<p><strong>Execute CLI GNOME Extension Manager Script</strong>:</p>
</li>
<li>Runs the CLI GNOME Extension Manager script to manage GNOME extensions based on the <code>{% raw %}{{gnome_extensions}}{% endraw %}</code> variable.</li>
</ol>
<h2>Further Information</h2>
<p>For additional details on managing GNOME extensions via command line, visit <a href="https://askubuntu.com/questions/1029376/how-do-i-enable-and-disable-gnome-extensions-from-the-command-line">Ask Ubuntu</a>.</p>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>pc-git</strong>: Ensures Git is installed for cloning repositories.
- <strong>pc-caffeine</strong>: A supplementary role that may include tools or configurations complementing the GNOME setup.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-gnome</code> role is ideal for users who prefer the GNOME desktop environment and wish to automate its setup and customization. It's especially useful for setting up a new system or reconfiguring GNOME after a system update.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed to use this role.</li>
<li><strong>Arch Linux-based System</strong>: The role uses the <code>pacman</code> package manager, indicating it's designed for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-gnome</code> directory.
3. Run the role using Ansible, ensuring you have the necessary permissions for installations and configurations.</p>
<h2>Customization</h2>
<p>You can customize this role by modifying the GNOME software packages, favorite apps, and GNOME extensions in the respective tasks.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more GNOME-related configurations or tools, open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the GNOME environment setup are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Docker Pixelfed</h2>
                <div><h1>Pixelfed Docker Server Role</h1>
<p>This README details the steps to manage your Pixelfed instance running in a Docker container. This setup is part of the docker-pixelfed role within Kevin Veen-Birkenbach's cymais located at <a href="https://github.com/kevinveenbirkenbach/cymais/tree/master/roles/docker-pixelfed">this GitHub repository</a>. </p>
<h2>Accessing Services</h2>
<h3>Application Access</h3>
<p>To gain shell access to the application container, run the following command:
<code>bash
docker-compose exec -it application bash</code></p>
<h3>Clear Cache</h3>
<p><code>bash 
docker compose exec -it application php artisan cache:clear</code></p>
<h3>Database Access</h3>
<p>To access the MariaDB instance in the database container, run the following command:
<code>bash
docker-compose exec -it database mariadb -u pixelfed -p</code></p>
<h3>User Management via CLI in Pixelfed Docker Setup</h3>
<p>To manage users in your Pixelfed instance running in a Docker container, as configured in Kevin Veen-Birkenbach's docker-pixelfed role, you can follow these steps via the Command Line Interface (CLI):</p>
<ol>
<li><strong>Access the Application Container:</strong> First, gain shell access to the Pixelfed application container. Use the command provided in the README:</li>
</ol>
<p><code>bash
   docker-compose exec -it application bash</code></p>
<p>This command lets you access the bash shell inside the <code>application</code> Docker container where Pixelfed is running.</p>
<ol>
<li>
<p><strong>Navigate to Pixelfed Directory:</strong> Once inside the container, navigate to the Pixelfed directory. This is typically the root directory where Pixelfed is installed.</p>
</li>
<li>
<p><strong>Use Artisan Commands:</strong> Pixelfed is built on Laravel, so you'll use Laravel's Artisan CLI for user management. Here are some common tasks:</p>
</li>
<li>
<p><strong>Create a New User:</strong>
     <code>bash
     php artisan user:create</code>
     This command will prompt you to enter the user's details like username, email, and password.</p>
</li>
<li>
<p><strong>List Users:</strong>
     <code>bash
     php artisan user:list</code>
     This command displays a list of all users.</p>
</li>
<li>
<p><strong>Delete a User:</strong>
     <code>bash
     php artisan user:delete {username}</code>
     Replace <code>{username}</code> with the actual username of the user you wish to delete.</p>
</li>
<li>
<p><strong>Reset Password:</strong>
     <code>bash
     php artisan user:reset-password {username}</code>
     This will initiate a password reset process for the specified user.</p>
</li>
<li>
<p><strong>Verify and Validate:</strong> Depending on your Pixelfed's configuration, especially if email verification is required, you might need to perform additional steps to verify new accounts or modify user details.</p>
</li>
<li>
<p><strong>Exit the Container:</strong> After completing your user management tasks, exit the Docker container shell by typing <code>exit</code>.</p>
</li>
</ol>
<h3>Note:</h3>
<ul>
<li><strong>Commands Variability:</strong> The available Artisan commands can vary based on your version of Pixelfed and Laravel. Always refer to the specific documentation for your version.</li>
<li><strong>Permissions:</strong> Ensure you have the necessary permissions and rights within the Docker container to perform these actions.</li>
<li><strong>Environment Specifics:</strong> The exact paths and commands may vary based on your Docker and Pixelfed setup, as defined in your <code>docker-compose.yml</code> and other configuration files.</li>
</ul>
<p>This process provides a streamlined way to manage Pixelfed users directly from the CLI in a Dockerized environment, ensuring that you can efficiently administer your Pixelfed instance without needing to access the Pixelfed web interface.</p>
<h2>Instagram Import Cleanup</h2>
<p>If you have imported posts from Instagram, you can clean up the imported data and files as follows:</p>
<h3>Database Cleanup</h3>
<p>Run these commands inside your MariaDB shell to remove import related data:
<code>bash
DELETE from import_posts WHERE 1;
DELETE from import_jobs WHERE 1;
DELETE from import_datas WHERE 1;
DELETE from statuses where created_at &lt; "2022-12-01 22:15:39";
DELETE from media where deleted_at &gt;= "2023-07-28 14:39:05";</code></p>
<h3>File System Cleanup</h3>
<p>Run these commands to remove the imported files and trigger the cleanup job:
<code>bash
docker-compose exec -u "www-data" application rm -rv "/var/www/storage/app/imports/1"
docker-compose exec -u "www-data" application php artisan schedule:run</code></p>
<h2>Full Cleanup (Reset)</h2>
<p>For a hard reset, which will delete all data and stop all services, use the following commands:
<code>bash
docker-compose down
docker volume rm pixelfed_application_data pixelfed_database pixelfed_redis</code></p>
<h2>Update Procedure</h2>
<p>To update your Pixelfed instance, navigate to the directory where your <code>docker-compose.yml</code> file is located and run these commands:
<code>bash 
cd {% raw %}{{path_docker_compose_instances}}{% endraw %}pixelfed/ &amp;&amp;
docker-compose down &amp;&amp;
docker network prune -f &amp;&amp;
docker-compose pull &amp;&amp;
docker-compose build &amp;&amp;
docker-compose -p pixelfed up -d --force-recreate</code></p>
<h2>Inspecting the Services</h2>
<p>To see the status of all services or follow the logs, use these commands:
<code>bash
docker-compose ps -a
docker-compose logs -f</code></p>
<h2>Debug</h2>
<p>To debug the system set APP_DEBUG to true, like descriped <a href="https://docs.pixelfed.org/technical-documentation/config/">here</a>.</p>
<p><code>bash
nano config/app.php
php artisan cache:clear
php artisan route:cache
php artisan view:clear
php artisan config:cache</code></p>
<h2>Modifying files</h2>
<p><code>bash
apt update &amp;&amp; apt upgrade &amp;&amp; apt install nano</code></p>
<h2>Further Reading</h2>
<p>For additional information, refer to these resources:
- <a href="https://hub.docker.com/r/zknt/pixelfed">Docker image on Docker Hub</a>
- <a href="https://blog.pixelfed.de/2020/05/29/pixelfed-in-docker/">Blog Post about running Pixelfed in Docker</a></p>
<hr />
<p>Author: Kevin Veen-Birkenbach, <a href="https://www.veen.world">https://www.veen.world</a>, <a href="mailto:kevin@veen.world">kevin@veen.world</a></p>
<p>This README was optimized with the help of OpenAI's ChatGPT. You can view the conversation here:
- https://chat.openai.com/share/3daea33f-2e30-46e9-a709-a9c93e823ed9
- https://chat.openai.com/share/17f4cf36-feb7-4e7d-bb61-2732475f8a37</p></div>
            </section>
            
            <section>
                <h2>Update Yay</h2>
                <div><h1>Ansible Role: update-yay</h1>
<p>This Ansible role is designed for updating AUR packages on Arch Linux systems using <code>yay</code>. It automates the process of upgrading AUR packages, ensuring that your system stays up-to-date with the latest versions available in the Arch User Repository (AUR).</p>
<h2>Requirements</h2>
<p>The role requires that <code>yay</code> (Yet Another Yaourt) - an AUR helper - is already installed on the system. If <code>yay</code> is not installed, the role <code>system-aur-helper</code> should handle its installation.</p>
<h2>Role Dependencies</h2>
<ul>
<li><code>system-aur-helper</code>: This dependency is essential for ensuring that <code>yay</code> is available on the system. If <code>yay</code> is not installed, this role will manage its installation.</li>
</ul>
<h2>Role Variables</h2>
<p>There are no specific variables that need to be defined by the user for this role. The role utilizes the <code>kewlfft.aur.aur</code> module with predefined parameters to manage AUR packages.</p>
<h2>Role Tasks</h2>
<ul>
<li><strong>Upgrade AUR Packages</strong>: The main task of this role is to upgrade the system using <code>yay</code>, focusing solely on AUR packages. This task does not require elevated privileges (become: false).</li>
</ul>
<h2>Example Playbook</h2>
<p>Here's an example of how to include the <code>update-yay</code> role in your playbook:</p>
<p><code>yaml
- hosts: all
  roles:
    - role: update-yay</code></p>
<h2>Author Information</h2>
<p>This role was created by Kevin Veen-Birkenbach.</p></div>
            </section>
            
            <section>
                <h2>Docker Postgres</h2>
                <div><h1>Docker-Postgres Ansible Role</h1>
<h2>Overview</h2>
<p>This Ansible role is designed to deploy a PostgreSQL database using Docker. It includes tasks for setting up a Docker network, installing PostgreSQL in a Docker container, and initializing the database with a specified user and database.</p>
<h2>Role Variables</h2>
<ul>
<li><code>central_postgres_password</code>: The password for the PostgreSQL superuser (<code>postgres</code>).</li>
<li><code>database_name</code>: Name of the database to be created.</li>
<li><code>database_username</code>: Username for the database user.</li>
<li><code>database_password</code>: Password for the database user.</li>
</ul>
<h2>Role Tasks</h2>
<ol>
<li><strong>Create Docker network for PostgreSQL</strong>: Sets up a Docker network for PostgreSQL communication.</li>
<li><strong>Install PostgreSQL</strong>: Deploys PostgreSQL in a Docker container, attaching it to the created network and setting the superuser password.</li>
<li><strong>Run the docker_postgres tasks once</strong>: Ensures that the tasks are only run once to avoid redundancy.</li>
</ol>
<h2>Handlers</h2>
<ul>
<li><strong>Create database</strong>: Creates a new database with the specified name.</li>
<li><strong>Create database user</strong>: Sets up a user with full privileges on the newly created database.</li>
</ul>
<h2>Usage</h2>
<ol>
<li>Set the required variables in your playbook or inventory file.</li>
<li>Include this role in your playbook.</li>
<li>Run the playbook against the target host.</li>
</ol>
<h2>Root Access</h2>
<p>To access the database via the root account execute the following on the server:
<code>bash
docker exec -it central-postgres psql -U postgres</code></p>
<h2>Notes</h2>
<ul>
<li>The PostgreSQL server is bound to <code>127.0.0.1:5432</code> on the host machine, making it accessible only from localhost.</li>
</ul>
<h2>Author</h2>
<p>This role was created by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Oauth2 Proxy</h2>
                <div><h1>Docker OAuth2 Proxy Role</h1>
<p>Welcome to the <strong>Docker OAuth2 Proxy Role</strong>! 🌟 This role contains helper functions to set up an OAuth2 proxy using <a href="https://github.com/oauth2-proxy/oauth2-proxy">OAuth2 Proxy</a>, a tool designed to secure applications by protecting them with OAuth2 authentication. 💡</p>
<h2>Overview</h2>
<p>The OAuth2 Proxy is used to shield specific web applications from unauthorized access by requiring users to authenticate via an external identity provider, such as Keycloak. This role simplifies the setup process by providing templated configurations and tasks to integrate the OAuth2 Proxy with Docker Compose and Keycloak.</p>
<h2>Features</h2>
<ul>
<li>🚀 Automated configuration transfer to your Docker Compose instance.</li>
<li>🔧 Template files for a fully customizable proxy setup.</li>
<li>🔐 Integration with Keycloak as an OpenID Connect (OIDC) provider.</li>
<li>🛡️ Configurations to secure applications and allow cookie-based authentication across subdomains.</li>
</ul>
<h2>How It Works</h2>
<p>The role includes the following key components:</p>
<ol>
<li>
<p><strong>Templates</strong>:</p>
<ul>
<li><code>oauth2-proxy-keycloak.cfg.j2</code>: A configuration file for the OAuth2 Proxy, pre-integrated with Keycloak as an identity provider.</li>
<li><code>container.yml.j2</code>: A container definition for the OAuth2 Proxy, specifying the image, ports, volumes, and restart policies.</li>
</ul>
</li>
<li>
<p><strong>Tasks</strong>:</p>
<ul>
<li>A task to transfer the templated configuration to the Docker Compose instance directory.</li>
<li>A notifier to trigger the setup of the Docker Compose project after transferring the configuration.</li>
</ul>
</li>
<li>
<p><strong>Integration</strong>:</p>
<ul>
<li>Keycloak is configured as the OIDC provider, enabling seamless authentication and authorization.</li>
<li>Upstream application support ensures traffic is securely proxied to the correct destination.</li>
</ul>
</li>
</ol>
<h2>Why Use This Proxy?</h2>
<p>Using this proxy ensures that only authenticated users can access your protected applications. By leveraging OAuth2, you can:</p>
<ul>
<li>✅ Secure applications with minimal configuration.</li>
<li>✅ Enable single sign-on (SSO) and centralized user management.</li>
<li>✅ Restrict access to specific domains and subdomains.</li>
</ul>
<h2>Dependencies</h2>
<p>Before using this role, ensure you have the following:</p>
<ul>
<li>Docker and Docker Compose installed on your system.</li>
<li>A running Keycloak instance configured with the appropriate realm and clients.</li>
</ul>
<h2>Learn More</h2>
<p>To learn more about OAuth2 Proxy, check out the <a href="https://oauth2-proxy.github.io/oauth2-proxy/">official documentation</a>.</p>
<h2>Author</h2>
<p>This role was created and maintained by <strong>Kevin Veen-Birkenbach</strong>. 🌍 You can learn more about Kevin and his projects at <a href="https://www.veen.world">veen.world</a>.</p>
<hr />
<p>Protect your web applications with ease and confidence! ✨</p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools Bash</h2>
                <div><h1>PC-Developer-Tools-Bash Role</h1>
<h2>Overview</h2>
<p>This README accompanies the <code>pc-developer-tools-bash</code> role within the <code>cymais</code> repository. This role is dedicated to equipping personal computers with essential tools for Bash scripting and development.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file under the <code>pc-developer-tools-bash</code> role includes tasks focused on installing Bash development tools:</p>
<ol>
<li><strong>Install Bash Developer Tools</strong>:</li>
<li>This task leverages the <code>community.general.pacman</code> module to install:<ul>
<li><code>shellcheck</code>: A static analysis tool for shell scripts, which helps in identifying and correcting common errors or issues in Bash scripts.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role is dependent on:
- <strong>pc-developer-tools</strong>: Ensures that foundational developer tools are in place, providing a base environment for further specialized toolsets like Bash development tools.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools-bash</code> role is specifically tailored for developers who frequently work with Bash scripting. ShellCheck, the main tool installed by this role, is invaluable for writing robust, error-free shell scripts. This role is ideal for system administrators, DevOps professionals, and anyone involved in script-based automation or Linux-based development.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: You need to have Ansible installed on your system to use this role.</li>
<li><strong>Arch Linux-based System</strong>: The role utilizes <code>pacman</code>, thus it is best suited for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To execute this role:
1. Clone the <code>cymais</code> repository to your machine.
2. Navigate to the <code>roles/pc-developer-tools-bash</code> directory within the repository.
3. Run the role using Ansible, ensuring you have the necessary permissions to install software packages.</p>
<h2>Customization</h2>
<p>The role can be customized by adding additional Bash development tools or utilities as per the user's requirements in the <code>main.yml</code> file.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions (like adding more tools relevant to Bash development or enhancing the setup), please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the Bash development environment are highly appreciated.</p></div>
            </section>
            
            <section>
                <h2>Pc Torbrowser</h2>
                <div><h1>PC-TorBrowser Role</h1>
<h2>Overview</h2>
<p>This README document is for the <code>pc-torbrowser</code> role, a crucial component of the <code>cymais</code> repository. This role is specifically designed for the installation and setup of Tor Browser on personal computers.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file under the <code>pc-torbrowser</code> role encompasses tasks for installing the Tor Browser:</p>
<ol>
<li><strong>Install TorBrowser</strong>:</li>
<li>Utilizes the <code>community.general.pacman</code> module to install:<ul>
<li><code>tor</code>: The core Tor service which facilitates anonymous communication.</li>
<li><code>torbrowser-launcher</code>: A package for securely and easily launching the Tor Browser.</li>
</ul>
</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-torbrowser</code> role is tailored for users who value privacy and anonymity online. The Tor Browser is a specialized web browser that provides enhanced privacy features, making it an essential tool for secure browsing and accessing the deep web.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed on your system to run this role.</li>
<li><strong>Arch Linux-based System</strong>: As the role uses the <code>pacman</code> package manager, it's best suited for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-torbrowser</code> directory.
3. Run the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>While this role primarily focuses on installing Tor and the Tor Browser Launcher, you can customize it to include additional privacy-focused tools or configurations based on your needs.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as enhancing the role with more privacy tools or improving the installation process, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the privacy and security aspects of this role are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Docker Mybb</h2>
                <div><h1>Role Name: Docker MyBB</h1>
<h2>Dependencies</h2>
<ul>
<li>nginx-docker-reverse-proxy</li>
</ul>
<h2>Usage</h2>
<h3>Multi Domain Installation</h3>
<p>If you want to access your mybb over multiple domains, keep the following in mind:
- Set Cookie Domain to nothing
- Access mybb for installation via mybb.<primary_domain> 
- Set the Board Url to mybb.<primary_domain></p>
<h3>Manual Installation of MyBB Plugins</h3>
<p>This guide describes the process of manually installing MyBB plugins in your Docker-MyBB environment. This can be useful if you want to quickly test plugins or do not wish to execute the Ansible role.</p>
<h4>Steps for Manual Installation</h4>
<ol>
<li><strong>Prepare Plugin Files:</strong></li>
<li>
<p>Download the desired MyBB plugin zip files.</p>
</li>
<li>
<p><strong>Copy plugin to host:</strong></p>
<ul>
<li><code>bash scp &lt;plugin&gt; administrator@&lt;server&gt;:/opt/docker/mybb/plugins</code></li>
</ul>
</li>
<li>
<p><strong>Unzip Plugin Files on the Host:</strong></p>
</li>
<li>Unzip the plugin zip files in the host's plugin directory:
     <code>bash
     unzip /opt/docker/mybb/plugins/&lt;plugin-file&gt;.zip -d /opt/docker/mybb/plugins/</code></li>
<li>Replace <code>&lt;plugin-file&gt;.zip</code> with the name of the plugin zip file.</li>
<li>
<p>Repeat this step for each plugin.</p>
</li>
<li>
<p><strong>Access the Docker Container:</strong></p>
</li>
<li>
<p>Open a terminal or SSH session on the server where the Docker container is running.</p>
</li>
<li>
<p><strong>Copy Unzipped Plugin Files to the Container:</strong></p>
</li>
<li>Copy the unzipped plugin files from the host directory to the Docker container:
     <code>bash
     docker compose cp /opt/docker/mybb/plugins/&lt;unzipped-plugin-folder&gt; application:/var/www/html/inc/plugins/</code></li>
<li>
<p>Replace <code>&lt;unzipped-plugin-folder&gt;</code> with the name of the unzipped plugin folder.</p>
</li>
<li>
<p><strong>Restart the Container:</strong></p>
</li>
<li>Execute the following command to restart the MyBB container:
     <code>bash
     docker-compose -p mybb up -d --force-recreate</code></li>
<li>
<p>This ensures all changes take effect.</p>
</li>
<li>
<p><strong>Activate Plugins in the MyBB Admin Panel:</strong></p>
</li>
<li>Open the MyBB admin panel in your web browser.</li>
<li>Navigate to the plugin settings and activate the newly installed plugins.</li>
</ol>
<h4>Important Notes</h4>
<ul>
<li>Ensure you use the correct paths and filenames.</li>
<li>Do not forget to regularly back up your MyBB database and files before making changes.</li>
<li>If encountering issues, refer to the MyBB documentation or specific instructions from the plugin author.</li>
</ul>
<h3>Running the Role</h3>
<p>Execute the Ansible playbook containing this role to set up MyBB in a Docker environment.</p>
<h2>Docker Compose Configuration</h2>
<p>The <code>docker-compose.yml.j2</code> template outlines the services required for MyBB, including the application server, Nginx web server, and database (MariaDB).</p>
<h2>Additional Information</h2>
<ul>
<li>For detailed configuration and customization, refer to the contents of the <code>default.conf</code> template and the <code>docker-compose.yml.j2</code> template.</li>
<li>Ensure that the environment variables and paths are correctly set as per your system's configuration.</li>
</ul>
<h2>Created with ChatGPT</h2>
<p>This README was created with the assistance of ChatGPT, based on a conversation held at this <a href="https://chat.openai.com/share/83828f9a-b817-48d8-86ed-599f64850b4d">link</a>. ChatGPT provided guidance on structuring this document and outlining the key components of the Docker MyBB role.</p>
<h2>More Information</h2>
<ul>
<li>https://github.com/mybb/docker</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Attendize</h2>
                <div><p>@TODO @ATTENTION THIS ROLE IS WORK IN PROGRESS</p>
<h1>Role: docker-attendize (WIP)</h1>
<p>This Ansible role sets up Attendize, an open-source ticket selling and event management platform.</p>
<h2>Setup Instructions</h2>
<p><code>bash
bash ./Makefile setup</code></p></div>
            </section>
            
            <section>
                <h2>Backup Remote To Local</h2>
                <div><h1>role backup-remote-to-local</h1>
<h2>goal</h2>
<p>This script allows to pull backups from a remote server.</p>
<h2>scheme</h2>
<p>It is part of the following scheme:
<img alt="backup scheme" src="https://www.veen.world/wp-content/uploads/2020/12/server-backup-768x567.jpg" /> <br />
Further information you will find <a href="https://www.veen.world/2020/12/26/how-i-backup-dedicated-root-servers/">in this blog post</a>.</p>
<h2>debug</h2>
<h3>live</h3>
<p>To track what the service is doing execute one of the following commands:</p>
<h4>systemctl</h4>
<p><code>bash
  watch -n2 "systemctl status backup-remote-to-local.cymais.service"</code></p>
<h4>journalctl</h4>
<p><code>bash
  journalctl -fu backup-remote-to-local.cymais.service</code>  </p>
<h3>history</h3>
<p><code>bash
  sudo journalctl -u backup-remote-to-local</code></p>
<h2>see</h2>
<ul>
<li>https://superuser.com/questions/363444/how-do-i-get-the-output-and-exit-value-of-a-subshell-when-using-bash-e</li>
<li>https://gist.github.com/otkrsk/b0ffd4018e8a79b9010c461af298471e</li>
<li>https://serverfault.com/questions/304125/rsync-seems-incompatible-with-bashrc-causes-is-your-shell-clean</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Elk</h2>
                <div><h1>role docker-elk</h1>
<p>I decided against using this role for security reasons. I recommend to use another tool if you don't want to pay for keeping your logs save and if you don't want to depend on external servers. </p>
<h2>restart all services</h2>
<p><code>bash
docker restart elk_logstash_1 &amp;&amp; docker restart elk_elasticsearch_1 &amp;&amp; docker restart elk_kibana_1</code></p>
<h2>see</h2>
<ul>
<li>https://logz.io/blog/elk-stack-on-docker/</li>
<li>https://github.com/kevinveenbirkenbach/docker-elk</li>
<li>https://logz.io/blog/docker-logging/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Pc Network Analyze Tools</h2>
                <div><h1>PC-Network-Analyze-Tools Role</h1>
<h2>Overview</h2>
<p>This README accompanies the <code>pc-network-analyze-tools</code> role within the <code>cymais</code> repository. This role is dedicated to installing key network analysis tools on personal computers.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file in the <code>pc-network-analyze-tools</code> role includes tasks for installing essential network analysis tools:</p>
<ol>
<li><strong>Install Administrator Network Analyze Tools</strong>:</li>
<li>Utilizes the <code>community.general.pacman</code> module to install:<ul>
<li><code>traceroute</code>: A network diagnostic tool for tracing the path that an IP packet follows to reach its destination.</li>
<li><code>wireshark-qt</code>: The Qt-based graphical interface for Wireshark, a network protocol analyzer.</li>
<li><code>wireshark-cli</code>: The command-line interface for Wireshark.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role relies on:
- <strong>pc-administrator-tools</strong>: Ensures that essential administrative tools, likely needed alongside network analysis tools, are installed.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-network-analyze-tools</code> role is tailored for network administrators, IT professionals, security analysts, and anyone who needs to analyze or troubleshoot network issues. These tools provide capabilities for detailed network packet inspection, route tracing, and understanding network performance issues.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required to run this role.</li>
<li><strong>Arch Linux-based System</strong>: The role uses the <code>pacman</code> package manager, indicating it is designed for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-network-analyze-tools</code> directory.
3. Run the role using Ansible, making sure you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>You can customize this role by adding or removing network analysis tools in the <code>main.yml</code> file, based on your specific needs or preferences.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more tools or enhancing the current setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the network analysis capabilities of this role are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Health Journalctl</h2>
                <div><h1>health-journalctl</h1>
<p>Checks journalctl for error messages</p></div>
            </section>
            
            <section>
                <h2>Pc Office</h2>
                <div><h1>PC-Office Role</h1>
<h2>Overview</h2>
<p>This README document is for the <code>pc-office</code> role, a component of the <code>cymais</code> repository. This role is designed to install a suite of office-related software on personal computers, providing a comprehensive set of tools for various office tasks.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file within the <code>pc-office</code> role comprises tasks for installing a range of office software:</p>
<ol>
<li><strong>Install Office Software</strong>:</li>
<li>The role utilizes the <code>community.general.pacman</code> module to install the following software packages:<ul>
<li><code>chromium</code>: A free and open-source web browser.</li>
<li><code>thunderbird</code>: A free and open-source email client, news client, RSS, and chat client.</li>
<li><code>calibre</code>: An e-book management software.</li>
<li><code>retext</code>: A simple but powerful editor for Markdown and reStructuredText.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>pc-libreoffice</strong>: Ensures that the LibreOffice suite, a comprehensive office package, is installed.
- <strong>pc-video-conference</strong>: Provides tools necessary for video conferencing, supplementing the office setup.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-office</code> role is ideal for users who require a full-fledged office setup on their personal computers. It encompasses tools for web browsing, email management, e-book organization, and document editing, catering to a wide range of office and productivity needs.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed to use this role.</li>
<li><strong>Arch Linux-based System</strong>: As the role uses the <code>pacman</code> package manager, it's intended for systems based on Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-office</code> directory.
3. Run the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>This role can be customized by adding or removing software packages in the <code>main.yml</code> file, depending on your specific office and productivity needs.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more office tools or enhancing the current setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the office and productivity environment are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Backup Data To Usb</h2>
                <div><h1>backup-data-to-usb</h1>
<p>This Ansible role automates the process of performing backups to a swappable USB device.</p>
<h2>Features</h2>
<ul>
<li>Automatically starts the backup process when mounted to a specific destination.</li>
<li>Supports customization of the backup source path and destination.</li>
<li>Provides a systemd service to run the backup script.</li>
</ul>
<h2>Author</h2>
<p>This role was created and is maintained by Kevin Veen-Birkenbach.</p>
<h2>Credits</h2>
<p>This software was created with the assistance of <a href="https://chat.openai.com/share/a75ca771-d8a4-4b75-9912-c515ba371ae4">OpenAI ChatGPT</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Gitlab</h2>
                <div><h1>Docker-GitLab Ansible Role</h1>
<h2>Overview</h2>
<p>This Ansible role is designed for setting up and managing a GitLab server running in a Docker container. It automates the process of installing GitLab, configuring its environment, and managing dependencies such as a PostgreSQL database and an Nginx reverse proxy.</p>
<h2>Features</h2>
<ul>
<li><strong>GitLab Installation</strong>: Automatically deploys GitLab using Docker.</li>
<li><strong>External PostgreSQL Database</strong>: Configures GitLab to use an external PostgreSQL database.</li>
<li><strong>Nginx Reverse Proxy Integration</strong>: Includes tasks for setting up an Nginx reverse proxy for GitLab.</li>
<li><strong>Customizable Configuration</strong>: Variables and templates allow for easy customization.</li>
</ul>
<h2>Requirements</h2>
<ul>
<li>Docker and Docker Compose installed on the target machine.</li>
<li>Ansible for automation.</li>
</ul>
<h2>Role Variables</h2>
<p>Variables are defined in <code>vars/main.yml</code>. Key variables include:
- <code>docker_compose.directories.instance</code>: Directory for Docker Compose instances.
- <code>application_id</code>, <code>database_host</code>, <code>database_name</code>, <code>database_username</code>, <code>database_password</code>: Database configuration variables.</p>
<h2>Handlers</h2>
<ul>
<li><code>recreate gitlab</code>: Restarts GitLab using Docker Compose when changes are detected.</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li><code>nginx-docker-reverse-proxy</code>: A role for setting up an Nginx reverse proxy for GitLab.</li>
</ul>
<h2>Template Files</h2>
<ul>
<li><code>docker-compose.yml.j2</code>: Jinja2 template for the Docker Compose configuration.</li>
<li>Additional templates for database and proxy configuration.</li>
</ul>
<h2>Usage</h2>
<p>Include this role in your Ansible playbooks and specify the necessary variables. Run the playbook to deploy and configure GitLab in a Docker environment.</p>
<p>For a detailed walkthrough and explanation of this role, refer to the conversation at <a href="https://chat.openai.com/share/1b0147bf-d4de-4790-b8ed-c332aa4e3ce3">ChatGPT Session Transcript</a>.</p>
<h2>Further Information</h2>
<ul>
<li>https://ralph.blog.imixs.com/2019/06/09/running-gitlab-on-docker/</li>
</ul>
<h2>Performance Optimation</h2>
<ul>
<li>https://techoverflow.net/2020/04/18/how-i-reduced-gitlab-memory-consumption-in-my-docker-based-setup/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Nginx Serve Html Legal</h2>
                <div><h1>Nginx Homepage Role</h1>
<p>This Ansible role configures an Nginx server to serve a static homepage. It handles domain configuration, SSL certificate retrieval with Let's Encrypt.</p>
<h2>Author Information</h2>
<p>This role was created in 2023 by <a href="https://www.veen.world/">Kevin Veen Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools</h2>
                <div><h1>PC-Developer-Tools Role</h1>
<h2>Overview</h2>
<p>This README document is for the <code>pc-developer-tools</code> role within the <code>cymais</code> repository. The role is designed to streamline the setup of essential development tools on personal computers, particularly for software development environments.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file under the <code>pc-developer-tools</code> role includes tasks focused on the installation of key development tools:</p>
<ol>
<li><strong>Install Base Developer Tools</strong>:</li>
<li>This task uses the <code>community.general.pacman</code> module to install:<ul>
<li><code>code</code>: Visual Studio Code (VS Code), a powerful and popular open-source code editor that is highly customizable and supports a wide range of programming languages.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role relies on:
- <strong>pc-administrator-tools</strong>: Ensures that core administrative tools are installed, which can be essential for various development tasks.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools</code> role is tailored for developers who need a quick and efficient setup of a development environment on their personal computer. It is particularly useful for programmers, software engineers, and anyone involved in software development who prefers a streamlined and efficient workflow.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required to run this role.</li>
<li><strong>Arch Linux-based System</strong>: The role is designed with the <code>pacman</code> package manager in mind, thus it is best suited for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-developer-tools</code> directory.
3. Run the role using Ansible, making sure you have the necessary privileges for package installation.</p>
<h2>Customization</h2>
<p>Users can customize this role by adding more development tools or editors according to their specific needs in the <code>main.yml</code> file.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions (such as adding more developer tools or enhancing the existing setup), please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the development environment setup are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Pc Caffeine</h2>
                <div><h1>Ansible Role: caffeine_auto_start</h1>
<p>An Ansible Role that installs <code>caffeine-ng</code> on Archlinux systems and sets it to start automatically when the user logs in.</p>
<h2>Requirements</h2>
<ul>
<li>The target system should be Archlinux.</li>
<li>Ansible 2.4 or higher.</li>
<li>The <a href="https://galaxy.ansible.com/kewlfft/aur">kewlfft.aur.aur</a> Ansible Galaxy role for managing AUR packages.</li>
</ul>
<h2>Role Variables</h2>
<p>None.</p>
<h2>Author</h2>
<p>Kevin Veen-Birkenbach - kevin@veen.world - https://www.veen.world/</p>
<h2>Background</h2>
<p>The code for this role was created in an interactive conversation with OpenAI's language model. You can view the original conversation <a href="https://chat.openai.com/share/fa846dac-6068-4386-b3e7-b75f1248ec82">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Nginx</h2>
                <div><h1>role nginx</h1>
<p>This role sets up an nginx server. It was developed by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.</p>
<h2>Debug</h2>
<h3>General Debugging</h3>
<p><code>bash 
journalctl -f -u nginx</code></p>
<h3>Detailled Debugging</h3>
<p>Set <code>enable_debugenable_debug: true</code>.</p>
<h4>Follow logs of one host</h4>
<p><code>bash
journalctl -u nginx -f | grep "&lt;&lt;hostname&gt;&gt;"</code></p>
<h3>Activate detailled Debugging:</h3>
<h2>performance</h2>
<ul>
<li>https://www.monitis.com/blog/6-best-practices-for-optimizing-your-nginx-performance/</li>
<li>https://www.nginx.com/blog/tuning-nginx/</li>
<li>https://davidwalsh.name/enable-gzip</li>
<li>https://www.nginx.com/blog/performance-tuning-tips-tricks/</li>
<li>https://medium.com/pixelpoint/best-practices-for-cache-control-settings-for-your-website-ff262b38c5a2</li>
<li>https://www.nginx.com/blog/nginx-caching-guide/</li>
<li>https://meta.discourse.org/t/using-nginx-as-proxy-server-is-very-slow-but-it-is-very-fast-if-using-nginx-in-docker-why/168972</li>
</ul></div>
            </section>
            
            <section>
                <h2>Pc Administrator Tools</h2>
                <div><h1>PC-Bluray-Player-Tools Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-bluray-player-tools</code> role, a part of the <code>cymais</code> repository. This role is dedicated to setting up software required for Blu-ray playback on personal computers. It focuses on installing necessary packages to enable the use of Blu-ray media with VLC player and other compatible software.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file in this role consists of tasks that automate the installation of the following packages:
1. <strong>Install VLC and Blu-ray Software</strong>:
   - <code>vlc</code>: A versatile media player that supports Blu-ray playback.
   - <code>libaacs</code>: A library for Blu-ray disc encryption handling.
   - <code>libbluray</code>: A library for Blu-ray disc playback support.</p>
<p>There are commented-out tasks for installing additional AUR packages, such as <code>aacskeys</code> and <code>libbdplus</code>, which can be enabled as per the user's requirements.</p>
<h2>Further Information and Resources</h2>
<p>For more in-depth information and guidance on Blu-ray playback and software configuration, the following resources can be consulted:
- <a href="https://wiki.archlinux.org/title/Blu-ray#Using_aacskeys">Arch Linux Wiki on Blu-ray</a>
- <a href="https://videobyte.de/play-blu-ray-with-vlc">Guide to Play Blu-ray with VLC</a>
- <a href="https://archived.forum.manjaro.org/t/wie-kann-ich-bluray-uhd-abspielen/127396/12">Manjaro Forum Discussion on Blu-ray UHD Playback</a>
- <a href="http://fvonline-db.bplaced.net/">FV Online DB</a></p>
<h2>Dependencies</h2>
<p>This role depends on the <code>java</code> role, which ensures the Java runtime is available – a requirement for certain Blu-ray playback tools and functionalities.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Ansible must be installed on your system to use this role.</li>
<li><strong>Arch Linux-based System</strong>: Designed for Arch Linux distributions, using the <code>pacman</code> package manager.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-bluray-player-tools</code> directory.
3. Execute the role using Ansible, with appropriate permissions for installing packages.</p>
<h2>Customization</h2>
<p>You can customize this role by enabling or adding additional tasks for other AUR packages related to Blu-ray playback as needed.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions to enhance the role's capabilities, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve Blu-ray playback support or compatibility are highly appreciated.</p></div>
            </section>
            
            <section>
                <h2>System Btrfs Auto Balancer</h2>
                <div><h1>System Btrfs Auto Balancer Role 📦</h1>
<p>This Ansible role automates the management and balancing of Btrfs file systems. It ensures that the Btrfs file system is maintained efficiently without manual intervention.</p>
<h2>Features ✨</h2>
<ul>
<li><strong>Automatic Cloning of Repository:</strong> Fetches the latest <code>auto-btrfs-balancer</code> repository from GitHub.</li>
<li><strong>Systemd Service Configuration:</strong> Creates and configures a Systemd service to automatically run the balancing script.</li>
<li><strong>Systemd Timer Integration:</strong> Integrates a Systemd timer to run the balancing service at regular intervals.</li>
<li><strong>Error Notification:</strong> Notifies via Systemd in case of errors during the balancing process.</li>
</ul>
<h2>Prerequisites 📋</h2>
<ul>
<li><strong>Ansible:</strong> This role requires Ansible to run.</li>
<li><strong>Systemd:</strong> Target systems must support Systemd.</li>
<li><strong>Git:</strong> Git must be installed to clone the repository.</li>
</ul>
<h2>Author ✍️</h2>
<p>This role was created by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.
- <strong>Email:</strong> kevin@veen.world
- <strong>Website:</strong> <a href="https://www.veen.world">veen.world</a></p>
<h2>Contact ☎️</h2>
<p>For questions or support, you can reach Kevin Veen-Birkenbach via <a href="mailto:kevin@veen.world">email</a>.</p>
<h2>Created with AI</h2>
<p>This README.md was created with the assistance of ChatGPT. You can view the conversation <a href="https://chatgpt.com/share/dcec1b4a-c7a8-4cf8-a87a-987eb0500857">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Systemd Notifier Email</h2>
                <div><h1>systemd-notifier-email Ansible Role</h1>
<p>Author: Kevin Veen-Birkenbach (kevin@veen.world)</p>
<h2>Description</h2>
<p>This Ansible role installs the necessary components for sending email notifications through systemd when any service fails. It configures the <code>systemd-notifier-email</code> service and handles the setup of email parameters and templates.</p>
<p>Features include:</p>
<ul>
<li>Installation and configuration of an email sending service.</li>
<li>Customizable email templates for service failure notifications.</li>
</ul>
<p>This role is part of the <code>systemd-notifier</code> suite, which provides a comprehensive solution for service failure notifications in a systemd environment.</p>
<p>This role was created as part of a conversation with OpenAI's ChatGPT and can be found <a href="https://chat.openai.com/share/96e4ca12-0888-41c0-9cfc-29c0180f0dba">here</a>.</p>
<h2>Requirements</h2>
<p>This role has the following requirements:</p>
<ul>
<li>Access to an SMTP server for sending email notifications.</li>
<li>Availability of the <code>msmtp</code> package on the target system.</li>
</ul>
<h2>Role Variables</h2>
<p>The following variables can be customized in the role's <code>vars/main.yml</code> file:</p>
<ul>
<li><code>systemd_notifier_email_folder</code>: The path to the folder where email-related scripts and configurations will be stored.</li>
</ul>
<h2>Usage</h2>
<p>To use this role, include it as a dependency in your playbook or role that requires email notifications. Ensure that the <code>systemd-notifier-email</code> role is correctly referenced and configured.</p>
<h2>Contact Information</h2>
<p>For any questions or feedback, please contact the author:</p>
<p>Author: Kevin Veen-Birkenbach
Email: kevin@veen.world</p></div>
            </section>
            
            <section>
                <h2>Docker Peertube</h2>
                <div><h1>docker peertube</h1>
<h2>track docker container status</h2>
<p><code>bash
watch -n 2 "docker ps  -a | grep peertube"</code></p>
<h2>clean rebuild</h2>
<p><code>bash
cd {% raw %}{{path_docker_compose_instances}}{% endraw %}peertube/ &amp;&amp;
docker-compose down 
docker volume rm peertube_assets peertube_config peertube_data peertube_database peertube_redis
docker-compose up -d</code></p>
<h2>access terminal</h2>
<p><code>bash
docker-compose exec -it application /bin/bash</code></p>
<h2>update config</h2>
<p><code>bash
apt update &amp;&amp; apt install nano &amp;&amp; nano ./config/default.yaml</code></p>
<h2>get root pasword</h2>
<p><code>bash
docker logs peertube-application-1 | grep -A1 root</code></p>
<h2>upgrade version</h2>
<ul>
<li>https://docs.joinpeertube.org/install/docker</li>
</ul>
<h2>further information</h2>
<ul>
<li>https://docs.joinpeertube.org/install-docker</li>
<li>https://github.com/Chocobozzz/PeerTube/issues/3091</li>
<li><a href="https://chatgpt.com/c/67a4f448-4be8-800f-8639-4c15cb2fb44e">OIDC Plugin installation</a></li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Mediawiki</h2>
                <div><h1>role docker-mediawiki</h1>
<h2>Generate LocalSettings.php</h2>
<p>Login to the container:</p>
<p><code>bash
docker-compose exec -it application /bin/sh</code></p>
<p>Seed the LocalSettings.php:</p>
<p>```bash
cat &gt; LocalSettings.php &lt;&lt; EOF
&lt;?php</p>
<h1>This file was automatically generated by the MediaWiki 1.35.0</h1>
<h1>installer. If you make manual changes, please keep track in case you</h1>
<h1>need to recreate them later.</h1>
<h1></h1>
<h1>See includes/DefaultSettings.php for all configurable settings</h1>
<h1>and their default values, but don't forget to make changes in <em>this</em></h1>
<h1>file, not there.</h1>
<h1></h1>
<h1>Further documentation for configuration settings may be found at:</h1>
<h1>https://www.mediawiki.org/wiki/Manual:Configuration_settings</h1>
<h1>Protect against web entry</h1>
<p>if ( !defined( 'MEDIAWIKI' ) ) {
    exit;
}</p>
<h2>Uncomment this to disable output compression</h2>
<h1>\$wgDisableOutputCompression = true;</h1>
<p>\$wgSitename = "test";
\$wgMetaNamespace = "Test";</p>
<h2>The URL base path to the directory containing the wiki;</h2>
<h2>defaults for all runtime URL paths are based off of this.</h2>
<h2>For more information on customizing the URLs</h2>
<h2>(like /w/index.php/Page_title to /wiki/Page_title) please see:</h2>
<h2>https://www.mediawiki.org/wiki/Manual:Short_URL</h2>
<p>\$wgScriptPath = "";</p>
<h2>The protocol and server name to use in fully-qualified URLs</h2>
<p>\$wgServer = "http://wiki.veen.world";</p>
<h2>The URL path to static resources (images, scripts, etc.)</h2>
<p>\$wgResourceBasePath = \$wgScriptPath;</p>
<h2>The URL paths to the logo.  Make sure you change this from the default,</h2>
<h2>or else you'll overwrite your logo when you upgrade!</h2>
<p>\$wgLogos = [ '1x' =&gt; "\$wgResourceBasePath/resources/assets/wiki.png" ];</p>
<h2>UPO means: this is also a user preference option</h2>
<p>\$wgEnableEmail = true;
\$wgEnableUserEmail = true; # UPO</p>
<p>\$wgEmergencyContact = "apache@🌻.invalid";
\$wgPasswordSender = "apache@🌻.invalid";</p>
<p>\$wgEnotifUserTalk = false; # UPO
\$wgEnotifWatchlist = false; # UPO
\$wgEmailAuthentication = true;</p>
<h2>Database settings</h2>
<p>\$wgDBtype = "mysql";
\$wgDBserver = "database:3306";
\$wgDBname = "mediawiki";
\$wgDBuser = "mediawiki";
\$wgDBpassword = "test";</p>
<h1>MySQL specific settings</h1>
<p>\$wgDBprefix = "";</p>
<h1>MySQL table options to use during installation or update</h1>
<p>\$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";</p>
<h2>Shared memory settings</h2>
<p>\$wgMainCacheType = CACHE_NONE;
\$wgMemCachedServers = [];</p>
<h2>To enable image uploads, make sure the 'images' directory</h2>
<h2>is writable, then set this to true:</h2>
<p>\$wgEnableUploads = false;
\$wgUseImageMagick = true;
\$wgImageMagickConvertCommand = "/usr/bin/convert";</p>
<h1>InstantCommons allows wiki to use images from https://commons.wikimedia.org</h1>
<p>\$wgUseInstantCommons = false;</p>
<h1>Periodically send a pingback to https://www.mediawiki.org/ with basic data</h1>
<h1>about this MediaWiki instance. The Wikimedia Foundation shares this data</h1>
<h1>with MediaWiki developers to help guide future development efforts.</h1>
<p>\$wgPingback = true;</p>
<h2>If you use ImageMagick (or any other shell command) on a</h2>
<h2>Linux server, this will need to be set to the name of an</h2>
<h2>available UTF-8 locale</h2>
<p>\$wgShellLocale = "C.UTF-8";</p>
<h2>Set \$wgCacheDirectory to a writable directory on the web server</h2>
<h2>to make your wiki go slightly faster. The directory should not</h2>
<h2>be publicly accessible from the web.</h2>
<h1>\$wgCacheDirectory = "\$IP/cache";</h1>
<h1>Site language code, should be one of the list in ./languages/data/Names.php</h1>
<p>\$wgLanguageCode = "en";</p>
<p>\$wgSecretKey = "603fe88c985b05706f19aaf77d2a61459555ff21a4a4d4ef0aa15c8f8ec50f00";</p>
<h1>Changing this will log out all existing sessions.</h1>
<p>\$wgAuthenticationTokenVersion = "1";</p>
<h1>Site upgrade key. Must be set to a string (default provided) to turn on the</h1>
<h1>web installer while LocalSettings.php is in place</h1>
<p>\$wgUpgradeKey = "f99263b0f3a7c59a";</p>
<h2>For attaching licensing metadata to pages, and displaying an</h2>
<h2>appropriate copyright notice / icon. GNU Free Documentation</h2>
<h2>License and Creative Commons licenses are supported so far.</h2>
<p>\$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
\$wgRightsUrl = "";
\$wgRightsText = "";
\$wgRightsIcon = "";</p>
<h1>Path to the GNU diff3 utility. Used for conflict resolution.</h1>
<p>\$wgDiff3 = "/usr/bin/diff3";</p>
<h2>Default skin: you can change the default skin. Use the internal symbolic</h2>
<h2>names, ie 'vector', 'monobook':</h2>
<p>\$wgDefaultSkin = "vector";</p>
<h1>Enabled skins.</h1>
<h1>The following skins were automatically enabled:</h1>
<p>wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );</p>
<h1>End of automatically generated settings.</h1>
<h1>Add more configuration options below.</h1>
<p>EOF
```</p>
<h2>Further Information</h2>
<p>This role was adapted to solve some deprecation message. Please test it before using productive. <a href="https://chatgpt.com/share/6781487e-45fc-800f-a35e-e93f49448176">See this conversation</a>.</p></div>
            </section>
            
            <section>
                <h2>Update Apt</h2>
                <div><h1>role update-apt</h1>
<p>This role updates the packages</p>
<h1>upgrade</h1>
<p>Keep in mind that you have to do the upgrade manual because debian based distributions are no runing release</p></div>
            </section>
            
            <section>
                <h2>Nginx Modifier All</h2>
                <div><h1>Nginx Global Matomo &amp; Theming Modifier Role 🚀</h1>
<p>This role enhances your Nginx configuration by conditionally injecting global Matomo tracking and theming elements into your HTML responses. It uses Nginx sub-filters to seamlessly add tracking scripts and CSS links to your web pages.</p>
<hr />
<h2>Features</h2>
<ul>
<li>
<p><strong>Global Matomo Tracking</strong><br />
  The role includes Matomo tracking configuration and injects the corresponding tracking script into your HTML.</p>
</li>
<li>
<p><strong>Global Theming</strong><br />
  The role injects a global CSS link for consistent theming across your site.</p>
</li>
<li>
<p><strong>Smart Injection</strong><br />
  Uses Nginx's <code>sub_filter</code> to insert the tracking and theming snippets right before the closing <code>&lt;/head&gt;</code> tag of your HTML documents.</p>
</li>
</ul>
<p>This will automatically activate Matomo tracking and/or global theming based on your configuration.</p>
<hr />
<h2>Author</h2>
<p>Developed by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a> 😎</p>
<hr />
<p>Happy automating! 🎉</p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools Java</h2>
                <div><h1>PC-Developer-Tools-Java Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-developer-tools-java</code> role, a part of the <code>cymais</code> repository. This role is specifically designed for setting up Java development tools on personal computers. It is an essential component for Java developers, providing the necessary tools and dependencies for efficient Java development.</p>
<h2>Role Dependencies</h2>
<p>This role has dependencies on two other roles within the playbook:
1. <strong>Java</strong>: Ensures that Java, specifically the JDK (Java Development Kit), is installed and configured on the system. This is a critical prerequisite for running and developing Java applications.
2. <strong>PC-Developer-Tools</strong>: Establishes a base environment of developer tools which might include code editors, version control systems, and other utilities beneficial for a broad range of development activities.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools-java</code> role is tailored to meet the needs of Java developers by ensuring that their systems are equipped with all necessary Java-specific tools. This role is particularly useful for software engineers, application developers, and students working with Java.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: You must have Ansible installed on your system to use this role.</li>
<li><strong>Appropriate Operating System</strong>: While the role itself doesn't specify system requirements, the dependencies, especially the Java role, may be tailored for specific distributions like Arch Linux. Ensure your system is compatible with these requirements.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Ensure the <code>cymais</code> repository is cloned to your machine.
2. Verify that the dependencies (<code>java</code> and <code>pc-developer-tools</code>) are correctly set up and configured in your playbook.
3. Navigate to the directory containing the <code>pc-developer-tools-java</code> role.
4. Execute the role using Ansible. Ensure that you have the appropriate permissions and environment for installing and configuring the development tools.</p>
<h2>Customization</h2>
<p>You may customize this role by adding additional Java development tools or adjusting configurations to better suit your specific development needs.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions to this role, such as adding more Java-related tools or enhancing the setup process, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the Java development environment setup are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Docker Funkwhale</h2>
                <div><h1>role funkwhale</h1>
<p>This role doesn't work and needs to be implemented</p>
<h2>cleanup</h2>
<p><code>bash
docker-compose down &amp;&amp; docker volume rm funkwhale_data</code></p>
<h2>further information</h2>
<ul>
<li>https://docs.funkwhale.audio/installation/docker.html</li>
</ul></div>
            </section>
            
            <section>
                <h2>System Storage Optimizer</h2>
                <div><h1>System Storage Optimizer Role</h1>
<h2>Overview</h2>
<p>The <code>system-storage-optimizer</code> role is designed for managing and optimizing storage allocation of Docker volumes. It automates the process of moving Docker volumes between SSD (rapid storage) and HDD (mass storage) based on the container image types, enhancing performance and efficiency.</p>
<h2>Features</h2>
<ul>
<li>Dynamically moves Docker volumes based on container image types.</li>
<li>Utilizes SSDs for database-related volumes for faster access.</li>
<li>Moves non-database volumes to HDDs for efficient mass storage.</li>
<li>Handles container stopping and starting during the optimization process.</li>
<li>Creates symbolic links to maintain consistent paths.</li>
</ul>
<h2>Usage</h2>
<p>To deploy this role, include it in your Ansible playbook and define the necessary paths for SSD and HDD storage.</p>
<h2>Additional Information</h2>
<p>For detailed context and the development history of this role, refer to <a href="https://chat.openai.com/share/40fef8a6-5e9b-4b5e-8e68-7f2fd9abf5cc">this conversation</a>.</p></div>
            </section>
            
            <section>
                <h2>Cleanup Backups Service</h2>
                <div><h1>role cleanup-backups-timer</h1>
<p>Cleans up old backups</p>
<h2>Additional software</h2>
<p>It may be neccessary to install gcc seperat to use psutil</p>
<p><code>bash
  sudo pacman -S gcc</code></p>
<h2>further information</h2>
<ul>
<li>https://stackoverflow.com/questions/48929553/get-hard-disk-size-in-python</li>
</ul></div>
            </section>
            
            <section>
                <h2>Pc Virtual Box</h2>
                <div><h1>pc-virtual-box</h1>
<p><code>bash
    sudo pacman -S virtualbox "$(pacman -Qsq "^linux" | grep "^linux[0-9]*[-rt]*$" | awk '{print $1"-virtualbox-host-modules"}' ORS=' ')" &amp;&amp;
    sudo vboxreload &amp;&amp;
    pamac build virtualbox-ext-oracle &amp;&amp;
    sudo gpasswd -a "$USER" vboxusers || exit 1
    echo "Keep in mind to install the guest additions in the virtualized system. See https://wiki.manjaro.org/index.php?title=VirtualBox"</code></p></div>
            </section>
            
            <section>
                <h2>Client Wireguard Behind Firewall</h2>
                <div><h1>client-wireguard-behind-nat</h1>
<h1>see</h1>
<ul>
<li>https://gist.github.com/insdavm/b1034635ab23b8839bf957aa406b5e39</li>
<li>https://wiki.debian.org/iptables</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Phpmyadmin</h2>
                <div><h1>Docker PhpMyAdmin Role</h1>
<p>Welcome to the <strong>Docker PhpMyAdmin Role</strong>! 🎉 This role simplifies the deployment of PhpMyAdmin in a Docker environment, including optional OAuth2 proxy support for enhanced security.</p>
<h2>Features ✨</h2>
<ul>
<li>🚀 <strong>Automated Deployment:</strong> Effortlessly deploy PhpMyAdmin with Docker Compose.</li>
<li>🔐 <strong>OAuth2 Proxy Support:</strong> Secure access with OAuth2 authentication.</li>
<li>🛠️ <strong>Configurable Settings:</strong> Fully customizable via Ansible variables.</li>
<li>🌐 <strong>Support for Central Databases:</strong> Seamlessly integrates with a central MariaDB database.</li>
<li>🐳 <strong>Docker Compose Integration:</strong> Generates <code>docker-compose.yml</code> tailored to your environment.</li>
</ul>
<h2>Learn More 📖</h2>
<ul>
<li>Official PhpMyAdmin Website: <a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net/</a></li>
</ul>
<h2>Contributing 🤝</h2>
<p>Contributions are welcome! Feel free to fork this repository, submit issues, or create pull requests to improve this role.</p>
<hr />
<p>Made with ❤️ by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>User Root</h2>
                <div><h1>Root User</h1>
<h2>Overview</h2>
<p>This Ansible role is designed to manage the generation and handling of an SSH key for the root user on a target system. It ensures that an SSH key is generated if it does not already exist and displays the public key. This role is particularly useful for setting up secure SSH access for root users in automated environments.</p>
<h2>Role Variables</h2>
<ul>
<li><code>run_once_user_root</code>: A variable to ensure that certain tasks are only run once. This is used for idempotency purposes.</li>
</ul>
<h2>Tasks</h2>
<ol>
<li><strong>Check if the SSH key for root already exists</strong>: Verifies the existence of an SSH public key for the root user.</li>
<li><strong>Generate a SSH key for root if it does not exist</strong>: Generates a new SSH key pair (RSA 4096 bits) for the root user if it is not already present.</li>
<li><strong>Display the public SSH key</strong>: Outputs the content of the generated public SSH key.</li>
<li><strong>Output the public SSH key</strong>: Debug task to display the SSH public key in the Ansible output.</li>
<li><strong>Run the user_root tasks once</strong>: Sets a fact to ensure that the tasks for generating and displaying the key are executed only once.</li>
</ol>
<h2>Important Notes</h2>
<ul>
<li>Running this role will affect the root user's SSH configuration on the target system. Ensure you understand the implications of modifying root SSH keys.</li>
<li>Always test the role in a controlled environment before deploying to production.</li>
</ul>
<h2>Author</h2>
<p>This role was created by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></p></div>
            </section>
            
            <section>
                <h2>Tasks</h2>
                <div><h1>Hunspell</h1>
<h2>Overview</h2>
<p>This README accompanies the Hunspell Playbook, located within the <code>cymais</code> repository. The playbook is focused on installing Hunspell, a widely-used spell checker, along with various language packages to enhance its functionality.</p>
<h2>Playbook Contents</h2>
<p>The <code>main.yml</code> file in the <code>hunspell</code> role includes two primary tasks:</p>
<ol>
<li>
<p><strong>Install Hunspell</strong>: Utilizes the <code>community.general.pacman</code> module to ensure that the <code>hunspell</code> package is installed on the system.</p>
</li>
<li>
<p><strong>Install Hunspell Language Packages</strong>: Again using the <code>community.general.pacman</code> module, this task installs multiple Hunspell language packages. The specific languages to be installed are determined by the <code>{% raw %}{{hunspell_languages}}{% endraw %}</code> variable, which should be defined as a list of language codes.</p>
</li>
</ol>
<h2>Purpose and Usage</h2>
<p>This playbook is tailored for users who need a powerful and flexible spell-checking tool on their systems. Hunspell is particularly popular among writers, editors, and developers who work with text in various languages. By automating the installation of Hunspell and its language-specific packages, this playbook simplifies the setup process, allowing users to quickly get up and running with an advanced spell-checking tool.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: This playbook requires Ansible to be installed on your system.</li>
<li><strong>Arch Linux or Similar</strong>: Given the use of the <code>pacman</code> package manager, this playbook is designed for systems based on Arch Linux or similar distributions.</li>
</ul>
<h2>How to Run the Playbook</h2>
<p>To utilize this playbook:
1. Ensure you have cloned the <code>cymais</code> repository.
2. Navigate to the <code>roles/hunspell</code> directory within the repository.
3. Execute the playbook using Ansible, ensuring you provide a list of language codes to the <code>{% raw %}{{hunspell_languages}}{% endraw %}</code> variable.</p>
<h2>Customization</h2>
<p>Users are encouraged to customize the <code>{% raw %}{{hunspell_languages}}{% endraw %}</code> variable based on their specific language requirements. This variable accepts a list of language codes (e.g., 'en_US', 'de_DE').</p>
<h2>Support and Contributions</h2>
<p>For any support requests, suggestions, or contributions, please open an issue or a pull request in the <code>cymais</code> repository. Contributions, especially those that enhance the playbook's functionality or extend its language support, are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Driver Epson Multiprinter</h2>
                <div><h1>role driver-epson-multiprinter</h1>
<h2>further information</h2>
<ul>
<li>https://bernhardsteindl.at/epson-ecotank-et-3600-unter-arch-linux-einrichten/</li>
<li>http://download.ebz.epson.net/dsc/search/01/search/searchModule</li>
<li>https://aur.archlinux.org/packages/epson-inkjet-printer-escpr</li>
<li>https://forum.manjaro.org/t/probleme-mit-epson-et-2820/109777</li>
<li>https://www.ordinatechnic.com/distribution-specific-guides/Arch/installing-an-epson-multifunction-printer-on-arch-linux-and-derivatives</li>
<li>http://localhost:631/admin</li>
<li>https://wiki.archlinux.org/title/SANE/Scanner-specific_problems</li>
<li>https://wiki.archlinux.org/title/SANE</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Snipe_It</h2>
                <div><h1>Docker Snipe-IT</h1>
<p>This 🚀 <strong>CyMaIS</strong> role provides an automated deployment and configuration for <strong><a href="https://github.com/snipe/snipe-it">Snipe-IT</a></strong>, an open-source asset management system. It leverages <strong>Docker Compose</strong>, <strong>Ansible</strong>, and <strong>centralized database integration</strong> to streamline deployment and maintenance.</p>
<p>👤 <strong>Author:</strong> Kevin Veen-Birkenbach<br />
🔗 <strong>Website:</strong> <a href="https://veen.world">veen.world</a></p>
<h2>Features ✨</h2>
<ul>
<li>Automated setup using <strong>Docker Compose</strong> 🐳</li>
<li>Centralized <strong>MariaDB</strong> database support 🛢️</li>
<li>Secure environment configurations 🔐</li>
<li>Configurable <strong>SMTP email settings</strong> 📧</li>
<li><strong>SAML Authentication Support</strong> (Pending Fix) 🔐</li>
<li><strong>Redis Caching</strong> for improved performance ⚡</li>
</ul>
<h2>Administration 🛠️</h2>
<p>Clear and restart the application:
<code>bash
docker-compose exec application php artisan config:clear
docker-compose exec application php artisan cache:clear
docker-compose restart application</code></p>
<h2>Pending Issue 🚧</h2>
<p>To ensure full <strong>SAML authentication integration</strong>, this issue still needs to be resolved:<br />
🔗 <a href="https://github.com/snipe/snipe-it/issues/16186">GitHub Issue #16186</a></p>
<h2>Additional Resources 📚</h2>
<p>For more details, visit the official documentation and related links:
- 🔗 <a href="https://snipe-it.readme.io/docs/ldap-sync-login">Snipe-IT Documentation</a>
- 🔗 <a href="https://snipe-it.readme.io/docs/saml">SAML Setup</a>
- 🔗 <a href="https://docs.mattermost.com/onboard/sso-saml-keycloak.html">Mattermost SSO Integration</a>
- https://snipe-it.readme.io/docs/ldap-sync-login
- https://github.com/snipe/snipe-it/issues/8584
- https://chatgpt.com/c/67a34927-a994-800f-a3d5-86a5b0205c8b
- https://github.com/snipe/snipe-it/issues/14895
- https://github.com/snipe/snipe-it/issues/16186</p>
<p>🚀 Happy Deploying! 🏗️</p></div>
            </section>
            
            <section>
                <h2>Health Nginx</h2>
                <div><h1>health-nginx</h1>
<h2>Overview</h2>
<p><code>health-nginx</code> is an Ansible role designed to send health reports for nginx configurations. It leverages Python scripting to check the status of nginx server configurations and reports back any issues. This role is especially useful for maintaining the health of nginx servers in a dynamic environment.</p>
<h2>Requirements</h2>
<ul>
<li>Ansible</li>
<li>Python with the <code>requests</code> module</li>
<li>Access to the nginx configuration files</li>
</ul>
<h2>Role Variables</h2>
<ul>
<li><code>health_nginx_folder</code>: The folder where the <code>health-nginx</code> script and related files are stored. Defaults to <code>"{% raw %}{{ path_administrator_scripts }}{% endraw %}health-nginx/"</code>.</li>
</ul>
<h2>Dependencies</h2>
<p>This role depends on:
- <code>python-pip</code>: For installing Python packages.
- <code>systemd-notifier</code>: For notifying systemd in case of any failures.</p>
<h2>Example Playbook</h2>
<p><code>yaml
- hosts: servers
  roles:
    - { role: health-nginx }</code></p>
<h2>Usage</h2>
<ol>
<li><strong>Installation of Python Modules</strong>: The role installs the required Python <code>requests</code> module.</li>
<li><strong>File and Directory Management</strong>: It creates the necessary directories and files, including the <code>health-nginx.py</code> script.</li>
<li><strong>Service and Timer Templates</strong>: Templates for <code>health-nginx.cymais.service</code> and <code>health-nginx.cymais.timer</code> are set up to automate the health checks.</li>
<li><strong>Running the Health Check</strong>: The <code>health-nginx.py</code> script is executed to perform the health check. It iterates over nginx configuration files and sends a HEAD request to each domain/subdomain to verify its status. The script considers different expected status codes based on the domain or subdomain.</li>
</ol>
<h2>Handler Details</h2>
<ul>
<li><strong>reload health-nginx.cymais.service</strong>: Reloads the <code>health-nginx.cymais.service</code> if there are any changes to the service file.</li>
<li><strong>restart health-nginx.cymais.timer</strong>: Restarts and enables the <code>health-nginx.cymais.timer</code> to schedule regular health checks.</li>
</ul>
<h2>Additional Information</h2>
<ul>
<li>For more details on nginx configurations, visit <a href="https://nginx.org/en/docs/">nginx documentation</a>.</li>
<li>Learn more about Ansible's <code>uri_module</code> <a href="https://docs.ansible.com/ansible/latest/modules/uri_module.html">here</a>.</li>
</ul>
<h2>Contributions</h2>
<p>This role was created with the assistance of ChatGPT. The conversation can be found <a href="https://chat.openai.com/share/4033be29-12a6-40a3-bf3c-fc5d57dba8cb">here</a> and <a href="https://chat.openai.com/share/7f3766d1-9db7-4976-8fe9-68d1142c0a78">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Corporate Identity</h2>
                <div><h1>Corporate Identity</h1>
<p>Loads the roles to setup a corporate identity</p></div>
            </section>
            
            <section>
                <h2>Docker Openproject</h2>
                <div><h1>OpenProject Role</h1>
<h2>Overview</h2>
<p>This role is designed to deploy the <a href="https://www.openproject.org/">OpenProject</a> application using Docker. It includes tasks for setting up the environment, pulling the Docker repository, and configuring a reverse proxy with Nginx. It was developed by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></p>
<h2>Handlers</h2>
<p>Defined in <code>handlers/main.yml</code>, the handler <code>recreate openproject</code> is used for recreating the OpenProject instance with specific environment settings.</p>
<h2>Tasks</h2>
<p>Outlined in <code>tasks/main.yml</code>, the role includes tasks for:</p>
<ul>
<li>Including Nginx Docker proxy domain tasks.</li>
<li>Creating the repository directory.</li>
<li>Pulling the OpenProject Docker repository.</li>
<li>Warning if the repository is not reachable.</li>
<li>Copying the <code>.env</code> file from a template.</li>
</ul>
<h2>Usage</h2>
<p>To use this role, include it in your Ansible playbook and set the necessary variables, especially those required in the <code>.env</code> file template.</p>
<h2>Notes</h2>
<p>Ensure that Docker and Docker Compose are installed and configured correctly on the target machine. Also, ensure that the necessary ports are open and accessible.</p></div>
            </section>
            
            <section>
                <h2>Docker Gitea</h2>
                <div><h1>role docker-gitea</h1>
<h2>update</h2>
<p><code>bash 
cd {% raw %}{{docker_compose.directories.instance}}{% endraw %}
docker-compose down
docker-compose pull
docker-compose up -d</code>
Keep in mind to track and to don't interrupt the update process until the migration is done. </p>
<h2>set variables</h2>
<p><code>bash
  COMPOSE_HTTP_TIMEOUT=600
  DOCKER_CLIENT_TIMEOUT=600</code></p>
<h2>recreate</h2>
<p><code>bash
cd {% raw %}{{docker_compose.directories.instance}}{% endraw %} &amp;&amp; docker-compose -p gitea up -d --force-recreate</code></p>
<h2>database access</h2>
<p>To access the database execute
<code>bash
  docker-compose exec -it database /bin/mysql -u gitea -p</code></p>
<h2>bash in application</h2>
<p>docker-compose exec -it application /bin/sh</p>
<h2>More Information</h2>
<ul>
<li><a href="https://docs.gitea.com/usage/authentication">Gitea LDAP integration</a></li>
<li><a href="https://chatgpt.com/share/67a5f599-c9b0-800f-87fe-49a3b61263e6">Gitea Alternatives</a></li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Baserow</h2>
                <div><h1>docker baserow</h1>
<p>This role allows the setup of <a href="https://baserow.io/">baserole</a>.</p>
<h2>More Information</h2>
<p>It was created with the help of <a href="https://chat.openai.com/share/556c2d7f-6b6f-4256-a646-a50529554efc">Chat GPT-4</a>.</p>
<h2>SSO</h2>
<p>SSO is just activated in the Enterprise Edition. Also no LDAP configuration is available. <a href="https://baserow.io/user-docs/enable-single-sign-on-sso">More information</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Discourse</h2>
                <div><h1>Ansible Role: Docker-Discourse</h1>
<p>This Ansible role sets up Discourse, a popular open-source discussion platform, using Docker containers. It is designed to automate the deployment and configuration process of Discourse, making it easier to maintain and update.</p>
<h2>Check configuration</h2>
<p><code>bash
./launcher enter application
pry(main)&gt; SiteSetting.all.each { |setting| puts "#{setting.name}: #{setting.value}" }</code></p>
<hr />
<p>This README was generated with information provided in the Ansible role. For more detailed instructions and information, refer to the inline comments within the role files. Additional support and context for this role can be found in an <a href="https://chat.openai.com/share/fdbf9870-1f7e-491f-b4d2-357e6e8ad59c">online chat discussion</a>.</p></div>
            </section>
            
            <section>
                <h2>Pc Docker</h2>
                <div><h1>README for PC-Docker Playbook</h1>
<h2>Overview</h2>
<p>This playbook, <code>pc-docker</code>, is part of a larger collection housed within the <code>cymais</code> repository. It is specifically tailored for setting up Docker and Docker Compose on personal computers (PCs) used for development purposes. The primary goal is to facilitate a development environment on individual workstations rather than configuring servers for hosting or distributing Docker images.</p>
<h2>Contents</h2>
<p>The <code>main.yml</code> file in the <code>pc-docker</code> role consists of two primary tasks:</p>
<ol>
<li>
<p><strong>Install Docker</strong>: This task uses the <code>community.general.pacman</code> module to install <code>docker</code> and <code>docker-compose</code> on the system. It ensures that these packages are present on the PC.</p>
</li>
<li>
<p><strong>User Group Configuration</strong>: This task adds a specified user (denoted as <code>{% raw %}{{client_username}}{% endraw %}</code>) to the Docker user group. This is crucial for allowing the specified user to interact with Docker without needing superuser permissions.</p>
</li>
</ol>
<h2>Use Case</h2>
<p>The playbook is designed for developers who require Docker in their local development environments. It simplifies the process of Docker installation and configuration, making it straightforward for developers to start containerizing their applications without the complexities often encountered in a server or production environment.</p>
<h2>Prerequisites</h2>
<ul>
<li>Ansible: Ensure that Ansible is installed on your system to run this playbook.</li>
<li>Arch Linux-based System: This playbook uses the <code>pacman</code> package manager, indicating it's designed for Arch Linux-based systems.</li>
</ul>
<h2>Running the Playbook</h2>
<p>To run this playbook:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-docker</code> directory.
3. Run the playbook using the appropriate Ansible commands, ensuring that you have the necessary privileges.</p>
<h2>Important Notes</h2>
<ul>
<li><strong>Not for Server Use</strong>: This playbook is not designed for server environments. It is optimized for individual development machines.</li>
<li><strong>Customization</strong>: You may need to customize the playbook, especially the <code>{% raw %}{{client_username}}{% endraw %}</code> variable, to suit your specific setup.</li>
<li><strong>Security Considerations</strong>: While adding a user to the Docker group provides ease of use, be aware of the security implications. It grants the user elevated privileges which, if misused, can affect the entire system.</li>
</ul>
<h2>Support &amp; Contribution</h2>
<p>For support, suggestions, or contributions, please raise an issue or a pull request in the <code>cymais</code> repository. This project welcomes contributions from the developer community.</p></div>
            </section>
            
            <section>
                <h2>Docker Ldap</h2>
                <div><h1>Docker LDAP Role</h1>
<p>This Ansible role provides a streamlined implementation of an LDAP server with TLS support. It leverages Docker Compose to deploy a pre-configured OpenLDAP server and phpLDAPadmin for easy management.</p>
<hr />
<h2>🚀 <strong>Features</strong></h2>
<ul>
<li><strong>Secure LDAP with TLS</strong>:</li>
<li>Automatically configures TLS certificates for secure communication.</li>
<li>
<p>Provides configurable support for LDAPS on port 636.</p>
</li>
<li>
<p><strong>phpLDAPadmin Integration</strong>:</p>
</li>
<li>
<p>Includes a Dockerized phpLDAPadmin setup for easy user and group management.</p>
</li>
<li>
<p><strong>Healthcheck Support</strong>:</p>
</li>
<li>Ensures that the LDAP service is healthy and accessible using <code>ldapsearch</code>.</li>
</ul>
<p>--</p>
<h2>Maintanance</h2>
<h3>Show Config</h3>
<p><code>bash
docker exec -it openldap bash -c "ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b 'cn=config'"</code></p>
<p><code>bash
docker exec -it openldap bash -c "ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b 'cn=config' -s base '(objectClass=*)'"</code></p>
<p><code>bash
docker exec -it openldap bash -c "ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b 'cn=config' -s base '(objectClass=olcModuleList)'"</code></p>
<h2>install</h2>
<h3>MemberOf</h3>
<p>```bash</p>
<h1>Activate</h1>
<p>ldapmodify -Y EXTERNAL -H ldapi:/// &lt;&lt;EOF
dn: cn=module{0},cn=config
changetype: modify
add: olcModuleLoad
olcModuleLoad: /opt/bitnami/openldap/lib/openldap/memberof.so
EOF</p>
<h1>Verify</h1>
<p>ldapsearch -Q -Y EXTERNAL -H ldapi:/// -b "cn=module{0},cn=config" olcModuleLoad</p>
<p>ldapadd -Y EXTERNAL -H ldapi:/// &lt;&lt;EOF
dn: olcOverlay=memberof,olcDatabase={2}mdb,cn=config
objectClass: olcOverlayConfig
objectClass: olcMemberOf
olcOverlay: memberof
olcMemberOfRefInt: TRUE
olcMemberOfDangling: ignore
olcMemberOfGroupOC: groupOfNames
olcMemberOfMemberAD: member
olcMemberOfMemberOfAD: memberOf
EOF</p>
<p>```</p>
<h3>Show all Entries</h3>
<p><code>bash 
docker exec --env LDAP_ADMIN_PASSWORD="$LDAP_ADMIN_PASSWORD" LDAP_DN_BASE="$LDAP_DN_BASE" -it openldap bash -c "ldapsearch -LLL -o ldif-wrap=no -x -D \"cn=administrator,\$LDAP_DN_BASE\" -w \"\$LDAP_ADMIN_PASSWORD\" -b \"\$LDAP_DN_BASE\"";</code></p>
<h3>Delete Groups and Subgroup</h3>
<p>To delete the group inclusive all subgroups use:
```bash
docker exec --env LDAP_ADMIN_PASSWORD="$LDAP_ADMIN_PASSWORD" -it openldap bash -c "ldapsearch -LLL -o ldif-wrap=no -x -D \"cn=administrator,\$LDAP_DN_BASE\" -w \"\$LDAP_ADMIN_PASSWORD\" -b \"ou=applications,ou=groups,\$LDAP_DN_BASE\" dn | sed -n 's/^dn: //p' | tac | while read -r dn; do echo \"Deleting \$dn\"; ldapdelete -x -D \"cn=administrator,\$LDAP_DN_BASE\" -w \"\$LDAP_ADMIN_PASSWORD\" \"\$dn\"; done"</p>
<p>```</p>
<p>--</p>
<h2>🛠️ <strong>Technical Details</strong></h2>
<h3><strong>Services Configured</strong></h3>
<ol>
<li><strong>OpenLDAP</strong></li>
<li>TLS enabled on port 636.</li>
<li>
<p>Configuration driven by environment variables.</p>
</li>
<li>
<p><strong>phpLDAPadmin</strong></p>
</li>
<li>Accessible on port 443.</li>
<li>
<p>Simplifies LDAP management via a web interface.</p>
</li>
<li>
<p><strong>Healthchecks</strong></p>
</li>
<li>Uses <code>ldapsearch</code> to validate LDAP functionality.</li>
</ol>
<h3><strong>Directory Structure</strong></h3>
<p>The following directories are mounted in the container:
- <strong>LDAP Data:</strong> <code>data:/bitnami/openldap</code> for persistent data storage.</p>
<hr />
<h2>🔒 <strong>Security Recommendations</strong></h2>
<ul>
<li>Always use strong passwords for <code>applications.ldap.administrator_password</code>.</li>
<li>Restrict access to phpLDAPadmin by binding it to <code>127.0.0.1</code> or using a reverse proxy.</li>
</ul>
<hr />
<h2>📜 <strong>References</strong></h2>
<ul>
<li><a href="https://hub.docker.com/r/bitnami/openldap">Bitnami OpenLDAP</a></li>
<li><a href="https://github.com/leenooks/phpLDAPadmin/wiki/Docker-Container">phpLDAPadmin Documentation</a></li>
<li><a href="https://github.com/LDAPAccountManager/docker">LDAP Account Manager</a></li>
<li>[RBAC](https://www.entrust.com/de/resources/learn/what-is-role-based-access-control#:~:text=Rollenbasierte%20Zugriffskontrolle%20(Role%2Dbased%20Access,eine%20Ressource%20gew%C3%A4hrt%20werden%20soll.)</li>
<li><a href="https://de.wikipedia.org/wiki/Role_Based_Access_Control">RBAC Wikipedia</a></li>
</ul>
<hr />
<h2>👨‍💻 <strong>Author</strong></h2>
<p>Kevin Veen-Birkenbach - <a href="https://www.veen.world">veen.world</a></p>
<p>Feel free to report issues, suggest features, or contribute to the repository! 😊</p></div>
            </section>
            
            <section>
                <h2>Data</h2>
                <div><p>This folder contains files which are importet via ldapadd without any specific logic</p></div>
            </section>
            
            <section>
                <h2>Schema</h2>
                <div><p>This folder contains schemas for the different applications to import</p></div>
            </section>
            
            <section>
                <h2>Configuration</h2>
                <div><p>This folder contains configuration files where a specific logic needs to be applied.</p></div>
            </section>
            
            <section>
                <h2>User</h2>
                <div><p>This role executes tasks which are relevant for all users</p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools Php</h2>
                <div><h1>PC-Developer-Tools-PHP Role</h1>
<h2>Overview</h2>
<p>This README document is for the <code>pc-developer-tools-php</code> role within the <code>cymais</code> repository. This role is specifically designed to facilitate the setup of PHP development tools on personal computing environments.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file under the <code>pc-developer-tools-php</code> role is centered around the installation of essential PHP development tools:</p>
<ol>
<li><strong>Install PHP Developer Tools</strong>:</li>
<li>The task uses the <code>community.general.pacman</code> module to install:<ul>
<li><code>php</code>: The PHP language package, which is a popular general-purpose scripting language especially suited to web development.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>pc-developer-tools</strong>: Ensures that basic developer tools, which may include code editors, version control systems, and other common development utilities, are installed and available.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools-php</code> role is tailored for web developers and programmers who work with PHP. By automating the installation of PHP, this role streamlines the setup process, making it easier for developers to start working on PHP-based projects or running PHP applications.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: Given that the role uses the <code>pacman</code> package manager, it is most suitable for systems based on Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository to your system.
2. Navigate to the <code>roles/pc-developer-tools-php</code> directory within the repository.
3. Run the role using Ansible, ensuring you have the necessary permissions for installing packages.</p>
<h2>Customization</h2>
<p>This role can be customized by adding more PHP-related packages or tools, depending on the specific needs of the user or the project.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding additional tools for PHP development or enhancing the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the PHP development environment are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Docker Matrix Ansible</h2>
                <div><h1>Docker Setup Matrix via Ansible</h1>
<h2>Overview</h2>
<p>This document serves as the README for the <code>docker-ansible-matrix</code> role, a part of the <code>CyMaIS</code> project. This role automates the deployment of a Matrix server using Ansible. </p>
<p>Matrix is an open-source project that provides a protocol for secure, decentralized, real-time communication. It offers features like end-to-end encrypted chat, VoIP, and file sharing, catering to both individual and enterprise users. With a focus on interoperability, Matrix can bridge with other communication systems, offering a unified platform for messaging and collaboration.</p>
<p>This software uses https://github.com/spantaleev/matrix-docker-ansible-deploy as a base. </p>
<h2>DANGER: Manuell deativation and deletion</h2>
<p>Be carefull what you do. This code you can execute:
<code>systemctl list-units --type=service | grep 'matrix' | awk '{print $1}' | xargs -I {} systemctl disable {} &amp;&amp;
systemctl list-units --type=service | grep 'matrix' | awk '{print $1}' | xargs -I {} systemctl stop {} &amp;&amp;
rm -rv /matrix/</code></p>
<h2>Alternativ Matrix Setup Role</h2>
<p>An alternativ role to deploy Matrix you will find <a href="../docker-matrix-compose/">here</a></p></div>
            </section>
            
            <section>
                <h2>Docker Portfolio</h2>
                <div><h1>Docker Role: Flask-based Portfolio Setup 🚀</h1>
<p>This Ansible role facilitates setting up a Flask-based <a href="https://github.com/kevinveenbirkenbach/portfolio">portfolio application</a> in a Docker container. It allows you to showcase your projects, services, or online presence using a customizable YAML configuration file.</p>
<h2>Attention</h2>
<p>The default template creates the links based on <code>group_names</code>. If you run this script seperate, may not all necessary menu items are generated. </p>
<h2>Features ✨</h2>
<ul>
<li><strong>Automated Setup</strong>: Quickly deploy a portfolio using Docker.</li>
<li><strong>Customizable Content</strong>: Modify the portfolio using a YAML file.</li>
<li><strong>Responsive Design</strong>: Built with Bootstrap for optimal viewing on any device.</li>
<li><strong>Dynamic Navigation</strong>: Multi-level menus using nested YAML configurations.</li>
<li><strong>Cache Management</strong>: Efficient asset caching for improved performance.</li>
</ul>
<h2>Author</h2>
<p>This role was developed by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Nginx Modifier Css</h2>
                <div><h1>🌍 Nginx Global Theming Role</h1>
<h2>This <strong>Ansible role</strong> provides a <strong>global theming solution</strong> for Nginx-based web applications. It ensures a <strong>consistent look and feel</strong> across multiple applications by injecting a <strong>unified global.css</strong> with customizable theming options.</h2>
<h2>🚀 Features</h2>
<p>✅ <strong>Automatic CSS Deployment</strong> – Injects <code>global.css</code> into all Nginx-served applications.<br />
✅ <strong>Dynamic Theming</strong> – Uses <code>design.css.colors</code> from Ansible variables for <strong>full customization</strong>.<br />
✅ <strong>Bootstrap Override Support</strong> – Ensures Bootstrap-based apps use the <strong>unified global styles</strong>.<br />
✅ <strong>Versioning System</strong> – Prevents caching issues with automatic <strong>timestamp-based versioning</strong>.<br />
✅ <strong>Dark Mode Support</strong> – Automatically adapts to user preferences.<br />
✅ <strong>Runs Once Per Deployment</strong> – Avoids redundant executions with <code>run_once_nginx_global_css</code>.  </p>
<hr />
<h2>🎨 Theming Details</h2>
<p>The <strong>CSS template (<code>global.css.j2</code>)</strong> dynamically applies the defined theme colors and ensures <strong>Bootstrap, buttons, alerts, forms, and other UI elements</strong> follow the <strong>unified design</strong>.</p>
<h2>🛠️ Contribution</h2>
<p>Feel free to <strong>fork, modify, and improve</strong> this role! Contributions are always welcome. 🛠️🔥</p>
<hr />
<p>🚀 <strong>Happy Theming!</strong> 🎨✨<br />
*Created by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a> with the assistance of <a href="https://chatgpt.com/share/67a5fea3-4d5c-800f-8bc4-605712c02c9b">ChatGPT</a>.</p></div>
            </section>
            
            <section>
                <h2>Health Btrfs</h2>
                <div><h1>health-btrfs</h1>
<p>Sends a health report</p>
<h2>see</h2>
<ul>
<li>https://superuser.com/questions/789303/how-to-monitor-btrfs-filesystem-raid-for-errors</li>
<li>https://unix.stackexchange.com/questions/193619/list-all-btrfs-filesystems-and-subvolumes-in-shell</li>
<li>https://www.freedesktop.org/software/systemd/man/systemd.unit.html</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Xmpp</h2>
                <div><ul>
<li>https://hub.docker.com/r/ejabberd/ecs/</li>
<li>https://docs.ejabberd.im/CONTAINER/</li>
<li>https://github.com/processone/docker-ejabberd</li>
<li>https://chatgpt.com/c/67988a80-0764-800f-b1bb-9ae94ad46860</li>
<li>https://conversejs.org/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Health Docker Volumes</h2>
                <div><h1>Health Check for Docker Volumes</h1>
<h2>Description</h2>
<p>This role checks for anonymous Docker volumes that are not bound to a container and may be left over from previous operations. It provides a cleanup mechanism by identifying such volumes, excluding any that are whitelisted, and possibly taking action against them.</p>
<h2>Files</h2>
<ul>
<li><code>vars/main.yml</code>: Variable definitions for the script's directory and whitelist.</li>
<li><code>handlers/main.yml</code>: Handlers to reload and restart the systemd service and timer.</li>
<li><code>files/health-docker-volumes.sh</code>: The script that checks for anonymous Docker volumes and excludes whitelisted volumes.</li>
<li><code>tasks/main.yml</code>: Tasks to create necessary directories, copy scripts, and create systemd service and timer.</li>
<li><code>templates/health-docker-volumes.cymais.service.j2</code>: Systemd service template, including the whitelisted volumes as a parameter.</li>
<li><code>templates/health-docker-volumes.cymais.timer.j2</code>: Systemd timer template.</li>
<li><code>meta/main.yml</code>: Meta information declaring dependencies for the role.</li>
</ul>
<h2>Usage</h2>
<p>Include this role in your playbook and set the <code>path_administrator_scripts</code> variable to determine where the health check scripts should reside. Define <code>whitelisted_anonymous_volumes</code> in <code>vars/main.yml</code> with an array of volume IDs that should be ignored by the health check.</p>
<p>Ensure that the <code>systemd-notifier</code> dependency is satisfied for error notifications.</p>
<h2>Created with AI</h2>
<p>This script was created with the help of AI. The full conversation you find <a href="https://chat.openai.com/share/1fa829f1-f001-4111-b1d4-1b2e3d583da2">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Pc Nextcloud</h2>
                <div><h1>PC-Nextcloud Role</h1>
<h2>Overview</h2>
<p>This README details the <code>pc-nextcloud</code> role, part of the <code>cymais</code> repository. This role focuses on setting up the Nextcloud client on personal computers and configuring directory synchronization.</p>
<h2>Role Variables</h2>
<p>The <code>vars/main.yml</code> file defines key variables used in this role:
- <code>user_home_directory</code>: The home directory of the user, typically <code>/home/{% raw %}{{client_username}}{% endraw %}/</code>.
- <code>cloud_directory</code>: The directory path for Nextcloud cloud storage, structured as <code>{% raw %}{{user_home_directory}}{% endraw %}Clouds/{% raw %}{{cloud_fqdn}}{% endraw %}/{% raw %}{{client_username}}{% endraw %}/</code>.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-nextcloud</code> role comprises the following tasks:</p>
<ol>
<li><strong>Install Nextcloud-Client</strong>:</li>
<li>
<p>Installs the Nextcloud desktop client using the <code>community.general.pacman</code> module.</p>
</li>
<li>
<p><strong>Link Homefolders to Cloud</strong>:</p>
</li>
<li>
<p>Creates symbolic links from various user directories (like Templates, Documents, Videos, etc.) to corresponding folders in the Nextcloud cloud directory. This ensures synchronization of these folders with the user's Nextcloud account.</p>
</li>
<li>
<p><strong>Link Dump Folder</strong>:</p>
</li>
<li>Specifically links a <code>Dump</code> folder in the user's home directory to the <code>InstantUpload</code> folder in the Nextcloud cloud directory for easy file dumping and syncing.</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-nextcloud</code> role is designed for users who want to integrate Nextcloud, a cloud storage service, into their daily workflow. This role automates the installation of the Nextcloud client and the setup of directory synchronization, making files and documents easily accessible and syncable across devices.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: Since the role uses the <code>pacman</code> package manager, it's tailored for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-nextcloud</code> directory.
3. Ensure that the <code>client_username</code> and <code>cloud_fqdn</code> variables are correctly set to match your Nextcloud account details.
4. Execute the role using Ansible, ensuring appropriate permissions are available for installations and configurations.</p>
<h2>Customization</h2>
<p>You can customize this role by modifying the variables in <code>vars/main.yml</code> and adjusting the directories in the linking tasks to suit your specific Nextcloud setup and preferences.</p>
<h2>Support and Contributions</h2>
<p>For support, suggestions, or contributions, such as adding additional features or improving the setup, open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the integration and usability of Nextcloud on personal computers are highly welcome.</p></div>
            </section>
            
            <section>
                <h2>Docker Coturn</h2>
                <div><h1>DRAFT role docker-coturn</h1>
<p>setup an coturn server based on https://hub.docker.com/r/coturn/coturn</p>
<h2>todo</h2>
<p>Needs to be implemented so that Nextcloud Talk works</p>
<h2>author</h2>
<p><a href="https://www.veen.world">Kevin Veen-Birkenbach</a></p></div>
            </section>
            
            <section>
                <h2>Backups Provider</h2>
                <div><h1>role backups-provider-host</h1>
<h2>todo</h2>
<ul>
<li>add full system backup</li>
</ul>
<h2>see</h2>
<ul>
<li>https://www.thegeekstuff.com/2012/03/chroot-sftp-setup/</li>
<li>https://serverfault.com/questions/135618/is-it-possible-to-use-rsync-over-sftp-without-an-ssh-shell</li>
<li>https://forum.duplicati.com/t/sftp-ssh-backups-to-a-linux-server-with-added-security/7334</li>
<li>https://serverfault.com/questions/287578/trying-to-setup-chrootd-rsync</li>
<li>http://ramblings.narrabilis.com/using-rsync-with-ssh</li>
<li>https://wiki.archlinux.org/index.php/rsync</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Keycloak</h2>
                <div><h1>docker-keycloak</h1>
<h2>Description 🌟</h2>
<p>This role automates the setup and configuration of Keycloak in a Docker environment. 
Keycloak is an open-source identity and access management solution. 
The role integrates Keycloak with PostgreSQL as a database and supports operation behind a reverse proxy like NGINX.</p>
<h2>Features ✨</h2>
<ul>
<li>Set up Keycloak as a Docker container.</li>
<li>Use PostgreSQL as the database.</li>
<li>Customizable configuration of Keycloak environment variables.</li>
<li>Support for running behind a reverse proxy (e.g., NGINX).</li>
<li>Automatic creation and management of Docker Compose files.</li>
</ul>
<h2>More Information 📚</h2>
<p>For more details about Keycloak, check out:
- <a href="https://www.keycloak.org/">Official Keycloak Documentation</a>
- <a href="https://github.com/keycloak/keycloak">GitHub Repository</a>
- <a href="https://www.keycloak.org/server/reverseproxy">Setting up Keycloak behind a Reverse Proxy</a>
- <a href="https://en.wikipedia.org/wiki/Keycloak">Wikipedia</a>
- <a href="https://www.youtube.com/watch?v=fvxQ8bW0vO8">Youtube Tutorial</a></p>
<hr />
<h3>Author ✍️</h3>
<p><strong>Kevin Veen-Birkenbach</strong><br />
<a href="https://www.veen.world/">veen.world</a></p></div>
            </section>
            
            <section>
                <h2>Nginx Serve Html</h2>
                <div><h1>Nginx Homepage Role</h1>
<p>This Ansible role configures an Nginx server to serve a static homepage. It handles domain configuration, SSL certificate retrieval with Let's Encrypt.</p>
<h2>Author Information</h2>
<p>This role was created in 2023 by <a href="https://www.veen.world/">Kevin Veen Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Mariadb</h2>
                <div><h1>MariaDB Docker Ansible Role</h1>
<h2>Overview</h2>
<p>This Ansible role facilitates the deployment of a MariaDB server using Docker. It is designed to ensure ease of installation and configuration, with the flexibility to adapt to different environments.</p>
<h2>Features</h2>
<ul>
<li><strong>Dockerized MariaDB</strong>: Leverages Docker for MariaDB deployment, ensuring consistency across different environments.</li>
<li><strong>Customizable Settings</strong>: Allows customization of the MariaDB instance through various Ansible variables.</li>
<li><strong>Network Configuration</strong>: Includes setup of a dedicated Docker network for MariaDB.</li>
<li><strong>Idempotent Design</strong>: Ensures that repeat runs of the playbook do not result in unwanted changes.</li>
<li><strong>Security Focused</strong>: Implements best practices for securing the MariaDB root password.</li>
</ul>
<h2>Prerequisites</h2>
<p>Before using this role, ensure you have the following:
- Ansible installed on the control machine.
- Docker installed on the target host(s).
- Access to the target host(s) via SSH.</p>
<h2>Configuration</h2>
<p>Configure the role by setting the required variables. These can be set in the playbook or in a separate variable file:
- <code>central_mariadb_root_password</code>: The root password for the MariaDB server.
- <code>database_name</code>: The name of the initial database to create.
- <code>database_username</code>: The username for the database user.
- <code>database_password</code>: The password for the database user.</p>
<h2>Execute SQL commands</h2>
<p><code>bash
docker exec -it central-mariadb mariadb -u root -p</code></p>
<h2>Contributing</h2>
<p>Contributions to this project are welcome. Please submit issues and pull requests with your suggestions.</p></div>
            </section>
            
            <section>
                <h2>Pc Gnucash</h2>
                <div><h1>GnuCash Installation Role</h1>
<h2>Overview</h2>
<p>This Ansible role is responsible for installing GnuCash, a free and open-source financial management software, on systems utilizing the Pacman package manager. It's particularly useful for setting up GnuCash in a Linux environment with minimal manual intervention.</p>
<h2>Role: pc-gnucash</h2>
<p>The <code>pc-gnucash</code> role ensures that GnuCash is installed and maintained at its latest available version in the Pacman repositories.</p>
<h2>Requirements</h2>
<ul>
<li>Target systems should be running a Linux distribution that uses the Pacman package manager.</li>
<li>Ansible should be installed and configured on the system initiating the playbook.</li>
</ul>
<h2>Role Tasks</h2>
<ul>
<li><code>main.yml</code>: The main task file that handles the installation of GnuCash.</li>
</ul>
<h3>Task Details</h3>
<ul>
<li><strong>Install GnuCash</strong>: This task uses the <code>community.general.pacman</code> module to install GnuCash from the Pacman repositories.</li>
</ul>
<h2>Usage</h2>
<p>To use this role, include it in your playbook and run the playbook using the Ansible command. Ensure that your target systems are accessible and properly configured for Ansible automation.</p>
<h2>Example Playbook</h2>
<p>An example of how to use this role in your playbook:</p>
<p><code>yaml
- hosts: your_target_group
  roles:
    - pc-gnucash</code></p>
<h2>Author Information</h2>
<p>This role was created by <a href="https://cybermaster.space">Kevin Veen-Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Central Database</h2>
                <div><h1>Database Setup Role 🚀</h1>
<p>This Ansible role provides the necessary tasks, files, templates, and variables to set up databases in your Docker Compose environment. It is essential for configuring your application's database, whether using a local or a central instance of <strong>MariaDB</strong> or <strong>PostgreSQL</strong>.</p>
<hr />
<h2>Overview 🔍</h2>
<ul>
<li><strong>Database Variables</strong><br />
  Defined in <a href="./vars/database.yml">./vars/database.yml</a>, these variables include:</li>
<li><code>database_instance</code></li>
<li><code>database_host</code></li>
<li><code>database_name</code></li>
<li><code>database_username</code></li>
<li><code>database_port</code></li>
<li>
<p><code>database_env</code></p>
</li>
<li>
<p><strong>Tasks</strong><br />
  Located in <a href="./tasks/main.yml">./tasks/main.yml</a>, the tasks perform the following:</p>
</li>
<li>Include the Docker Compose role.</li>
<li>Load database variables.</li>
<li>Create the environment file for the chosen database from a template.</li>
<li>
<p>Optionally create a central database (if enabled).</p>
</li>
<li>
<p><strong>Templates</strong>  </p>
</li>
<li><strong>Environment Files:</strong>  <ul>
<li><a href="./templates/env/postgres.env.j2">PostgreSQL Environment Template</a>  </li>
<li><a href="./templates/env/mariadb.env.j2">MariaDB Environment Template</a></li>
</ul>
</li>
<li><strong>Service Files:</strong>  <ul>
<li><a href="./templates/services/mariadb.yml.j2">MariaDB Service Template</a>  </li>
<li><a href="./templates/services/postgres.yml.j2">PostgreSQL Service Template</a></li>
</ul>
</li>
</ul>
<hr />
<h2>Usage 📋</h2>
<p>To use this role, include it in your playbook as follows:</p>
<p><code>yaml
- hosts: all
  roles:
    - your_database_role_name</code></p>
<p>When executed, the role will:</p>
<ol>
<li>Load database configuration variables.</li>
<li>Generate the appropriate environment file for the database.</li>
<li>Incorporate the Docker Compose routines.</li>
<li>Create a central database if <code>applications[application_id].database.central_storage</code> is set to <code>true</code>.</li>
</ol>
<hr />
<h2>Author</h2>
<p>Developed by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a> 💻🌐</p>
<hr />
<h2>Acknowledgments &amp; ChatGPT Conversations 🤖💬</h2>
<p>This role was created with the assistance of ChatGPT. The following ChatGPT conversations helped shape the design and implementation of this role:</p>
<ul>
<li>https://chatgpt.com/share/67a23d18-fb54-800f-983c-d6d00752b0b4</li>
<li>https://chatgpt.com/share/67a244bb-11e4-800f-980f-5ef0e8b109d7</li>
</ul>
<p>Feel free to explore these discussions for insights into design decisions and implementation details.</p>
<hr />
<p>Happy automating! 🎉</p></div>
            </section>
            
            <section>
                <h2>Docker Akaunting</h2>
                <div><h1>Docker Akaunting Setup Guide</h1>
<h2>!!!DANGER!!!</h2>
<p><strong>AKAUNTING CONTAINS VERY MUCH PROPERITARY COMPONENTS. IT IS ALMOST IMPOSSIBLE TO USE THIS SOFTWARE FOR FREE IN A PRODUCTIVE ENVIRONMENT. UPDATES MAY BREAK YOUR INSTALLATION. IN THE PAST UPDATES LEADED TO THE REDUCTION OF FREE FEATURES AND INSTEAD THEY BECOME PAYD FEATURES. THIS LEADED TO THAT USERS COULD NOT MAINTAINE THERE COMPANIES IN AKAUNTING ANYMORE</strong></p>
<p>I recommend to use instead <a href="../docker-openproject/">Open Project</a> and/or <a href="../pc-gnucash/">GNUCash</a>.</p>
<p>This role still exist in case, that you want to setup Akaunting and you're willing to pay, but I recommend to don't use akaunting.  </p>
<h2>Introduction</h2>
<p>This guide details the process of setting up Akaunting, a free and online accounting software, using Docker. It's tailored to help you deploy and manage an Akaunting instance efficiently using Docker and Docker Compose.</p>
<h2>Prerequisites</h2>
<ul>
<li>Docker and Docker Compose installed.</li>
<li>Basic understanding of Docker concepts.</li>
<li>Access to the command line or terminal.</li>
</ul>
<h2>Installation Steps</h2>
<p>@ATTENTION Variable <code>#AKAUNTING_SETUP: true</code> needs to be set</p>
<h3>New Manual Setup</h3>
<ol>
<li>
<p><strong>Navigate to Docker Compose Directory</strong>: Change to the directory containing your Docker Compose files for Akaunting.</p>
<p><code>bash
cd {% raw %}{{path_docker_compose_instances}}{% endraw %}akaunting/</code></p>
</li>
<li>
<p><strong>Set Environment Variables</strong>: These are necessary to prevent timeouts during long operations.</p>
<p><code>bash
export COMPOSE_HTTP_TIMEOUT=600
export DOCKER_CLIENT_TIMEOUT=600</code></p>
</li>
<li>
<p><strong>Start Akaunting Service</strong>: This command will initialize the Akaunting setup.</p>
<p><code>bash
AKAUNTING_SETUP=true docker-compose -p akaunting up -d</code></p>
</li>
<li>
<p><strong>Check Web Interface</strong>: Ensure the web interface is operational.</p>
</li>
<li>
<p><strong>Restart Services</strong>: To finalize the setup, restart the services.</p>
<p><code>bash
docker-compose down
docker-compose -p akaunting up -d</code></p>
</li>
</ol>
<h3>Administration</h3>
<ul>
<li>
<p><strong>View Logs</strong>: To check the latest logs of Akaunting.</p>
<p><code>bash
docker-compose exec -it akaunting tail -n 300 storage/logs/laravel.log</code></p>
</li>
<li>
<p><strong>Access Containers</strong>: For troubleshooting or configuration.</p>
</li>
<li>Akaunting Container: <code>docker-compose exec -it akaunting bash</code></li>
<li>Database Container: <code>docker-compose exec -it akaunting-db /bin/mariadb -u admin --password=$akaunting_db_password akaunting</code></li>
</ul>
<h3>Manual Update</h3>
<p>Execute PHP artisan commands in the following order for updating Akaunting:</p>
<p><code>bash
php artisan about
php artisan cache:clear
php artisan view:clear
php artisan migrate:status
php artisan update:all
php artisan update:db</code></p>
<h3>Composer</h3>
<p>To install Composer, a PHP dependency management tool:</p>
<p><code>bash
curl https://getcomposer.org/download/2.4.1/composer.phar --output composer.phar
php composer.phar install</code></p>
<h3>Full Backup Routine</h3>
<p>Detailed steps for backing up your Akaunting instance, including setting manual and automatic variables, destroying containers, removing volumes, and rebuilding and recovering volumes. (Refer to the full backup routine script in the original README).</p>
<h3>Setting Variables</h3>
<p>Variables are crucial in configuring your Akaunting setup. Ensure you set the following variables correctly in your environment:</p>
<ul>
<li><code>docker_compose.directories.instance</code>: Set this variable to the path where your Docker Compose files for Akaunting are located.</li>
<li><code>akaunting_db_password</code>, <code>applications.akaunting.version</code>, <code>applications.akaunting.company_name</code>, <code>applications.akaunting.company_email</code>, <code>applications.akaunting.setup_admin_email</code>, and <code>akaunting_setup_admin_password</code>: These should be set in your <code>.env</code> files as per your requirements.</li>
</ul>
<h3>Additional Configuration</h3>
<ul>
<li><strong>SSL Certificate</strong>: The guide includes steps to receive a certificate for your domain.</li>
<li><strong>Nginx Configuration</strong>: Necessary steps to configure Nginx as a reverse proxy for Akaunting.</li>
<li><strong>Database and Runtime Environment</strong>: Instructions on how to set up the <code>db.env</code> and <code>run.env</code> files for database and runtime configurations.</li>
</ul>
<h2>Further Information</h2>
<p>For more details, visit the <a href="https://github.com/akaunting/docker">Akaunting Docker Repository</a> and the <a href="https://akaunting.com/forum">Akaunting Forums</a>.</p>
<h2>Contribution and Feedback</h2>
<p>Your contributions and feedback are welcome. Please reach out for support or queries at kevin@veen.world.</p>
<h2>Author</h2>
<p>This script is developed by Kevin Veen-Birkenbach. You can reach out to him at kevin@veen.world or visit his website at https://www.veen.world.</p></div>
            </section>
            
            <section>
                <h2>Docker</h2>
                <div><h1>Docker Role 🚀</h1>
<p>This role is part of the <a href="https://github.com/kevinveenbirkenbach/cymais">CyMaIS Project</a>, maintained and developed by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a>.</p>
<hr />
<h2>Maintenance 🛠️</h2>
<h3>List Unused Volumes</h3>
<p><code>bash
docker volume ls -q -f "dangling=true"</code></p>
<h3>Remove All Unused Volumes</h3>
<p><code>bash
docker volume rm $(docker volume ls -q -f "dangling=true")</code></p>
<h3>Network Issues Fixes</h3>
<p><code>bash
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
docker network prune -f
systemctl stop docker
rm -fv /var/lib/docker/network/files/local-kv.db
systemctl start docker</code></p>
<hr />
<h2>Warning ⚠️</h2>
<p><strong>Caution:</strong> The following instructions will delete <strong>all Docker containers and volumes</strong> on your server.<br />
Make sure you have backups or that you're certain you want to clean your Docker environment completely.</p>
<hr />
<h2>Cleaning Up Docker Containers and Volumes 🧹</h2>
<h3>Delete All Docker Containers</h3>
<p><code>bash
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)</code></p>
<h3>Delete All Docker Volumes</h3>
<p><code>bash
docker volume rm $(docker volume ls -q)</code></p>
<hr />
<p>Enjoy using this role and happy containerizing! 🎉</p></div>
            </section>
            
            <section>
                <h2>User Administrator</h2>
                <div><h1>Role Administrator</h1>
<p>This role creates an standard administrator user.
This user needs to type in his password before executing sudo.
For security reasons it's recommended to use this user instead of the standard root user.
This user should not be used to login to other systems. It's just there to let administration tasks run.
For this reason no ssh-keys are generated.</p>
<h2>Author</h2>
<p>This role was created by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></p></div>
            </section>
            
            <section>
                <h2>Pc Ssh</h2>
                <div><h1>PC-SSH Role</h1>
<h2>Overview</h2>
<p>Welcome to the <code>pc-ssh</code> role, a critical component of the <code>cymais</code> repository. This role is dedicated to setting up SSH (Secure Shell) on the client side, facilitating secure access to remote servers.</p>
<h2>Role Description</h2>
<p>The <code>pc-ssh</code> role includes tasks to pull and update SSH configuration from a specified repository and handle potential errors:</p>
<ol>
<li><strong>Pull SSH Repository</strong>: </li>
<li>
<p>Clones or updates the SSH configuration from a given repository (<code>{% raw %}{{ssh_configuration_repository}}{% endraw %}</code>) into the <code>$HOME/.ssh</code> directory. This task ensures that your SSH configuration is synchronized with the specified repository.</p>
</li>
<li>
<p><strong>Warn if Repo is Not Reachable</strong>:</p>
</li>
<li>Displays a warning message if the SSH configuration repository is not reachable, indicating potential issues with the repository's availability or the network connection.</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>pc-git</strong>: Ensures that Git is installed, which is necessary for cloning and updating the SSH configuration repository.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-ssh</code> role is designed for users who require SSH access to remote servers, such as developers, system administrators, or IT professionals. By automating the SSH configuration process, this role streamlines the setup and ensures a consistent and secure SSH environment.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Must be installed to run this role.</li>
<li><strong>Git</strong>: Required for cloning and updating the SSH configuration repository.</li>
<li><strong>Arch Linux-based System</strong>: While not explicitly stated, the role's compatibility with specific systems depends on the dependencies and the overall playbook configuration.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-ssh</code> directory.
3. Define the <code>ssh_configuration_repository</code> variable with the URL of your SSH configuration repository.
4. Run the role using Ansible, ensuring you have the necessary permissions for executing the tasks.</p>
<h2>Customization</h2>
<p>You can customize this role by modifying the SSH configuration repository URL or by adding additional SSH-related tasks as needed.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as enhancing the SSH setup or adding more features, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve SSH configuration and usage are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Pc Bluray Player Tools</h2>
                <div><h1>collection-blu-ray-player</h1>
<h2>further information</h2>
<ul>
<li>https://wiki.archlinux.org/title/Blu-ray#Using_aacskeys</li>
<li>https://videobyte.de/play-blu-ray-with-vlc</li>
<li>https://archived.forum.manjaro.org/t/wie-kann-ich-bluray-uhd-abspielen/127396/12</li>
<li>http://fvonline-db.bplaced.net/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Driver Msi Keyboard Color</h2>
                <div><h1>Ansible Role: driver-msi-keyboard-color</h1>
<p>Ansible role to set up dynamic keyboard color change on MSI laptops.</p>
<h2>Requirements</h2>
<ul>
<li>An MSI laptop</li>
<li>The <code>msi-perkeyrgb</code> tool installed on the system</li>
<li>Ansible 2.9 or later</li>
</ul>
<h2>Role Variables</h2>
<p>Available variables are listed below, along with their default values:</p>
<p><code>yaml
vendor_and_product_id: ""</code></p>
<p>The <code>vendor_and_product_id</code> variable is required and should be set to the vendor and product ID of the MSI laptop.</p>
<h2>Dependencies</h2>
<ul>
<li><code>system-aur-helper</code></li>
</ul>
<h2>Example Playbook</h2>
<p><code>yaml
- hosts: all
  roles:
    - keyboard-color
  vars:
    vendor_and_product_id: "your_vendor_and_product_id"</code></p>
<h2>Author</h2>
<p>This role was created by <a href="https://github.com/kevinveenbirkenbach">Kevin Veen-Birkenbach</a>.</p>
<h2>Chat Conversation</h2>
<p>To see how this role was developed, you can refer to the following ChatGPT Conversation that produced this software:
- https://chat.openai.com/share/1f1dde28-3fb2-4df7-be89-4f7ffe67e5c7
- https://chat.openai.com/share/41c47fdb-a92d-466d-9e92-5a894fe6bec3
- https://chat.openai.com/share/e45d186a-f2e1-4c96-9390-36269e274193</p></div>
            </section>
            
            <section>
                <h2>Wireguard</h2>
                <div><h1>Role Native Wireguard</h1>
<p>Manages wireguard on host.</p>
<h2>Client</h2>
<h3>Setup wireguard</h3>
<p><code>bash
  pacman -S wireguard-tools</code></p>
<h3>Create Client Keys</h3>
<p><code>bash
  wg_private_key="$(wg genkey)"
  wg_public_key="$(echo "$wg_private_key" | wg pubkey)"
  echo "PrivateKey: $wg_private_key"
  echo "PublicKey: $wg_public_key"
  echo "PresharedKey: $(wg genpsk)"</code></p>
<h3>Activate Configuration</h3>
<p><code>bash
  cp /path/to/wg0.conf /etc/wireguard/wg0.conf
  systemctl enable wg-quick@wg0.cymais.service --now</code></p>
<h3>Check status</h3>
<p><code>bash
  systemctl status wg-quick@wg0.cymais.service</code></p>
<h2>See</h2>
<ul>
<li>https://golb.hplar.ch/2019/01/expose-server-vpn.html</li>
<li>https://wiki.archlinux.org/index.php/WireGuard</li>
<li>https://wireguard.how/server/raspbian/</li>
<li>https://www.scaleuptech.com/de/blog/was-ist-und-wie-funktioniert-subnetting/</li>
</ul></div>
            </section>
            
            <section>
                <h2>Nginx Redirect Domain</h2>
                <div><h1>Nginx Redirect Role</h1>
<p>This Ansible role configures Nginx to perform 301 redirects from one domain to another. It handles SSL certificate retrieval for the source domains and sets up the Nginx configuration to redirect to the specified target domains.</p>
<h2>Role Variables</h2>
<ul>
<li><code>domain_mappings</code>: A list of objects with <code>source</code> and <code>target</code> properties specifying the domains to redirect from and to.</li>
<li><code>users.administrator.email</code>: The email used for SSL certificate registration with Let's Encrypt.</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li><code>nginx-https</code>: A role for setting up HTTPS for Nginx</li>
<li><code>letsencrypt</code>: A role for managing SSL certificates with Let's Encrypt</li>
</ul>
<h2>Author Information</h2>
<p>This role was created in 2023 by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a>.</p></div>
            </section>
            
            <section>
                <h2>Docker Friendica</h2>
                <div><h1>Friendica Docker Role</h1>
<p>This role manages the setup, reset, and maintenance of a Friendica instance running with Docker.</p>
<h2>Overview 🚀</h2>
<p>Friendica is a decentralized social networking platform. This role helps manage Friendica in a containerized environment with Docker and provides tools for debugging, resetting, and maintaining the installation.</p>
<h2>Prerequisites 🛠️</h2>
<p>Ensure you have the following:
- Docker and Docker Compose installed
- A central MariaDB instance running
- Necessary permissions to manage Docker and database configurations</p>
<h2>Usage 📚</h2>
<h3>Full Reset 🚫➡️✅</h3>
<p>The following environment variables need to be defined for successful operation:</p>
<ul>
<li><code>DB_ROOT_PASSWORD</code>: The root password for the MariaDB instance</li>
</ul>
<p>To completely reset Friendica, including its database and volumes, run:
<code>bash
docker exec -i central-mariadb mariadb -u root -p"${DB_ROOT_PASSWORD}" -e "DROP DATABASE IF EXISTS friendica; CREATE DATABASE friendica;"
docker compose down
rm -rv /mnt/hdd/data/docker/volumes/friendica_data
docker volume rm friendica_data</code></p>
<h3>Reset Database 🗄️</h3>
<h4>Manual Method:</h4>
<ol>
<li>Connect to the MariaDB instance:
   <code>bash
   docker exec -it central-mariadb mariadb -u root -p</code></li>
<li>Run the following commands:
   <code>sql
   DROP DATABASE friendica;
   CREATE DATABASE friendica;
   exit;</code></li>
</ol>
<h4>Automatic Method:</h4>
<p><code>bash
DB_ROOT_PASSWORD="your_root_password"
docker exec -i central-mariadb mariadb -u root -p"${DB_ROOT_PASSWORD}" -e "DROP DATABASE IF EXISTS friendica; CREATE DATABASE friendica;"</code></p>
<h3>Enter the Application Container 🔍</h3>
<p>To access the application container:
<code>bash
docker compose exec -it application sh</code></p>
<h3>Debugging Tools 🛠️</h3>
<h4>Check Environment Variables</h4>
<p><code>bash
docker compose exec -it application printenv</code></p>
<h4>Inspect Volume Data</h4>
<p><code>bash
ls -la /var/lib/docker/volumes/friendica_data/_data/</code></p>
<h3>Autoinstall 🌟</h3>
<p>Run the following command to autoinstall Friendica:
<code>bash
docker compose exec --user www-data -it application bin/console autoinstall</code></p>
<h3>Reinitialization 🔄</h3>
<h4>Docker Only:</h4>
<p><code>bash
docker-compose up -d --force-recreate</code></p>
<h4>Full Reinitialization:</h4>
<p><code>bash
docker-compose up -d --force-recreate &amp;&amp; sleep 2; docker compose exec --user www-data -it application bin/console autoinstall;</code></p>
<h3>Configuration Information ℹ️</h3>
<h4>General Configuration:</h4>
<p><code>bash
cat /var/lib/docker/volumes/friendica_data/_data/config/local.config.php</code></p>
<h4>Email Configuration:</h4>
<p><code>bash
docker compose exec -it application cat /etc/msmtprc</code></p>
<h3>Email Debugging ✉️</h3>
<p>To send a test email:
<code>bash
docker compose exec -it application msmtp --account=system_email -t test@test.de</code></p>
<h2>Additional Resources 📖</h2>
<ul>
<li><a href="https://hub.docker.com/_/friendica">Friendica Docker Hub</a></li>
<li><a href="https://wiki.friendi.ca/docs/install">Friendica Installation Docs</a></li>
<li><a href="https://github.com/friendica/docker">Friendica GitHub Repository</a></li>
<li><a href="https://github.com/friendica/friendica/issues/14743">Open Issue: Login Mask does not change with OIDC activated</a></li>
</ul>
<hr />
<p>📜 Created by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></p></div>
            </section>
            
            <section>
                <h2>Docker Taiga</h2>
                <div><h1>Docker Taiga Role 🐳📋</h1>
<p>This Ansible role sets up and configures a Taiga project management platform using Docker. It includes tasks for setting up the database, Nginx proxy, and updating the repository with necessary files.</p>
<h2>Table of Contents</h2>
<ul>
<li><a href="#tasks">Tasks</a></li>
<li><a href="#variables">Variables</a></li>
<li><a href="#templates">Templates</a></li>
<li><a href="#author">Author</a></li>
</ul>
<h2>Tasks</h2>
<p>The main tasks included in this role are:</p>
<ul>
<li>Setting up the database.</li>
<li>Configuring Nginx as a proxy.</li>
<li>Updating the repository with necessary files.</li>
</ul>
<h2>Variables</h2>
<p>Key variables used in this role include the Docker Compose project name, database type and password, and the repository address.</p>
<h2>Templates</h2>
<p>The role includes several Jinja2 templates to configure the environment and Docker Compose setup, including:</p>
<ul>
<li><strong>docker-compose-inits.yml.j2</strong></li>
<li><strong>.env.j2</strong></li>
<li><strong>docker-compose.yml.j2</strong></li>
</ul>
<h2>Author</h2>
<p>This role was created by Kevin Veen-Birkenbach. You can reach him at <a href="mailto:kevin@veen.world">kevin@veen.world</a>. Visit his website at <a href="https://www.veen.world/">veen.world</a>.</p>
<h2>Note</h2>
<p>This README was created with the assistance of ChatGPT. <a href="https://chatgpt.com/share/fee718ab-cfe1-46f3-b97f-8f8c896ffd11">Link to conversation</a>.</p></div>
            </section>
            
            <section>
                <h2>Nginx Docker Reverse Proxy</h2>
                <div><h1>role nginx-docker-reverse-proxy</h1>
<p>Uses nginx as an <a href="https://en.wikipedia.org/wiki/Reverse_proxy">reverse proxy</a> for local docker applications.</p>
<h2>debug</h2>
<p><code>bash
curl -I {% raw %}{{address}}{% endraw %}</code>
- https://serverfault.com/questions/434915/nginx-proxy-caching-how-to-check-if-it-is-working</p>
<h2>performance</h2>
<ul>
<li>https://stackoverflow.com/questions/33703230/caching-images-on-all-folder-levels-of-nginx-reverse-proxy</li>
<li>https://www.tweaked.io/guide/nginx-proxying/</li>
<li>https://serverfault.com/questions/796735/nginx-reverse-proxy-is-slow/796740</li>
<li>https://serverfault.com/questions/741610/what-is-the-difference-between-proxy-request-buffering-and-proxy-buffering-on-ng</li>
<li>https://askubuntu.com/questions/1103626/should-i-enable-client-max-body-size-proxy-request-buffering-and-proxy-bufferin</li>
<li>https://serverfault.com/questions/692577/whats-the-difference-between-proxy-buffer-and-proxy-cache-module-in-nginx-confi</li>
<li>https://github.com/sissbruecker/linkding/issues/88</li>
<li>https://www.bogotobogo.com/DevOps/Docker/docker/compose/Nginx-Reverse-Proxy-Multiple-Containers.php</li>
</ul></div>
            </section>
            
            <section>
                <h2>Nginx Domain Setup</h2>
                <div><h1>Nginx Domain Setup Role 🚀</h1>
<p>This role streamlines your Nginx configuration by performing several essential tasks:</p>
<ul>
<li><strong>Modify Nginx configuration</strong> with the <code>nginx-modifier-all</code> role.</li>
<li><strong>Request and receive HTTPS certificates</strong> using the <code>nginx-https-get-cert</code> role.</li>
<li><strong>Deploy a domain configuration file</strong> from a Jinja2 template.</li>
<li><strong>Optionally secure your domain</strong> with OAuth2 via the <code>docker-oauth2-proxy</code> role if enabled.</li>
</ul>
<h2>Author</h2>
<p>Developed by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a> 😎</p>
<hr />
<p>Happy automating! 🎉</p></div>
            </section>
            
            <section>
                <h2>Docker Bigbluebutton</h2>
                <div><h1>docker bigbluebutton</h1>
<p>@TODO Database needs to be decoupled </p>
<p>Role to deploy <a href="https://bigbluebutton.org/">BigBlueButton</a>. </p>
<h2>maintanace</h2>
<h3>cleanup</h3>
<p><code>bash
    docker compose down -v</code></p>
<h3>check container status</h3>
<p><code>bash
watch -n 2 "docker compose ps -a"</code></p>
<h3>database access</h3>
<p><code>bash
 sudo docker-compose exec -it postgres psql -U postgres</code></p>
<h2>SSO</h2>
<ul>
<li>https://docs.bigbluebutton.org/greenlight/v3/external-authentication/</li>
</ul>
<h2>further information</h2>
<ul>
<li>https://github.com/bigbluebutton/docker</li>
<li>https://docs.bigbluebutton.org/greenlight/gl-install.html#setting-bigbluebutton-credentials</li>
<li>https://goneuland.de/big-blue-button-mit-docker-und-traefik-installieren/</li>
<li>https://github.com/docker/compose/issues/4799</li>
<li>https://www.cyberciti.biz/faq/linux-command-to-remove-virtual-interfaces-or-network-aliases/</li>
<li>https://www.cyberciti.biz/faq/linux-restart-network-interface/</li>
<li>https://stackoverflow.com/questions/53347951/docker-network-not-found</li>
<li>https://github.com/bigbluebutton/docker/issues/325</li>
<li>https://mattdyson.org/blog/2024/11/self-hosting-bluesky-pds/</li>
<li>https://atproto.com/specs/handle#handle-resolution @toto micoservice für dynamische did auflösung implementieren</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Matrix Compose</h2>
                <div><h1>Docker-Matrix Role README</h1>
<h2>Overview</h2>
<p>This document serves as the README for the <code>docker-matrix</code> role, a part of the <code>CyMaIS</code> project. This role automates the deployment of a Matrix server using Docker. This role was developed by <a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></p>
<p>Matrix is an open-source project that provides a protocol for secure, decentralized, real-time communication. It offers features like end-to-end encrypted chat, VoIP, and file sharing, catering to both individual and enterprise users. With a focus on interoperability, Matrix can bridge with other communication systems, offering a unified platform for messaging and collaboration.</p>
<h2>Cleanup</h2>
<p>```</p>
<h1>Cleanup Database</h1>
<p>for db in matrix mautrix_whatsapp_bridge mautrix_telegram_bridge mautrix_signal_bridge mautrix_slack_bridge; do python reset-database-in-central-postgres.py $db; done</p>
<h1>Cleanup Docker and Volumes</h1>
<p>docker compose down -v
```</p>
<h2>Bridges</h2>
<h3>Mautrix</h3>
<p>Contact one of the following bots for more information:</p>
<ul>
<li>@signalbot:yourdomain.tld</li>
<li>@telegrambot:yourdomain.tld</li>
<li>@whatsappbot:yourdomain.tld</li>
<li>@slackbot:yourdomain.tld</li>
</ul>
<h4>Slack</h4>
<p>For login with Token checkout <a href="https://docs.mau.fi/bridges/go/slack/authentication.html">this guide</a>.</p>
<h3>ChatGPT</h3>
<ul>
<li>Create API Token: https://platform.openai.com/api-keys</li>
<li>Set <code>matrix_chatgpt_bridge_access_token</code> </li>
</ul>
<h2>Debug:</h2>
<ul>
<li>https://federationtester.matrix.org/</li>
</ul>
<h2>Sources</h2>
<h3>Guides</h3>
<ul>
<li>https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html</li>
<li>https://cyberhost.uk/element-matrix-setup/</li>
<li>https://www.linode.com/docs/guides/how-to-install-the-element-chat-app/</li>
<li>https://hub.docker.com/r/vectorim/element-web</li>
<li>https://github.com/matrix-org/matrix-synapse-ldap3</li>
</ul>
<h2>Links to ChatGPT Conversations</h2>
<ul>
<li>https://chat.openai.com/share/d4485223-3750-4b0b-9733-45776c55d7cf</li>
<li>https://chat.openai.com/share/f68873d9-aae9-4a1e-83b6-c3f23705a4ad</li>
<li>https://chat.openai.com/share/11690964-9997-4e44-b63f-3c384a5ddc1d</li>
<li>https://chat.openai.com/share/6f537c30-7337-47ed-8c85-19306e0eb74b</li>
<li>https://chat.openai.com/share/31974492-2950-4dbc-8a83-edd7e1569bec</li>
</ul>
<h2>Alternativ Matrix Setup Role</h2>
<p>An alternativ role to deploy Matrix you will find <a href="../docker-matrix-ansible/">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Tasks</h2>
                <div><h1>update</h1>
<p>starts all of the different system update roles based on conditions</p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools Arduino</h2>
                <div><h1>PC-Developer-Tools-Arduino Role</h1>
<h2>Overview</h2>
<p>This README file is for the <code>pc-developer-tools-arduino</code> role, a specialized component of the <code>cymais</code> repository. This role is specifically crafted for setting up Arduino development tools on personal computers.</p>
<h2>Role Details</h2>
<p>The <code>main.yml</code> file in the <code>pc-developer-tools-arduino</code> role encompasses tasks crucial for Arduino developers:</p>
<ol>
<li><strong>Install Arduino Developer Tools</strong>:</li>
<li>
<p>This task employs the <code>community.general.pacman</code> module to install:</p>
<ul>
<li><code>arduino</code>: The Arduino IDE, which is an open-source electronics platform based on easy-to-use hardware and software.</li>
<li><code>arduino-docs</code>: Documentation for Arduino, providing essential information for development.</li>
</ul>
</li>
<li>
<p><strong>Adding User to Relevant Arduino Usergroups</strong>:</p>
</li>
<li>This task modifies the user (specified by <code>{% raw %}{{client_username}}{% endraw %}</code>) to be added to the <code>uucp</code> and <code>lock</code> groups, which is necessary for accessing serial ports on Linux systems.</li>
</ol>
<h2>Dependencies</h2>
<p>The role depends on:
- <strong>pc-developer-tools</strong>: Ensures that base developer tools, including code editors and related software, are installed and configured.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools-arduino</code> role is tailored for developers and hobbyists who work with Arduino boards and need a reliable and efficient setup for their development environment. This role simplifies the process of installing and configuring the Arduino IDE and associated documentation, along with setting up necessary user permissions.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for executing this role.</li>
<li><strong>Arch Linux-based System</strong>: The role uses <code>pacman</code>, indicating it is designed for Arch Linux-based distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-developer-tools-arduino</code> directory.
3. Execute the role using Ansible, ensuring you replace <code>{% raw %}{{client_username}}{% endraw %}</code> with the actual username and have the necessary system permissions.</p>
<h2>Customization</h2>
<p>This role can be customized to include additional Arduino-related packages or tools, depending on the user's requirements.</p>
<h2>Support and Contributions</h2>
<p>For support, suggestions, or contributions (like adding more Arduino-related tools or improving the setup), please raise an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the Arduino development environment setup are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Docker Bluesky</h2>
                <div><h1>DRAFT role docker-bluesky</h1>
<h2>Setup</h2>
<h3>Configure DNS</h3>
<ul>
<li>https://bsky.social/about/blog/4-28-2023-domain-handle-tutorial</li>
</ul>
<h2>Administration</h2>
<h3>create user via POST</h3>
<p><code>bash
curl -X POST https://your-pds-domain/xrpc/com.atproto.server.createAccount \
  --user "admin:$admin-password" 
  -H "Content-Type: application/json" \
  -d '{
        "email": "user@example.com",
        "handle": "username",
        "password": "securepassword123",
        "inviteCode": "optional-invite-code"
      }'</code></p>
<h3>Use pdsadmin</h3>
<p>docker compose exec -it pds pdsadmin</p>
<p>docker compose exec -it pds pdsadmin account create-invite-code</p>
<h2>Debugging</h2>
<ul>
<li>Websocket: https://piehost.com/websocket-tester</li>
<li>Instance: https://bsky-debug.app</li>
</ul>
<p>https://bluesky.veen.world/.well-known/atproto-did</p>
<p>Initial setup keine top level domain</p>
<h2>more information</h2>
<ul>
<li>https://therobbiedavis.com/selfhosting-bluesky-with-docker-and-swag/</li>
<li>Relevant for proxy configuration: https://cprimozic.net/notes/posts/notes-on-self-hosting-bluesky-pds-alongside-other-services/</li>
<li>https://github.com/bluesky-social/pds</li>
<li>https://chatgpt.com/c/678a2eb6-145c-800f-bf51-ff706981a928</li>
<li>https://www.youtube.com/watch?v=7_AG50u7D6c</li>
<li>https://github.com/bluesky-social/pds/issues/52</li>
<li>https://github.com/lhaig/pdsadmin</li>
<li>https://github.com/bluesky-social/pds/issues/147</li>
<li>https://docs.bsky.app/docs/advanced-guides/oauth-client</li>
</ul></div>
            </section>
            
            <section>
                <h2>Docker Mastodon</h2>
                <div><h1>🚀 Docker Mastodon with OIDC Support</h1>
<h2>📌 Overview</h2>
<p>This project provides a <strong>Docker-based setup for Mastodon</strong>, including full <strong>OIDC (OpenID Connect) authentication support</strong>. It is maintained by <strong><a href="https://www.veen.world">Kevin Veen-Birkenbach</a></strong>.</p>
<p>This README and some parts of the code were created with the assistance of ChatGPT. You can follow the discussion and evolution of this project in <a href="https://chatgpt.com/c/67a4e19b-3884-800f-9d45-621dda2a6572">this conversation</a>.</p>
<h2>⚙️ Configuration &amp; Setup</h2>
<h3>🔧 Create Credentials</h3>
<p>Run the following command to generate a new configuration setup:
<code>bash
    docker pull ghcr.io/mastodon/mastodon:latest
    # Secret Generation
    docker run --rm ghcr.io/mastodon/mastodon:latest bundle exec rails secret
    docker run --rm ghcr.io/mastodon/mastodon:latest bundle exec rails secret
    # Vapid Key Generation
    docker run --rm ghcr.io/mastodon/mastodon:latest bundle exec rails mastodon:webpush:generate_vapid_key
    # ACTIVE_RECORD_ENCRYPTION Generation
    docker run --rm ghcr.io/mastodon/mastodon:latest bin/rails db:encryption:init</code></p>
<h3>🔄 Setup with an Existing Configuration</h3>
<p><code>bash
docker-compose run --rm web bundle exec rails db:migrate</code></p>
<h3>🗑️ Cleanup (Remove Instance &amp; Volumes)</h3>
<p><code>bash
cd {% raw %}{{path_docker_compose_instances}}{% endraw %}mastodon/
docker-compose down
docker volume rm mastodon_data mastodon_database mastodon_redis
cd {% raw %}{{path_docker_compose_instances}}{% endraw %} &amp;&amp;
rm -vR {% raw %}{{path_docker_compose_instances}}{% endraw %}mastodon</code></p>
<h3>🔍 Access Mastodon Terminal</h3>
<p><code>bash
docker-compose exec -it web /bin/bash</code></p>
<h3>🛠️ Set File Permissions</h3>
<p>After setting up Mastodon, apply the correct file permissions:
<code>bash
docker-compose exec -it -u root web chown -R 991:991 public</code></p>
<h2>📦 Database Management</h2>
<h3>🏗️ Running Database Migrations</h3>
<p>Ensure all required database structures are up to date:
<code>bash
docker compose exec -it web bash -c "RAILS_ENV=production bin/rails db:migrate"</code></p>
<h2>🚀 Performance Optimization</h2>
<h3>🗑️ Delete Cache &amp; Recompile Assets</h3>
<p><code>bash
docker-compose exec web bundle exec rails assets:precompile
docker-compose restart</code></p>
<p>This ensures your Mastodon instance is loading the latest assets after updates.</p>
<h2>🔐 OIDC (OpenID Connect) Authentication Support</h2>
<p>This Mastodon role now <strong>fully supports OpenID Connect (OIDC)</strong>, allowing seamless authentication via identity providers like <strong>Keycloak, Auth0, Google, or other OIDC-compliant services</strong>.</p>
<h2>📚 Further Reading</h2>
<ul>
<li><a href="https://goneuland.de/mastodon-mit-docker-und-traefik-installieren/">Mastodon with Docker &amp; Traefik</a></li>
<li><a href="https://gist.github.com/TrillCyborg/84939cd4013ace9960031b803a0590c4">Mastodon Configuration Guide</a></li>
<li><a href="https://www.2daygeek.com/linux-command-check-website-is-up-down-alive/">Check Website Availability</a></li>
<li><a href="https://vitobotta.com/2022/11/07/setting-up-a-personal-mastodon-instance/">Personal Mastodon Setup</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-scale-your-mastodon-server">Scaling a Mastodon Server</a></li>
<li><a href="https://github.com/mastodon/mastodon/issues/7958">Mastodon GitHub Issues</a></li>
</ul></div>
            </section>
            
            <section>
                <h2>Pc Spotify</h2>
                <div><h1>PC-Spotify Role</h1>
<h2>Overview</h2>
<p>This README is for the <code>pc-spotify</code> role, part of the <code>cymais</code> repository. This role is dedicated to installing Spotify, a popular digital music streaming service, on personal computers.</p>
<h2>Role Tasks</h2>
<p>The <code>main.yml</code> file in the <code>pc-spotify</code> role includes the following task:</p>
<ol>
<li><strong>Install Entertainment Software</strong>:</li>
<li>Utilizes the <code>kewlfft.aur.aur</code> module with <code>yay</code> as the AUR helper to install <code>spotify</code>. Spotify offers streaming of millions of songs, podcasts, and videos from artists all around the world.</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>system-aur-helper</strong>: Ensures that an Arch User Repository (AUR) helper is available, which is necessary for installing packages like <code>spotify</code> that are not available in the standard repositories.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-spotify</code> role is tailored for users who enjoy streaming music and wish to have Spotify readily available on their personal computer. This role simplifies the process of installing Spotify, making it accessible for listening to music, podcasts, and more.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Required for running this role.</li>
<li><strong>Arch Linux-based System</strong>: The role is designed for systems that use the <code>pacman</code> package manager and AUR helpers, typically found in Arch Linux distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-spotify</code> directory.
3. Execute the role using Ansible, ensuring you have the necessary system permissions for package installation.</p>
<h2>Customization</h2>
<p>While this role is primarily focused on installing Spotify, it can be customized to include additional entertainment or media software as per user requirements.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more features or enhancing the role, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the entertainment software setup, including Spotify, are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Docker Roulette Wheel</h2>
                <div><h1>docker roulette-wheel</h1>
<h2>further information</h2>
<ul>
<li>https://github.com/p-wojt/roulette-wheel</li>
<li>https://dev.to/ms314006/how-to-package-front-end-projects-into-docker-images-and-use-it-with-webpack-go3</li>
<li>https://stackoverflow.com/questions/53178820/dockerfile-to-run-nodejs-static-content-in-docker-container</li>
<li>https://stackoverflow.com/questions/43619644/i-am-getting-an-invalid-host-header-message-when-connecting-to-webpack-dev-ser</li>
</ul></div>
            </section>
            
            <section>
                <h2>Restart Docker</h2>
                <div><h1>Docker Auto Restart</h1>
<p>This role was implemented to address the classic issue: <a href="https://www.youtube.com/watch?v=rksCTVFtjM4">"Have you tried turning it off and on again?"</a>. The problem initially arose with the <code>fetchmail</code> container in <a href="../roles/docker/mailu">Mailu</a>, which fails if only some containers, and not the full docker-compose composition, are restarted.</p>
<h2>Overview</h2>
<p>This role automates the restart process for all <code>docker-compose</code> instances within a specified directory. It ensures consistent restarts of services while avoiding issues caused by partial restarts.</p>
<h2>Features</h2>
<ul>
<li>Automatically detects and restarts <code>docker-compose</code> instances in the given directory.</li>
<li>Uses a Python script to perform service restarts with <code>docker-compose restart</code>.</li>
<li>Integrates with <code>systemd</code> for scheduled or manual execution.</li>
<li>Designed for idempotency and ease of integration.</li>
</ul>
<h2>Requirements</h2>
<ul>
<li><code>docker-compose</code> must be installed on the target system.</li>
<li>Python 3.x is required to execute the provided script.</li>
<li>This role depends on the <code>system-maintenance-lock</code> role for handling system-wide locking during restarts.</li>
</ul>
<h2>Installation</h2>
<ol>
<li>Clone or include this role in your Ansible project.</li>
<li>Define the required variables in your playbook or inventory:
   <code>yaml
   path_administrator_scripts: "/path/to/administrator/scripts/"
   restart_docker_folder: "/path/to/restart/volumes/"
   on_calendar_restart_dockers: "daily"</code></li>
</ol>
<h2>Usage</h2>
<p>Include this role in your playbook:
<code>yaml
- hosts: all
  roles:
    - docker-auto-restart</code></p>
<p>The role will:
1. Set up the necessary directories and scripts.
2. Configure a <code>systemd</code> service to restart docker-compose instances.
3. Optionally schedule restarts via a systemd timer.</p>
<h2>Acknowledgments</h2>
<p>This role was developed with the assistance of <a href="https://openai.com/chatgpt">ChatGPT</a>, including insights and optimizations from this <a href="https://chatgpt.com/share/674c6870-fcc4-800f-a19e-b20621b24317">conversation</a>. Special thanks for providing guidance on error handling, Ansible best practices, and Python integration.</p>
<hr />
<p>Feel free to contribute or provide feedback via the <a href="https://github.com/kevinveenbirkenbach/cymais/issues">repository issues page</a>.</p></div>
            </section>
            
            <section>
                <h2>Update Docker</h2>
                <div><h1>Update-Docker Role</h1>
<p>This Ansible role is used to update Docker Compose instances. It includes a Python script that checks for updates to Docker images and applies them if necessary.</p>
<p>It was created with the help of ChatGPT. The conversation is available <a href="https://chat.openai.com/share/165418b8-25fa-433b-baca-caded941e22a">here</a></p></div>
            </section>
            
            <section>
                <h2>Docker Repository Setup</h2>
                <div><h1>Docker Repository Setup 🚀</h1>
<p>This Ansible role sets up and manages your Docker repository. It ensures that the repository is pulled from your remote Git source, and it automatically triggers a rebuild of your Docker images using Docker Compose. </p>
<h2>Features 🔧</h2>
<ul>
<li>
<p><strong>Default Path Setup:</strong><br />
  Automatically sets a default <code>docker_repository_path</code></p>
</li>
<li>
<p><strong>Repository Management:</strong><br />
  Clones or updates your Docker repository from a specified Git repository.</p>
</li>
<li>
<p><strong>Automated Build Trigger:</strong><br />
  Notifies handlers to rebuild the Docker repository using Docker Compose with extended timeouts.</p>
</li>
</ul>
<h2>Role Structure 📂</h2>
<ul>
<li><strong>Handlers:</strong>  </li>
<li>
<p><code>rebuild docker repository</code>: Runs <code>docker compose build</code> in the designated repository directory with custom timeout settings.</p>
</li>
<li>
<p><strong>Tasks:</strong>  </p>
</li>
<li>Sets the default repository path if undefined.</li>
<li>Pulls the latest code from the Docker repository.</li>
<li>
<p>Notifies the Docker Compose project setup and triggers a repository rebuild.</p>
</li>
<li>
<p><strong>Meta:</strong>  </p>
</li>
<li>Declares a dependency on the <code>docker-compose</code> role to ensure that handlers and related dependencies are loaded.</li>
</ul>
<h2>Usage ⚙️</h2>
<p>Ensure that you have set the following variables (either via your inventory, <code>group_vars</code>, or <code>host_vars</code>):</p>
<ul>
<li><code>docker_repository_address</code>: The Git repository URL of your Docker repository.</li>
<li><code>docker_compose.directories.services</code>: The base directory where your Docker services are stored.<br />
  The role will append <code>repository/</code> to this path to form <code>docker_repository_path</code>.</li>
</ul>
<h2>Author</h2>
<p>Kevin Veen-Birkenbach<br />
<a href="https://www.veen.world">https://www.veen.world</a></p>
<hr />
<p>Happy deploying! 🚀🐳</p></div>
            </section>
            
            <section>
                <h2>Journalctl</h2>
                <div><h1>role journalctl</h1>
<h1>live monitoring</h1>
<p><code>bash
  'journalctl -f'</code></p></div>
            </section>
            
            <section>
                <h2>Pc Developer Tools Python</h2>
                <div><h1>PC-Developer-Tools-Python Role</h1>
<h2>Overview</h2>
<p>This README accompanies the <code>pc-developer-tools-python</code> role, which is part of the <code>cymais</code> repository. The role is dedicated to setting up Python development tools on personal computers.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file under the <code>pc-developer-tools-python</code> role includes the following task:</p>
<ol>
<li><strong>Install Python Developer Tools</strong>:</li>
<li>The task employs the <code>community.general.pacman</code> module to install:<ul>
<li><code>python</code>: The Python programming language package, essential for development in Python, one of the most popular and widely used programming languages today.</li>
</ul>
</li>
</ol>
<h2>Dependencies</h2>
<p>This role depends on:
- <strong>pc-developer-tools</strong>: This ensures that basic developer tools, potentially including code editors, version control systems, and other utilities common in development environments, are already installed.</p>
<h2>Purpose and Usage</h2>
<p>The <code>pc-developer-tools-python</code> role is specifically designed for developers who work with Python. Whether you are a beginner learning Python, a data scientist using Python for analysis, or a web developer creating applications in Python, this role provides the foundational Python package necessary for such activities.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: Ansible must be installed on your system to run this role.</li>
<li><strong>Arch Linux-based System</strong>: Since the role utilizes the <code>pacman</code> package manager, it is tailored for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To use this role:
1. Clone the <code>cymais</code> repository to your machine.
2. Navigate to the <code>roles/pc-developer-tools-python</code> directory within the repository.
3. Execute the role using Ansible, ensuring you have the appropriate permissions to install software packages.</p>
<h2>Customization</h2>
<p>You can customize this role by adding more Python-related tools, libraries, or frameworks to suit your specific development needs.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding additional Python development tools or enhancing the existing setup, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that improve the Python development environment are highly encouraged.</p></div>
            </section>
            
            <section>
                <h2>Docker Matomo</h2>
                <div><h1>Docker Matomo Role</h1>
<p>This Ansible role deploys a <a href="https://matomo.org/">Matomo</a> analytics platform instance using Docker.</p>
<h2>AI Generated</h2>
<p>This script was created with the help of ChatGPT. The full conversation is <a href="https://chat.openai.com/share/49e0c7e4-a2af-4a04-adad-7a735bdd85c4">here</a> available.</p>
<h2>Author</h2>
<ul>
<li><a href="https://www.veen.world/">Kevin Veen-Birkenbach</a></li>
</ul></div>
            </section>
            
            <section>
                <h2>System Aur Helper</h2>
                <div><p>https://github.com/kewlfft/ansible-aur</p></div>
            </section>
            
            <section>
                <h2>Systemd Notifier</h2>
                <div><h1>systemd-notifier Ansible Role</h1>
<p>Author: Kevin Veen-Birkenbach (kevin@veen.world)</p>
<h2>Description</h2>
<p>This Ansible role installs a systemd service that sends notifications via both <code>systemd-notifier-telegram</code> and <code>systemd-notifier-email</code> when any service fails.</p>
<p>Features include:</p>
<ul>
<li>Configuration of a systemd service for notification.</li>
<li>Dependency management for the <code>systemd-notifier-telegram</code> and <code>systemd-notifier-email</code> roles.</li>
</ul>
<p>This role was created as part of a conversation with OpenAI's ChatGPT and can be found <a href="https://chat.openai.com/share/96e4ca12-0888-41c0-9cfc-29c0180f0dba">here</a>.</p>
<h2>Role Dependencies</h2>
<p>This role has the following dependencies:</p>
<ul>
<li><code>systemd-notifier-telegram</code></li>
<li><code>systemd-notifier-email</code></li>
</ul>
<h2>Features</h2>
<ul>
<li>Installs a systemd service for sending notifications.</li>
<li>Integrates with both Telegram and Email for notification delivery.</li>
</ul>
<h2>Contact Information</h2>
<p>For any questions or feedback, please contact the author:</p>
<p>Author: Kevin Veen-Birkenbach
Email: kevin@veen.world</p></div>
            </section>
            
            <section>
                <h2>Nginx Modifier Matomo</h2>
                <div><h1>Nginx Matomo Tracking Role</h1>
<p>This Ansible role automates the integration of Matomo tracking code into Nginx-served websites. It simplifies the process of adding the Matomo analytics tracking script and image tracker to all your web pages served through Nginx.</p>
<h2>Features</h2>
<ul>
<li>Automated insertion of Matomo tracking script into the <code>&lt;/head&gt;</code> tag of HTML pages.</li>
<li>Integration of a noscript image tracker before the <code>&lt;/body&gt;</code> tag for tracking users with JavaScript disabled.</li>
<li>Configuration to apply changes on every request, ensuring that dynamic content and single-page applications are also tracked.</li>
</ul>
<h2>Requirements</h2>
<ul>
<li>Nginx installed on the target server.</li>
<li>Matomo analytics platform set up and accessible.</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>None. This role is designed to be included in Nginx server block configurations.</li>
</ul>
<h2>Customization</h2>
<p>You can customize the tracking script and the noscript image tracker by editing the <code>matomo-tracking.js.j2</code> and <code>matomo.subfilter.conf.j2</code> templates.</p>
<h2>Author Information</h2>
<p>This role was created in 2023 by <a href="https://www.veen.world/">Kevin Veen Birkenbach</a>, providing a seamless way to add Matomo analytics to any website served via Nginx.</p></div>
            </section>
            
            <section>
                <h2>Docker Listmonk</h2>
                <div><h1>Docker Listmonk Role</h1>
<p>This role deploys the Listmonk application using Docker. Listmonk is a high performance, self-hosted newsletter and mailing list manager with a modern dashboard.</p>
<h2>Prerequisites</h2>
<ul>
<li>Docker and Docker Compose should be installed on your system.</li>
<li>Make sure that the required ports are available and not used by other services.</li>
</ul>
<h2>Installation and Configuration</h2>
<ol>
<li><strong>Clone the Repository</strong>:</li>
<li>
<p>Ensure you have the latest version of this playbook from the repository.</p>
</li>
<li>
<p><strong>Configure Variables</strong>:</p>
</li>
<li>
<p>Set your desired configurations in <code>vars/main.yml</code>. This includes the path to your Docker Compose files and any other relevant variables.</p>
</li>
<li>
<p><strong>Run the Playbook</strong>:</p>
</li>
<li>
<p>Execute the ansible playbook to set up Listmonk.</p>
</li>
<li>
<p><strong>Initial Database Setup</strong>:</p>
</li>
<li>
<p>After the first setup, run the following command to initialize the Listmonk database:
     <code>bash
     docker compose run --rm application ./listmonk --install</code></p>
</li>
<li>
<p><strong>Configure Reverse Proxy</strong> (Optional):</p>
</li>
<li>
<p>If you are using a reverse proxy, configure it as per your domain settings in the <code>nginx-docker-reverse-proxy</code> role.</p>
</li>
<li>
<p><strong>Start Services</strong>:</p>
</li>
<li>Use the following command to start Listmonk services:
     <code>bash
     docker-compose -p listmonk up -d --force-recreate</code></li>
</ol>
<h2>Upgrade</h2>
<p><code>bash 
docker compose run application ./listmonk --upgrade</code></p>
<h2>Configuration Files</h2>
<ul>
<li><strong>docker-compose.yml</strong>: Defines the Docker setup for Listmonk and its database.</li>
<li><strong>config.toml</strong>: Contains the application settings including the database connection, admin credentials, and server settings.</li>
</ul>
<h2>Further Information</h2>
<ul>
<li>For detailed installation instructions and configuration options, visit the <a href="https://listmonk.app/docs/installation/">Listmonk Installation Documentation</a>.</li>
<li>You can also find more information on the <a href="https://github.com/knadh/listmonk/">Listmonk GitHub Repository</a>.</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>This role depends on <code>nginx-docker-reverse-proxy</code> for setting up a reverse proxy for Listmonk.</li>
</ul>
<h2>Developed with AI</h2>
<p>This Docker Listmonk role was developed with assistance from ChatGPT, a conversational AI by OpenAI. The conversation and guidance provided by ChatGPT can be found <a href="https://chat.openai.com/share/95e722f5-3bd9-4203-8755-def2eca4796e">here</a>.</p></div>
            </section>
            
            <section>
                <h2>Cleanup Failed Docker Backups</h2>
                <div><h1>Docker Volume Backup Cleanup</h1>
<p>This script cleans up failed docker backups.
It uses https://github.com/kevinveenbirkenbach/cleanup-failed-docker-backups as base.</p></div>
            </section>
            
            <section>
                <h2>Pc Games</h2>
                <div><h1>PC-Games Role</h1>
<h2>Overview</h2>
<p>This README is for the <code>pc-games</code> role, a part of the <code>cymais</code> repository. This role is designed to install a variety of popular open-source and freely available games on personal computers.</p>
<h2>Role Contents</h2>
<p>The <code>main.yml</code> file within the <code>pc-games</code> role automates the installation of several gaming titles using the <code>community.general.pacman</code> module. The games included are:</p>
<ol>
<li><strong>Install Gaming Software</strong>:</li>
<li><code>0ad</code>: A free, open-source, historical real-time strategy (RTS) game.</li>
<li><code>warzone2100</code>: A 3D RTS game set in a post-apocalyptic future.</li>
<li><code>supertuxkart</code>: A free 3D kart racing game.</li>
<li><code>gnuchess</code>: The GNU chess program.</li>
<li><code>sauerbraten</code>: A first-person shooter game.</li>
<li><code>minetest</code>: An open-source voxel game engine with easy modding and game creation.</li>
<li><code>mari0</code>: A crossover between Super Mario and Portal.</li>
<li><code>retroarch</code>: A frontend for emulators, game engines, and media players.</li>
<li><code>retroarch-assets-xmb</code>: XMB menu assets for RetroArch.</li>
<li><code>retroarch-assets-ozone</code>: Ozone menu assets for RetroArch.</li>
</ol>
<h2>Purpose and Usage</h2>
<p>The <code>pc-games</code> role is perfect for gamers who wish to have a variety of gaming experiences on their personal computer. It includes a range of games from different genres, providing options for players with diverse interests. The role is also suitable for setting up a gaming environment on new systems or restoring a collection of games after a system refresh.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: You must have Ansible installed on your system to use this role.</li>
<li><strong>Arch Linux-based System</strong>: This role uses the <code>pacman</code> package manager, indicating it is designed for Arch Linux or similar distributions.</li>
</ul>
<h2>Running the Role</h2>
<p>To utilize this role:
1. Clone the <code>cymais</code> repository.
2. Navigate to the <code>roles/pc-games</code> directory.
3. Execute the role using Ansible, ensuring you have the necessary permissions for software installation.</p>
<h2>Customization</h2>
<p>You can customize this role by adding or removing games in the <code>main.yml</code> file based on your preferences or the requirements of your system.</p>
<h2>Support and Contributions</h2>
<p>For support, feedback, or contributions, such as adding more games or enhancing the setup process, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that expand the gaming options or improve the installation process are highly welcomed.</p></div>
            </section>
            
            <section>
                <h2>Cleanup Backups Timer</h2>
                <div><h1>role cleanup-backups-timer</h1>
<p>Timer for cleaning up old backups</p></div>
            </section>
            
            <section>
                <h2>Docker Nextcloud</h2>
                <div><h1>Docker Nextcloud Role 🚀</h1>
<p>This repository contains an Ansible role for deploying and managing <a href="https://nextcloud.com/">Nextcloud</a> using <a href="https://www.docker.com/">Docker</a>. It covers configuration modifications, updates, backups, database management, and more. Additionally, OIDC (OpenID Connect) is supported (for example, via <strong>Keycloak</strong>).</p>
<hr />
<h2>Modify Config 🔧</h2>
<h3>Enter the Container</h3>
<p><code>bash
docker-compose exec -it application /bin/sh</code></p>
<h3>Modify the Configuration</h3>
<p>Inside the container, install a text editor and edit the config:
<code>bash
apk add --no-cache nano &amp;&amp; nano config/config.php</code></p>
<hr />
<h2>Update 🔄</h2>
<p>To update the Nextcloud container, execute the following commands on the server:
<code>bash
docker exec -it -u www-data nextcloud-application /var/www/html/occ maintenance:mode --on &amp;&amp;
export COMPOSE_HTTP_TIMEOUT=600 &amp;&amp;
export DOCKER_CLIENT_TIMEOUT=600 &amp;&amp;
docker-compose down</code></p>
<p>Afterwards, update the <strong><em>applications.nextcloud.version</em></strong> variable to the next version and run this repository with this Ansible role.</p>
<blockquote>
<p><strong>Note:</strong><br />
It is only possible to update from one to the next major version at a time.<br />
Wait for the update to finish.</p>
</blockquote>
<p>Verify the update by checking the logs:
<code>bash
docker-compose logs application</code>
and
<code>bash
docker-compose exec -it application top</code></p>
<p>If Nextcloud remains in maintenance mode after the update, try the following:
<code>bash
docker exec -it -u www-data nextcloud-application/var/www/html/occ maintenance:mode --on
docker exec -it -u www-data nextcloud-application /var/www/html/occ upgrade
docker exec -it -u www-data nextcloud-application /var/www/html/occ maintenance:mode --off</code></p>
<p>If the update process fails, execute:
<code>bash
docker exec -it -u www-data nextcloud-application /var/www/html/occ maintenance:repair --include-expensive</code>
and disable any non-functioning apps.</p>
<hr />
<h2>Recover Latest Backup 💾</h2>
<p><code>bash
cd {% raw %}{{path_docker_compose_instances}}{% endraw %}nextcloud &amp;&amp;
docker-compose down &amp;&amp;
docker-compose exec -i database mysql -u nextcloud -pPASSWORT nextcloud &lt; "/Backups/$(sha256sum /etc/machine-id | head -c 64)/backup-docker-to-local/latest/nextcloud_database/sql/backup.sql" &amp;&amp;
cd {% raw %}{{path_administrator_scripts}}{% endraw %}backup-docker-to-local &amp;&amp;
bash ./recover-docker-from-local.sh "nextcloud_data" "$(sha256sum /etc/machine-id | head -c 64)"</code></p>
<hr />
<h2>Database Management 🗄️</h2>
<h3>Database Access</h3>
<p>To access the database, execute:
<code>bash
docker-compose exec -it database mysql -u nextcloud -D nextcloud -p</code></p>
<h3>Recreate Database with New Volume</h3>
<p><code>bash
docker-compose run --detach --name database --env MYSQL_USER="nextcloud" --env MYSQL_PASSWORD=PASSWORD --env MYSQL_ROOT_PASSWORD=PASSWORD --env MYSQL_DATABASE="nextcloud" -v nextcloud_database:/var/lib/mysql</code></p>
<hr />
<h2>OCC (Nextcloud Command Line) 🔧</h2>
<p>To use OCC, run:
<code>bash
docker-compose exec -it -u www-data application /var/www/html/occ</code></p>
<h3>User Administration</h3>
<h4>List Users</h4>
<p><code>bash
docker compose exec -it -u www-data application php occ user:list</code></p>
<h4>Sync Users</h4>
<p><code>bash
docker compose exec -it -u www-data application php occ user:sync</code></p>
<h4>Create user via CLI</h4>
<p><code>bash
docker compose exec -it -u www-data application php occ user:add {% raw %}{{username}}{% endraw %}</code></p>
<h4>Make user admin via cli</h4>
<p><code>bash
docker compose exec -it -u www-data application php occ group:adduser admin {% raw %}{{username}}{% endraw %}</code></p>
<h4>Delete user via CLI</h4>
<p><code>bash
docker compose exec -it -u www-data application php occ user:delete {% raw %}{{username}}{% endraw %}</code></p>
<hr />
<h3>App Administration</h3>
<p><code>bash
docker compose exec -u www-data application php occ config:list {% raw %}{{app_name}}{% endraw %}</code></p>
<h3>Initialize Duplicates</h3>
<p><code>bash
docker-compose exec -it -u www-data application /var/www/html/occ duplicates:find-all --output</code></p>
<h3>Unlock Files</h3>
<p><code>bash
docker-compose exec -it -u www-data application /var/www/html/occ maintenance:mode --on
docker-compose exec -it nextcloud_database_1 mysql -u nextcloud -pPASSWORD1234132 -D nextcloud -e "delete from oc_file_locks where 1"
docker-compose exec -it -u www-data application /var/www/html/occ maintenance:mode --off</code></p>
<hr />
<h2>Apps</h2>
<h3>App Relevant Tables 🗃️</h3>
<ul>
<li><code>oc_appconfig</code></li>
<li><code>oc_migrations</code></li>
</ul>
<h3>Cospend</h3>
<h4>Relevant SQL Commands for Cospend</h4>
<p>Debugguging Migrations: </p>
<p>https://github.com/julien-nc/cospend-nc/issues/325
<code>sql
-- Show all Cospend Tables
SHOW TABLES where Tables_in_nextcloud LIKE "%cospend%";
-- Show Cospend Configuration
SELECT * FROM `oc_appconfig` WHERE appid LIKE "%cospend%";
-- Show Cospend Database Migrations 
SELECT * FROM `oc_migrations` WHERE app LIKE "%cospend%";</code></p>
<h1>Identity and Access Management (IAM)</h1>
<h2>OpenID Connect (OIDC) Support 🔐</h2>
<p>OIDC is supported in this role—for example, via <strong>Keycloak</strong>. OIDC-specific tasks are included when enabled, allowing integration of external authentication providers seamlessly.</p>
<h3>Verify OIDC Configuration</h3>
<p><code>bash
docker compose exec -u www-data application /var/www/html/occ config:app:get sociallogin custom_providers</code></p>
<h2>LDAP</h2>
<p>More information: https://docs.nextcloud.com/server/latest/admin_manual/configuration_user/user_auth_ldap.html</p>
<h2>Get all relevant entries except password</h2>
<p><code>sql
SELECT * FROM `oc_appconfig` WHERE appid LIKE "%ldap%" and configkey != "s01ldap_agent_password";</code></p>
<h2>Update User with LDAP values</h2>
<p><code>bash
docker compose exec -it -u www-data application php occ ldap:check-user --update {% raw %}{{username}}{% endraw %}</code></p>
<h2>Federation</h2>
<p>If users are just created via Keycloak and not via LDAP, they have a different username. Due to this reaso concider to use LDAP to guaranty that the username is valid. </p>
<hr />
<h2>Further Information ℹ️</h2>
<ul>
<li><a href="https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/fpm/docker-compose.yml">Nextcloud Docker Example with Nginx Proxy, MariaDB, and FPM</a></li>
<li><a href="https://goneuland.de/nextcloud-upgrade-auf-neue-versionen-mittels-docker/">Nextcloud Upgrade via Docker by Goneuland</a></li>
<li><a href="https://help.nextcloud.com/t/cant-start-nextcloud-because-the-version-of-the-data-is-higher-than-the-docker-image-version-and-downgrading-is-not-supported/109438">Nextcloud Data Version Issue</a></li>
<li><a href="https://github.com/nextcloud/docker/issues/1302">Nextcloud Docker Issue #1302</a></li>
<li><a href="https://help.nextcloud.com/t/update-to-22-failed-with-database-error-updated/120682">Update to Nextcloud 22 Failed Database Error</a></li>
<li><a href="https://help.nextcloud.com/t/nc-update-to-21-0-0-beta1-exception-database-error/101124/4">Nextcloud 21.0.0-beta1 Database Error</a></li>
<li><a href="https://wolfgang.gassler.org/reset-password-mariadb-mysql-docker/">Reset Password for MariaDB/MySQL in Docker</a></li>
<li><a href="https://unix.stackexchange.com/questions/478855/ansible-docker/container/and-depends-on">Ansible Docker Container and depends_on Issue</a></li>
<li><a href="https://github.com/gdiepen/docker-convenience-scripts">Docker Convenience Scripts by gdiepen</a></li>
<li><a href="https://help.nextcloud.com/t/several-issues-after-upgrading-to-nextcloud-21/113118/3">Issues After Upgrading to Nextcloud 21</a></li>
<li><a href="https://forum.openmediavault.org/index.php?thread/31782-docker-nextcloud-talk-plugin-and-turnserver/">Nextcloud Talk Plugin and Turnserver in Docker</a></li>
<li><a href="https://help.nextcloud.com/t/nextcloud-talk-im-docker/container/turn-server-auf-docker-host-kein-video/84133/10">Nextcloud Talk on Docker: Turn Server Issues</a></li>
</ul>
<hr />
<h2>Author</h2>
<p><strong>Developed by:</strong> Kevin Veen-Birkenbach<br />
<strong>Website:</strong> <a href="https://www.veen.world/">https://www.veen.world/</a></p>
<p><em>This README.md was created with the help of <a href="https://chatgpt.com/share/67a5312c-7248-800f-ae27-0288c1c82f1d">ChatGPT</a>.</em></p>
<hr />
<p><em>Enjoy and happy containerizing! 😄</em></p></div>
            </section>
            
            <section>
                <h2>Plugins</h2>
                <div><p>This folder contains the plugin specific configurations which willö be applied</p></div>
            </section>
            
            <section>
                <h2>Config</h2>
                <div><p>This folder contains configuration files which will be loaded direct into the config.php
If you don't use nested configuration, concider to use the vars/system.yml file instead, because it's a cleaner way to set the configuration.</p></div>
            </section>
            
            <section>
                <h2>Nginx Https Get Cert</h2>
                <div><h1>Let's Encrypt Certificate Role</h1>
<p>This Ansible role uses Certbot to obtain Let's Encrypt SSL/TLS certificates. It supports both dedicated and wildcard certificate requests based on domain conditions. It can also clean up (delete) dedicated certificates when cleanup mode is enabled.</p>
<h2>Features</h2>
<ul>
<li>
<p><strong>Dedicated Certificate Request:</strong><br />
  Requests a certificate for a given domain using Certbot's <code>certonly</code> command with the webroot plugin.</p>
</li>
<li>
<p><strong>Wildcard Certificate Request:</strong><br />
  When enabled, obtains a wildcard certificate for the primary domain (including both the primary domain and all its direct subdomains).</p>
</li>
<li>
<p><strong>Certificate Cleanup:</strong><br />
  Provides an option to delete dedicated certificates if cleanup mode is active.</p>
</li>
<li>
<p><strong>Run Once for Wildcard:</strong><br />
  Ensures that the wildcard certificate task runs only once to prevent duplicate requests.</p>
</li>
</ul>
<h2>Tasks Overview</h2>
<ul>
<li>
<p><strong>Receive Dedicated Certificate:</strong><br />
  Executes Certbot to request a dedicated certificate for <code>{% raw %}{{ domain }}{% endraw %}</code> when a wildcard certificate is not applicable.</p>
</li>
<li>
<p><strong>Receive Wildcard Certificate:</strong><br />
  Executes Certbot to request a wildcard certificate for <code>*{% raw %}{{ primary_domain }}{% endraw %}</code> under the appropriate conditions.</p>
</li>
<li>
<p><strong>Cleanup Dedicated Certificate:</strong><br />
  Runs Certbot's delete command to remove the dedicated certificate if cleanup mode is active.</p>
</li>
<li>
<p><strong>Run Once Flag:</strong><br />
  Sets a fact to ensure that the wildcard certificate task is executed only once per playbook run.</p>
</li>
</ul>
<h2>Author</h2>
<p>This role is authored by <a href="https://www.veen.world">Kevin Veen-Birkenbach</a>.</p>
<hr />
<p>Feel free to contribute or open issues if you have suggestions or encounter any problems with the role. Enjoy secure connections with Let's Encrypt and Ansible!</p></div>
            </section>
            
            <section>
                <h2>Docker Jenkins</h2>
                <div><p>This role is deprecated. Needs to be reimplemented.</p></div>
            </section>
            
            <section>
                <h2>Java</h2>
                <div><h1>Java</h1>
<h2>Overview</h2>
<p>This README file is for the Java role, which is part of the <code>cymais</code>. The role is specifically designed to automate the installation of Java on a system, focusing on the OpenJDK 11 version.</p>
<h2>Contents of the role</h2>
<p>The <code>main.yml</code> file within the <code>java</code> role consists of a single, but crucial task:</p>
<ol>
<li><strong>Install Java</strong>: This task uses the <code>community.general.pacman</code> module to install the <code>jdk11-openjdk</code> package. It ensures that Java Development Kit 11 (OpenJDK 11) is present on the system.</li>
</ol>
<h2>Purpose</h2>
<p>The primary objective of this role is to provide a straightforward and efficient method for setting up Java, specifically JDK 11, on personal computers or development environments. This setup is essential for developers who work with Java or run applications that require the Java runtime environment.</p>
<h2>Prerequisites</h2>
<ul>
<li><strong>Ansible</strong>: You need to have Ansible installed on your system to use this role.</li>
<li><strong>Arch Linux-based System</strong>: The role uses the <code>pacman</code> package manager, indicating that it is intended for use on systems based on Arch Linux or its derivatives.</li>
</ul>
<h2>Running the role</h2>
<p>To run this role:
1. Clone the <code>computer-role</code> repository to your system.
2. Navigate to the <code>roles/java</code> directory within the repository.
3. Execute the role using Ansible. Make sure you have the necessary permissions to install packages on your system.</p>
<h2>Customization</h2>
<p>This role is focused on installing JDK 11, but it can be easily modified to install different versions of the JDK or additional Java-related tools as per your requirements.</p>
<h2>Support and Contribution</h2>
<p>For support, feedback, or contributions to the role, please open an issue or submit a pull request in the <code>cymais</code> repository. Contributions that enhance the role or broaden its applicability are greatly appreciated.</p></div>
            </section>
            
            <section>
                <h2>Nginx Docker Cert Deploy</h2>
                <div><h1>Nginx Docker Cert Deploy Role</h1>
<p>🎉 <strong>Author</strong>: <a href="https://www.veen.world">Kevin Veen-Birkenbach</a></p>
<p>This Ansible role simplifies the deployment of <strong>Let's Encrypt certificates</strong> into <strong>Docker Compose</strong> setups with Nginx. It supports both <strong>individual certificates per subdomain</strong> and a <strong>single wildcard certificate</strong> for all subdomains.</p>
<hr />
<h2>🚀 <strong>Features</strong></h2>
<ul>
<li>Automatically deploys <strong>Let's Encrypt certificates</strong> to Docker Compose setups.</li>
<li>Supports both <strong>single-domain certificates</strong> and <strong>one wildcard certificate</strong> for all subdomains.</li>
<li><strong>Copies certificates</strong> to the target directory inside the container.</li>
<li>Automatically <strong>reloads or restarts Nginx services</strong> when certificates are updated.</li>
<li><strong>Configures and manages a <code>systemd</code> service</strong> for automated certificate deployment.</li>
<li><strong>Includes a <code>systemd</code> timer</strong> for scheduled renewals.</li>
<li><strong>Handles dependent services</strong> like <code>systemd-notifier</code>.</li>
</ul>
<hr />
<h2>📋 <strong>Configuration Options</strong></h2>
<h3>🔹 <strong>One Wildcard Certificate for All Subdomains</strong></h3>
<p>By default, each subdomain gets its own certificate. You can <strong>enable a wildcard certificate</strong> by setting:</p>
<p><code>yaml
enable_wildcard_certificate: true</code></p>
<p>📌 <strong>Pros &amp; Cons of a Wildcard Certificate:</strong>
✅ <strong>Improves performance</strong> by reducing TLS handshakes.<br />
✅ <strong>Simplifies certificate management</strong> (one cert for all subdomains).<br />
⚠ <strong>Requires manual DNS challenge setup</strong> for Let's Encrypt.<br />
⚠ <strong>Needs additional configuration for automation</strong> (see below).  </p>
<p>If enabled, update your inventory file and follow the <strong>manual wildcard certificate setup</strong> below.</p>
<hr />
<h2>🔧 <strong>Tasks Overview</strong></h2>
<h3><strong>1️⃣ Main Tasks</strong></h3>
<ol>
<li><strong>Add Deployment Script</strong>  </li>
<li>
<p>Copies <code>nginx-docker-cert-deploy.sh</code> to the administrator scripts directory.</p>
</li>
<li>
<p><strong>Create Certificate Directory</strong>  </p>
</li>
<li>
<p>Ensures <code>cert_mount_directory</code> exists with proper permissions.</p>
</li>
<li>
<p><strong>Configure <code>systemd</code> Service</strong>  </p>
</li>
<li>
<p>Deploys a <code>systemd</code> service file for the deployment process.</p>
</li>
<li>
<p><strong>Include <code>systemd-timer</code> Role</strong>  </p>
</li>
<li>Schedules automatic certificate deployment using a <code>systemd</code> timer.</li>
</ol>
<h3><strong>2️⃣ Handlers</strong></h3>
<ul>
<li><strong>Restart Nginx Service</strong>  </li>
<li>Restarts <code>nginx-docker-cert-deploy</code> whenever a certificate update occurs.</li>
</ul>
<hr />
<h2><strong>🔐 Wildcard Certificate Setup with Let's Encrypt</strong></h2>
<p>If you enabled <code>enable_wildcard_certificate</code>, follow these steps to manually request a <strong>wildcard certificate</strong>.</p>
<h3><strong>1️⃣ Run the Certbot Command 🖥️</strong></h3>
<p><code>sh
certbot certonly --manual --preferred-challenges=dns --agree-tos \
--email administrator@primary_domain -d primary_domain -d "*.primary_domain"</code></p>
<h3><strong>2️⃣ Add DNS TXT Record for Validation 📜</strong></h3>
<p>Certbot will prompt you to add a DNS TXT record:
```
Please create a TXT record under the name:
_acme-challenge.primary_domain.</p>
<p>with the following value:
9oVizYIYVGlZ3VtWQIKRS5UghyXiqGoUNlCtIE7LiA
<code>``
➡ **Go to your DNS provider** and create a new **TXT record**:  
   - **Host:**</code>_acme-challenge.primary_domain<code>- **Value:**</code>"9oVizYIYVGlZ3VtWQIKRS5UghyXiqGoUNlCtIE7LiA"`<br />
   - <strong>TTL:</strong> Set to <strong>300 seconds (or lowest possible)</strong>  </p>
<p>✅ <strong>Verify the DNS record</strong> before continuing:<br />
<code>sh
dig TXT _acme-challenge.primary_domain @8.8.8.8</code></p>
<h3><strong>3️⃣ Complete the Certificate Request ✅</strong></h3>
<p>Once the DNS changes have propagated, <strong>press Enter</strong> in the Certbot terminal.<br />
If successful, Certbot will save the certificates under:<br />
<code>/etc/letsencrypt/live/primary_domain/</code>
- <strong>fullchain.pem</strong> → The certificate<br />
- <strong>privkey.pem</strong> → The private key  </p>
<hr />
<h2><strong>📂 File &amp; Directory Structure</strong></h2>
<p><code>sh
roles/nginx-docker-cert-deploy/
├── files/
│   ├── nginx-docker-cert-deploy.sh  # Deployment script
├── handlers/
│   ├── main.yml  # Restart Nginx handler
├── meta/
│   ├── main.yml  # Dependencies
├── tasks/
│   ├── main.yml  # Main Ansible tasks
├── templates/
│   ├── nginx-docker-cert-deploy.service.j2  # Systemd service template
├── vars/
│   ├── main.yml  # Variable definitions</code></p>
<hr />
<h2><strong>🔧 Deploying Certificates into Docker Containers</strong></h2>
<p>The role <strong>automates copying certificates</strong> into Docker Compose setups.</p>
<h3><strong>1️⃣ Deployment Script (<code>nginx-docker-cert-deploy.sh</code>)</strong></h3>
<p>This script:
- <strong>Copies certificates</strong> to the correct container directory.
- <strong>Reloads Nginx</strong> inside all running containers.
- <strong>Restarts containers if needed</strong>.</p>
<p><strong>Usage:</strong>
<code>sh
sh nginx-docker-cert-deploy.sh primary_domain /path/to/docker/compose</code></p>
<h3><strong>2️⃣ Systemd Service &amp; Timer</strong></h3>
<p>The role includes a <strong><code>systemd</code> service</strong> that runs the deployment script whenever certificates are updated.</p>
<p>Example <code>nginx-docker-cert-deploy.service.j2</code>:
```ini
[Unit]
Description=Let's Encrypt deploy to {% raw %}{{docker_compose.directories.instance}}{% endraw %}
OnFailure=systemd-notifier.cymais@%n.service</p>
<p>[Service]
Type=oneshot
ExecStart=/usr/bin/bash {% raw %}{{path_administrator_scripts}}{% endraw %}/nginx-docker-cert-deploy.sh {% raw %}{{primary_domain}}{% endraw %} {% raw %}{{docker_compose.directories.instance}}{% endraw %}
```</p>
<hr />
<h2>🎯 <strong>Summary</strong></h2>
<p>| Feature | Description |
|---------|------------|
| <strong>Single-domain &amp; wildcard support</strong> | Use individual certs or a wildcard certificate |
| <strong>Automated renewal</strong> | Cronjob or systemd timer ensures auto-renewals |
| <strong>Docker-ready</strong> | Deploys certificates directly into Docker containers |
| <strong>Supports Nginx &amp; Mailu</strong> | Compatible with multiple services |
| <strong>Systemd integration</strong> | Automates deployment via <code>systemd</code> |</p>
<p>🚀 <strong>Now your Nginx setup is fully automated and secured with Let's Encrypt!</strong> 🎉
```</p></div>
            </section>
            
            <section>
                <h2>Nginx Https</h2>
                <div><p>This role loads the components to create an nginx server with https</p></div>
            </section>
            
            <section>
                <h2>Docker Mailu</h2>
                <div><h1>Mailu Server Docker Role 🚀</h1>
<p>This guide provides instructions for setting up, operating, and maintaining the <a href="https://mailu.io/">Mailu</a> server Docker role.</p>
<h2>Table of Contents 📖</h2>
<ul>
<li><a href="#setup">Setup</a></li>
<li><a href="#fetchmail-issues">Fetchmail Issues</a></li>
<li><a href="#data-deletion">Data Deletion</a></li>
<li><a href="#port-management">Port Management</a></li>
<li><a href="#admin-account-creation">Admin Account Creation</a></li>
<li><a href="#cli-user-management">CLI User Management</a></li>
<li><a href="#starting-the-server">Starting the Server</a></li>
<li><a href="#debugging">Debugging</a></li>
<li><a href="#testing">Testing</a></li>
<li><a href="#updates">Updates</a></li>
<li><a href="#queue-management">Queue Management</a></li>
<li><a href="#spam-issues">Spam Issues</a></li>
<li><a href="#oidc-support">OIDC Support</a></li>
<li><a href="#to-do">To-Do</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2>Setup ⚙️</h2>
<h3>Fetchmail Issues 📨</h3>
<p>Fetchmail might not work properly with large amounts of data. For more information, refer to this <a href="https://github.com/Mailu/Mailu/issues/1719">issue</a>.</p>
<h4>Deactivating Fetchmail ❌</h4>
<p>Before uninstalling Fetchmail, ensure you remove all fetched accounts from the administration panel.</p>
<h4>Fetchmail Security Concerns 🔐</h4>
<p>There are known security concerns with Fetchmail as stated in the <a href="https://de.wikipedia.org/wiki/Fetchmail">German Wikipedia</a>. If you require Fetchmail functions in the future, consider creating a Docker container for <a href="https://en.wikipedia.org/wiki/Getmail">Getmail</a> as it is considered more secure.</p>
<h4>Fetchmail Workaround 🔄</h4>
<p>If you need to receive emails from another account, follow these steps:</p>
<ol>
<li>Redirect your emails to your new email account.</li>
<li>Export all data from your original account.</li>
<li>Import all data to your new account.</li>
</ol>
<h3>Port Management 🌐</h3>
<p>Check for any port conflicts and manually change the conflicting ports if necessary. Use the following command to verify:</p>
<p><code>bash
netstat -tulpn</code></p>
<h3>Admin Account Creation 👤</h3>
<p>To use Mailu, create the primary administrator user account, <code>admin@{% raw %}{{hostname}}{% endraw %}</code>, using the command below. Replace <code>PASSWORD</code> with your preferred password:</p>
<p><code>bash
docker-compose -p mailu exec admin flask mailu admin {% raw %}{{admin}}{% endraw %} {% raw %}{{hostname}}{% endraw %} PASSWORD</code></p>
<h3>CLI User Management 🛠️</h3>
<p>For managing users, follow the instructions in the official <a href="https://mailu.io/master/cli.html">Mailu CLI documentation</a>.</p>
<h3>Starting the Server ▶️</h3>
<p>To start the server, use the following command:</p>
<p><code>bash
docker-compose -p mailu up -d</code></p>
<h2>Debugging 🕵️‍♂️</h2>
<h3>Database Access 📂</h3>
<p>To access the database, use the following command:</p>
<p><code>bash
docker-compose exec -it database mysql -u root -D mailu -p</code></p>
<h3>Container Access 🖥️</h3>
<p>To access the front container, use this command:</p>
<p><code>bash
docker-compose exec -it front /bin/bash</code></p>
<h3>Restarting Services 🔄</h3>
<p>To restart all services, use the following command:</p>
<p><code>bash
docker-compose restart</code></p>
<h3>Resending Queued Mails ✉️</h3>
<p>To resend queued mails, use this command:</p>
<p><code>bash
docker-compose exec -it smtp postqueue -f</code></p>
<h2>Testing 🧪</h2>
<p>Use the following tools for testing:</p>
<ul>
<li><a href="https://de.ssl-tools.net/mailservers/">SSL-Tools Mailserver Test</a></li>
<li><a href="http://testemail.de/">TestEmail.de</a></li>
</ul>
<h2>Updates 🔄</h2>
<p>For instructions on updating your Mailu setup, follow the official <a href="https://mailu.io/master/maintain.html">Mailu maintenance guide</a>.</p>
<h2>Queue Management 📬</h2>
<p>To manage the Postfix email queue in Mailu, you can use the following commands:</p>
<ul>
<li><strong>Display the email queue</strong>:</li>
</ul>
<p><code>bash
  docker compose exec -it smtp postqueue -p</code></p>
<ul>
<li><strong>Delete all emails in the queue</strong>:</li>
</ul>
<p><code>bash
  docker compose exec -it smtp postsuper -d ALL</code></p>
<h2>Spam Issues 🚨</h2>
<h3>Inspect 🔎</h3>
<p>Use the following tools to monitor your domain and email deliverability:</p>
<ul>
<li><a href="https://postmaster.google.com/">Google Postmaster</a> - Analyzes deliverability and spam issues for Gmail.</li>
<li><a href="https://postmaster.yahooinc.com">Yahoo Postmaster</a> - Provides insights and delivery reports for Yahoo.</li>
<li><a href="https://mxtoolbox.com">mxtoolbox.com</a></li>
</ul>
<h3>Blacklist Check 🚫</h3>
<p>If your domain is blacklisted, you can check the status with these services and take steps to remove your domain if necessary:</p>
<ul>
<li><a href="https://check.spamhaus.org/">Spamhaus</a></li>
<li><a href="https://www.barracudacentral.org/lookups">Barracuda</a></li>
</ul>
<h3>Cloudmark Reset Request 🔄</h3>
<p>If your IP or domain is flagged by Cloudmark, you can submit a <strong>reset request</strong>:</p>
<ul>
<li><a href="https://csi.cloudmark.com/en/reset/">Cloudmark Reset</a></li>
</ul>
<h2>OIDC Support 🔐</h2>
<p>This role now supports OpenID Connect (OIDC) authentication with <a href="https://github.com/heviat/Mailu-OIDC">Mailu-OIDC</a>! 🎉</p>
<p>To enable OIDC authentication, simply set the following variable:</p>
<p><code>yaml
oidc:
  enabled: true</code></p>
<p>For more details, check out the <a href="https://github.com/heviat/Mailu-OIDC/tree/2024.06">Mailu-OIDC repository</a>.</p>
<h2>References 🔗</h2>
<ul>
<li><a href="https://mailu.io/1.7/compose/setup.html">Mailu compose setup guide</a></li>
<li><a href="https://github.com/nuxsmin/sysPass/issues/1299">SysPass issue #1299</a></li>
<li><a href="https://github.com/Mailu/Mailu/issues/1719">Mailu issue #1719</a></li>
<li><a href="https://github.com/Mailu/Mailu/issues/1171">Mailu issue #1171</a></li>
<li><a href="https://github.com/Mailu/Mailu/issues/2135">Mailu issue #2135</a></li>
<li><a href="https://github.com/Mailu/Mailu/issues/2827">Mailu issue #2827</a></li>
<li><a href="https://github.com/Mailu/Mailu">Mailu GitHub repository</a></li>
<li><a href="https://support.plesk.com/hc/en-us/articles/115001264814-Unable-to-log-into-RoundCube-Connection-to-storage-server-failed">Plesk support article on RoundCube connection issue</a></li>
<li><a href="https://gist.github.com/marienfressinaud/f284a59b18aad395eb0de2d22836ae6b">Gist by marienfressinaud</a></li>
</ul>
<hr />
<p>For more information about this role, visit the GitHub repositories:
- <a href="https://github.com/kevinveenbirkenbach/cymais/tree/master/roles/docker-mailu">Mailu</a>
- <a href="https://github.com/heviat/Mailu-OIDC">Mailu-OIDC</a></p>
<h3>About this Role ✨</h3>
<p>This Mailu Docker role was developed by <strong><a href="https://veen.world">Kevin Veen-Birkenbach</a></strong>.</p>
<p>This <code>README.md</code> was optimized with the help of <a href="https://chat.openai.com">ChatGPT</a>🚀 and this conversations: </p>
<ul>
<li>https://chat.openai.com/share/d1ad5ce7-3aa1-4a14-a959-63393b39374a</li>
<li>https://chatgpt.com/share/67a4bffb-9330-800f-aed5-715c6a8ced2f</li>
</ul></div>
            </section>
            
            <section>
                <h2>Health Docker Container</h2>
                <div><h1>Health Check for Docker Containers</h1>
<h2>Description</h2>
<p>This Ansible role is designed to ensure the health of Docker containers running on a system. It includes a script that checks for unhealthy or exited Docker containers and sets up a systemd service and timer to regularly execute this check.</p>
<h2>Files</h2>
<ul>
<li><code>vars/main.yml</code>: Variable definitions for the script's directory.</li>
<li><code>handlers/main.yml</code>: Handlers to reload and restart the systemd service and timer.</li>
<li><code>files/health-docker-container.sh</code>: The script that checks the container health.</li>
<li><code>tasks/main.yml</code>: Tasks to create necessary directories, copy scripts, and create systemd service and timer.</li>
<li><code>templates/health-docker-container.cymais.service.j2</code>: Systemd service template.</li>
<li><code>templates/health-docker-container.cymais.timer.j2</code>: Systemd timer template.</li>
<li><code>meta/main.yml</code>: Meta information declaring dependencies for the role.</li>
</ul>
<h2>Usage</h2>
<p>To use this role, include it in your playbook and set the <code>path_administrator_scripts</code> variable to the desired path for the health check scripts.</p>
<p>Ensure that the <code>systemd-notifier</code> dependency is satisfied for error notifications.</p></div>
            </section>
            
            <section>
                <h2>Docker Moodle</h2>
                <div><h1>role docker-moodle</h1>
<h2>further information</h2>
<ul>
<li>https://github.com/bitnami/containers/tree/main/bitnami/moodle</li>
</ul></div>
            </section>
            
            <section>
                <h2>Sshd</h2>
                <div><h1>role sshd</h1>
<h2>dependencies</h2>
<p>This role depends on that a well configured user administrator exist.
For this reason this role depends on the role user-administrator.
A wrong configuration of this role can lead to an lockout of the system which just will be reversal via chroot.  </p>
<h2>PAM</h2>
<ul>
<li>https://www.google.com/search?client=firefox-b-d&amp;q=sshd+why+to+deactivate+pam</li>
</ul>
<h1>see</h1>
<ul>
<li>https://man7.org/linux/man-pages/man5/sshd_config.5.html</li>
</ul></div>
            </section>
            
            <section>
                <h2>Driver Intel</h2>
                <div><h1>driver-intel</h1></div>
            </section>
            
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.3.1/reveal.min.js"></script>
    <script> Reveal.initialize(); </script>
</body>
</html>